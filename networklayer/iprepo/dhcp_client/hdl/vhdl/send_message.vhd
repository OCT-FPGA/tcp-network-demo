-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity send_message is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dhcp_requestMetaFifo_1_dout : IN STD_LOGIC_VECTOR (71 downto 0);
    dhcp_requestMetaFifo_1_empty_n : IN STD_LOGIC;
    dhcp_requestMetaFifo_1_read : OUT STD_LOGIC;
    m_axis_tx_data_TREADY : IN STD_LOGIC;
    dataOutMeta_V_TREADY : IN STD_LOGIC;
    dataOutLength_V_V_TREADY : IN STD_LOGIC;
    dataOutMeta_V_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
    dataOutMeta_V_TVALID : OUT STD_LOGIC;
    dataOutLength_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    dataOutLength_V_V_TVALID : OUT STD_LOGIC;
    m_axis_tx_data_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axis_tx_data_TVALID : OUT STD_LOGIC;
    m_axis_tx_data_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axis_tx_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    myMacAddress_V : IN STD_LOGIC_VECTOR (47 downto 0) );
end;


architecture behav of send_message is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_6353826300000000 : STD_LOGIC_VECTOR (63 downto 0) := "0110001101010011100000100110001100000000000000000000000000000000";
    constant ap_const_lv64_800000 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv96_FFFFFFFF0043000000000044 : STD_LOGIC_VECTOR (95 downto 0) := "111111111111111111111111111111110000000001000011000000000000000000000000000000000000000001000100";
    constant ap_const_lv16_12C : STD_LOGIC_VECTOR (15 downto 0) := "0000000100101100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv16_432 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000110010";
    constant ap_const_lv16_135 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100110101";
    constant ap_const_lv64_FF010135 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000011111111000000010000000100110101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_60101 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000001100000000100000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal t_V_load_fu_198_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_nbreadreq_fu_148_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op16_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal t_V_reg_408 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_412 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op54_write_state2 : BOOLEAN;
    signal ap_predicate_op55_write_state2 : BOOLEAN;
    signal ap_predicate_op56_write_state2 : BOOLEAN;
    signal ap_predicate_op58_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal regslice_both_dataOutMeta_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dataOutLength_V_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dataOut_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal t_V_reg_408_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_412_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op72_write_state3 : BOOLEAN;
    signal ap_predicate_op73_write_state3 : BOOLEAN;
    signal ap_predicate_op74_write_state3 : BOOLEAN;
    signal ap_predicate_op76_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sm_wordCount_V : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal meta_type_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal meta_requestedIpAddr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dataOutMeta_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal dataOutLength_V_V_TDATA_blk_n : STD_LOGIC;
    signal m_axis_tx_data_TDATA_blk_n : STD_LOGIC;
    signal dhcp_requestMetaFifo_1_blk_n : STD_LOGIC;
    signal trunc_ln321_fu_244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln321_reg_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_type_V_load_new_s_reg_421 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_requestedIpAddre_reg_426 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_4_fu_318_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_2_fu_345_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_2_fu_363_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_1_fu_375_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_394_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal add_ln700_fu_274_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln879_1_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_i_i_fu_300_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_V_3_fu_310_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_1_fu_329_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln879_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_fu_333_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_9_i_i_fu_354_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln647_fu_372_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal dataOutMeta_V_TVALID_int : STD_LOGIC;
    signal dataOutMeta_V_TREADY_int : STD_LOGIC;
    signal regslice_both_dataOutMeta_V_U_vld_out : STD_LOGIC;
    signal dataOutLength_V_V_TVALID_int : STD_LOGIC;
    signal dataOutLength_V_V_TREADY_int : STD_LOGIC;
    signal regslice_both_dataOutLength_V_V_U_vld_out : STD_LOGIC;
    signal m_axis_tx_data_TDATA_int : STD_LOGIC_VECTOR (63 downto 0);
    signal m_axis_tx_data_TVALID_int : STD_LOGIC;
    signal m_axis_tx_data_TREADY_int : STD_LOGIC;
    signal regslice_both_dataOut_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataOut_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal m_axis_tx_data_TKEEP_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_dataOut_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dataOut_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataOut_V_last_V_U_apdone_blk : STD_LOGIC;
    signal m_axis_tx_data_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_dataOut_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dataOut_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_condition_341 : BOOLEAN;
    signal ap_condition_207 : BOOLEAN;

    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_dataOutMeta_V_U : component regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => ap_const_lv96_FFFFFFFF0043000000000044,
        vld_in => dataOutMeta_V_TVALID_int,
        ack_in => dataOutMeta_V_TREADY_int,
        data_out => dataOutMeta_V_TDATA,
        vld_out => regslice_both_dataOutMeta_V_U_vld_out,
        ack_out => dataOutMeta_V_TREADY,
        apdone_blk => regslice_both_dataOutMeta_V_U_apdone_blk);

    regslice_both_dataOutLength_V_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => ap_const_lv16_12C,
        vld_in => dataOutLength_V_V_TVALID_int,
        ack_in => dataOutLength_V_V_TREADY_int,
        data_out => dataOutLength_V_V_TDATA,
        vld_out => regslice_both_dataOutLength_V_V_U_vld_out,
        ack_out => dataOutLength_V_V_TREADY,
        apdone_blk => regslice_both_dataOutLength_V_V_U_apdone_blk);

    regslice_both_dataOut_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => m_axis_tx_data_TDATA_int,
        vld_in => m_axis_tx_data_TVALID_int,
        ack_in => m_axis_tx_data_TREADY_int,
        data_out => m_axis_tx_data_TDATA,
        vld_out => regslice_both_dataOut_V_data_V_U_vld_out,
        ack_out => m_axis_tx_data_TREADY,
        apdone_blk => regslice_both_dataOut_V_data_V_U_apdone_blk);

    regslice_both_dataOut_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => m_axis_tx_data_TKEEP_int,
        vld_in => m_axis_tx_data_TVALID_int,
        ack_in => regslice_both_dataOut_V_keep_V_U_ack_in_dummy,
        data_out => m_axis_tx_data_TKEEP,
        vld_out => regslice_both_dataOut_V_keep_V_U_vld_out,
        ack_out => m_axis_tx_data_TREADY,
        apdone_blk => regslice_both_dataOut_V_keep_V_U_apdone_blk);

    regslice_both_dataOut_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => m_axis_tx_data_TLAST_int,
        vld_in => m_axis_tx_data_TVALID_int,
        ack_in => regslice_both_dataOut_V_last_V_U_ack_in_dummy,
        data_out => m_axis_tx_data_TLAST,
        vld_out => regslice_both_dataOut_V_last_V_U_vld_out,
        ack_out => m_axis_tx_data_TREADY,
        apdone_blk => regslice_both_dataOut_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    sm_wordCount_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_207)) then
                if ((ap_const_boolean_1 = ap_condition_341)) then 
                    sm_wordCount_V <= add_ln700_fu_274_p2;
                elsif (((tmp_nbreadreq_fu_148_p3 = ap_const_lv1_1) and (sm_wordCount_V = ap_const_lv6_0))) then 
                    sm_wordCount_V <= ap_const_lv6_1;
                elsif ((t_V_load_fu_198_p1 = ap_const_lv6_1)) then 
                    sm_wordCount_V <= ap_const_lv6_2;
                elsif ((t_V_load_fu_198_p1 = ap_const_lv6_3)) then 
                    sm_wordCount_V <= ap_const_lv6_4;
                elsif ((t_V_load_fu_198_p1 = ap_const_lv6_4)) then 
                    sm_wordCount_V <= ap_const_lv6_5;
                elsif ((t_V_load_fu_198_p1 = ap_const_lv6_1D)) then 
                    sm_wordCount_V <= ap_const_lv6_1E;
                elsif ((t_V_load_fu_198_p1 = ap_const_lv6_1E)) then 
                    sm_wordCount_V <= ap_const_lv6_1F;
                elsif ((t_V_load_fu_198_p1 = ap_const_lv6_1F)) then 
                    sm_wordCount_V <= ap_const_lv6_20;
                elsif ((t_V_load_fu_198_p1 = ap_const_lv6_25)) then 
                    sm_wordCount_V <= ap_const_lv6_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_412 = ap_const_lv1_1) and (t_V_reg_408 = ap_const_lv6_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                meta_requestedIpAddr <= tmp_requestedIpAddre_reg_426;
                meta_type_V <= tmp_type_V_load_new_s_reg_421;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                t_V_reg_408 <= sm_wordCount_V;
                t_V_reg_408_pp0_iter1_reg <= t_V_reg_408;
                tmp_reg_412_pp0_iter1_reg <= tmp_reg_412;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sm_wordCount_V = ap_const_lv6_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_412 <= tmp_nbreadreq_fu_148_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_148_p3 = ap_const_lv1_1) and (sm_wordCount_V = ap_const_lv6_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_requestedIpAddre_reg_426 <= dhcp_requestMetaFifo_1_dout(71 downto 40);
                tmp_type_V_load_new_s_reg_421 <= dhcp_requestMetaFifo_1_dout(39 downto 32);
                trunc_ln321_reg_416 <= trunc_ln321_fu_244_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln700_fu_274_p2 <= std_logic_vector(unsigned(sm_wordCount_V) + unsigned(ap_const_lv6_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, dhcp_requestMetaFifo_1_empty_n, ap_predicate_op16_read_state1, regslice_both_dataOutMeta_V_U_apdone_blk, regslice_both_dataOutLength_V_V_U_apdone_blk, regslice_both_dataOut_V_data_V_U_apdone_blk)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((dhcp_requestMetaFifo_1_empty_n = ap_const_logic_0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_dataOut_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_dataOutLength_V_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_dataOutMeta_V_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, dhcp_requestMetaFifo_1_empty_n, ap_predicate_op16_read_state1, ap_block_state2_io, regslice_both_dataOutMeta_V_U_apdone_blk, regslice_both_dataOutLength_V_V_U_apdone_blk, regslice_both_dataOut_V_data_V_U_apdone_blk, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((dhcp_requestMetaFifo_1_empty_n = ap_const_logic_0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_dataOut_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_dataOutLength_V_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_dataOutMeta_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, dhcp_requestMetaFifo_1_empty_n, ap_predicate_op16_read_state1, ap_block_state2_io, regslice_both_dataOutMeta_V_U_apdone_blk, regslice_both_dataOutLength_V_V_U_apdone_blk, regslice_both_dataOut_V_data_V_U_apdone_blk, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((dhcp_requestMetaFifo_1_empty_n = ap_const_logic_0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_dataOut_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_dataOutLength_V_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_dataOutMeta_V_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, dhcp_requestMetaFifo_1_empty_n, ap_predicate_op16_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((dhcp_requestMetaFifo_1_empty_n = ap_const_logic_0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_io_assign_proc : process(t_V_reg_408, ap_predicate_op54_write_state2, ap_predicate_op55_write_state2, ap_predicate_op56_write_state2, ap_predicate_op58_write_state2, dataOutMeta_V_TREADY_int, dataOutLength_V_V_TREADY_int, m_axis_tx_data_TREADY_int)
    begin
                ap_block_state2_io <= (((dataOutMeta_V_TREADY_int = ap_const_logic_0) and (ap_predicate_op55_write_state2 = ap_const_boolean_1)) or ((m_axis_tx_data_TREADY_int = ap_const_logic_0) and (ap_predicate_op54_write_state2 = ap_const_boolean_1)) or ((t_V_reg_408 = ap_const_lv6_1) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408 = ap_const_lv6_3) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408 = ap_const_lv6_4) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408 = ap_const_lv6_1D) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408 = ap_const_lv6_1E) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408 = ap_const_lv6_1F) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408 = ap_const_lv6_25) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((m_axis_tx_data_TREADY_int = ap_const_logic_0) and (ap_predicate_op58_write_state2 = ap_const_boolean_1)) or ((dataOutLength_V_V_TREADY_int = ap_const_logic_0) and (ap_predicate_op56_write_state2 = ap_const_boolean_1)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(t_V_reg_408_pp0_iter1_reg, ap_predicate_op72_write_state3, ap_predicate_op73_write_state3, ap_predicate_op74_write_state3, ap_predicate_op76_write_state3, dataOutMeta_V_TREADY_int, dataOutLength_V_V_TREADY_int, m_axis_tx_data_TREADY_int)
    begin
                ap_block_state3_io <= (((m_axis_tx_data_TREADY_int = ap_const_logic_0) and (ap_predicate_op76_write_state3 = ap_const_boolean_1)) or ((dataOutLength_V_V_TREADY_int = ap_const_logic_0) and (ap_predicate_op74_write_state3 = ap_const_boolean_1)) or ((dataOutMeta_V_TREADY_int = ap_const_logic_0) and (ap_predicate_op73_write_state3 = ap_const_boolean_1)) or ((m_axis_tx_data_TREADY_int = ap_const_logic_0) and (ap_predicate_op72_write_state3 = ap_const_boolean_1)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_3) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_4) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1D) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1E) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1F) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_25) and (m_axis_tx_data_TREADY_int = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(regslice_both_dataOutMeta_V_U_apdone_blk, regslice_both_dataOutLength_V_V_U_apdone_blk, regslice_both_dataOut_V_data_V_U_apdone_blk)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((regslice_both_dataOut_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_dataOutLength_V_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_dataOutMeta_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_condition_207_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_207 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_341_assign_proc : process(t_V_load_fu_198_p1, sm_wordCount_V)
    begin
                ap_condition_341 <= (not((sm_wordCount_V = ap_const_lv6_0)) and not((t_V_load_fu_198_p1 = ap_const_lv6_1)) and not((t_V_load_fu_198_p1 = ap_const_lv6_3)) and not((t_V_load_fu_198_p1 = ap_const_lv6_4)) and not((t_V_load_fu_198_p1 = ap_const_lv6_1D)) and not((t_V_load_fu_198_p1 = ap_const_lv6_1E)) and not((t_V_load_fu_198_p1 = ap_const_lv6_1F)) and not((t_V_load_fu_198_p1 = ap_const_lv6_25)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op16_read_state1_assign_proc : process(tmp_nbreadreq_fu_148_p3, sm_wordCount_V)
    begin
                ap_predicate_op16_read_state1 <= ((tmp_nbreadreq_fu_148_p3 = ap_const_lv1_1) and (sm_wordCount_V = ap_const_lv6_0));
    end process;


    ap_predicate_op54_write_state2_assign_proc : process(t_V_reg_408, tmp_reg_412)
    begin
                ap_predicate_op54_write_state2 <= ((tmp_reg_412 = ap_const_lv1_1) and (t_V_reg_408 = ap_const_lv6_0));
    end process;


    ap_predicate_op55_write_state2_assign_proc : process(t_V_reg_408, tmp_reg_412)
    begin
                ap_predicate_op55_write_state2 <= ((tmp_reg_412 = ap_const_lv1_1) and (t_V_reg_408 = ap_const_lv6_0));
    end process;


    ap_predicate_op56_write_state2_assign_proc : process(t_V_reg_408, tmp_reg_412)
    begin
                ap_predicate_op56_write_state2 <= ((tmp_reg_412 = ap_const_lv1_1) and (t_V_reg_408 = ap_const_lv6_0));
    end process;


    ap_predicate_op58_write_state2_assign_proc : process(t_V_reg_408)
    begin
                ap_predicate_op58_write_state2 <= (not((t_V_reg_408 = ap_const_lv6_0)) and not((t_V_reg_408 = ap_const_lv6_1)) and not((t_V_reg_408 = ap_const_lv6_3)) and not((t_V_reg_408 = ap_const_lv6_4)) and not((t_V_reg_408 = ap_const_lv6_1D)) and not((t_V_reg_408 = ap_const_lv6_1E)) and not((t_V_reg_408 = ap_const_lv6_1F)) and not((t_V_reg_408 = ap_const_lv6_25)));
    end process;


    ap_predicate_op72_write_state3_assign_proc : process(t_V_reg_408_pp0_iter1_reg, tmp_reg_412_pp0_iter1_reg)
    begin
                ap_predicate_op72_write_state3 <= ((tmp_reg_412_pp0_iter1_reg = ap_const_lv1_1) and (t_V_reg_408_pp0_iter1_reg = ap_const_lv6_0));
    end process;


    ap_predicate_op73_write_state3_assign_proc : process(t_V_reg_408_pp0_iter1_reg, tmp_reg_412_pp0_iter1_reg)
    begin
                ap_predicate_op73_write_state3 <= ((tmp_reg_412_pp0_iter1_reg = ap_const_lv1_1) and (t_V_reg_408_pp0_iter1_reg = ap_const_lv6_0));
    end process;


    ap_predicate_op74_write_state3_assign_proc : process(t_V_reg_408_pp0_iter1_reg, tmp_reg_412_pp0_iter1_reg)
    begin
                ap_predicate_op74_write_state3 <= ((tmp_reg_412_pp0_iter1_reg = ap_const_lv1_1) and (t_V_reg_408_pp0_iter1_reg = ap_const_lv6_0));
    end process;


    ap_predicate_op76_write_state3_assign_proc : process(t_V_reg_408_pp0_iter1_reg)
    begin
                ap_predicate_op76_write_state3 <= (not((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_0)) and not((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1)) and not((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_3)) and not((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_4)) and not((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1D)) and not((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1E)) and not((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1F)) and not((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_25)));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    dataOutLength_V_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op56_write_state2, ap_predicate_op74_write_state3, ap_block_pp0_stage0, dataOutLength_V_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op56_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op74_write_state3 = ap_const_boolean_1)))) then 
            dataOutLength_V_V_TDATA_blk_n <= dataOutLength_V_V_TREADY_int;
        else 
            dataOutLength_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dataOutLength_V_V_TVALID <= regslice_both_dataOutLength_V_V_U_vld_out;

    dataOutLength_V_V_TVALID_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op56_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op56_write_state2 = ap_const_boolean_1))) then 
            dataOutLength_V_V_TVALID_int <= ap_const_logic_1;
        else 
            dataOutLength_V_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    dataOutMeta_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op55_write_state2, ap_predicate_op73_write_state3, ap_block_pp0_stage0, dataOutMeta_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op55_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op73_write_state3 = ap_const_boolean_1)))) then 
            dataOutMeta_V_TDATA_blk_n <= dataOutMeta_V_TREADY_int;
        else 
            dataOutMeta_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dataOutMeta_V_TVALID <= regslice_both_dataOutMeta_V_U_vld_out;

    dataOutMeta_V_TVALID_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op55_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op55_write_state2 = ap_const_boolean_1))) then 
            dataOutMeta_V_TVALID_int <= ap_const_logic_1;
        else 
            dataOutMeta_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    dhcp_requestMetaFifo_1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, dhcp_requestMetaFifo_1_empty_n, ap_predicate_op16_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1))) then 
            dhcp_requestMetaFifo_1_blk_n <= dhcp_requestMetaFifo_1_empty_n;
        else 
            dhcp_requestMetaFifo_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dhcp_requestMetaFifo_1_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op16_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1))) then 
            dhcp_requestMetaFifo_1_read <= ap_const_logic_1;
        else 
            dhcp_requestMetaFifo_1_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln879_1_fu_294_p2 <= "1" when (meta_type_V = ap_const_lv8_3) else "0";
    icmp_ln879_fu_323_p2 <= "1" when (meta_type_V = ap_const_lv8_1) else "0";

    m_axis_tx_data_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, t_V_reg_408, ap_predicate_op54_write_state2, ap_predicate_op58_write_state2, t_V_reg_408_pp0_iter1_reg, ap_predicate_op72_write_state3, ap_predicate_op76_write_state3, ap_block_pp0_stage0, m_axis_tx_data_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op76_write_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op54_write_state2 = ap_const_boolean_1)) or ((t_V_reg_408 = ap_const_lv6_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_3) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_4) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1D) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1E) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1F) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_25) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op58_write_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op72_write_state3 = ap_const_boolean_1)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_3) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_4) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1D) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1E) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_1F) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((t_V_reg_408_pp0_iter1_reg = ap_const_lv6_25) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            m_axis_tx_data_TDATA_blk_n <= m_axis_tx_data_TREADY_int;
        else 
            m_axis_tx_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    m_axis_tx_data_TDATA_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, t_V_reg_408, ap_predicate_op54_write_state2, ap_predicate_op58_write_state2, tmp_data_V_4_fu_318_p1, tmp_data_V_2_fu_345_p3, p_Result_2_fu_363_p3, p_Result_1_fu_375_p3, p_Result_s_fu_394_p3, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op54_write_state2 = ap_const_boolean_1))) then 
            m_axis_tx_data_TDATA_int <= p_Result_s_fu_394_p3;
        elsif (((t_V_reg_408 = ap_const_lv6_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axis_tx_data_TDATA_int <= ap_const_lv64_800000;
        elsif (((t_V_reg_408 = ap_const_lv6_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axis_tx_data_TDATA_int <= p_Result_1_fu_375_p3;
        elsif (((t_V_reg_408 = ap_const_lv6_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axis_tx_data_TDATA_int <= p_Result_2_fu_363_p3;
        elsif (((t_V_reg_408 = ap_const_lv6_1D) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axis_tx_data_TDATA_int <= ap_const_lv64_6353826300000000;
        elsif (((t_V_reg_408 = ap_const_lv6_1E) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axis_tx_data_TDATA_int <= tmp_data_V_2_fu_345_p3;
        elsif (((t_V_reg_408 = ap_const_lv6_1F) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axis_tx_data_TDATA_int <= tmp_data_V_4_fu_318_p1;
        elsif ((((t_V_reg_408 = ap_const_lv6_25) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op58_write_state2 = ap_const_boolean_1)))) then 
            m_axis_tx_data_TDATA_int <= ap_const_lv64_0;
        else 
            m_axis_tx_data_TDATA_int <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axis_tx_data_TKEEP_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, t_V_reg_408, ap_predicate_op54_write_state2, ap_predicate_op58_write_state2, ap_block_pp0_stage0_01001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op54_write_state2 = ap_const_boolean_1)) or ((t_V_reg_408 = ap_const_lv6_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1D) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1E) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1F) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op58_write_state2 = ap_const_boolean_1)))) then 
            m_axis_tx_data_TKEEP_int <= ap_const_lv8_FF;
        elsif (((t_V_reg_408 = ap_const_lv6_25) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axis_tx_data_TKEEP_int <= ap_const_lv8_F;
        else 
            m_axis_tx_data_TKEEP_int <= "XXXXXXXX";
        end if; 
    end process;


    m_axis_tx_data_TLAST_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, t_V_reg_408, ap_predicate_op54_write_state2, ap_predicate_op58_write_state2, ap_block_pp0_stage0_01001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op54_write_state2 = ap_const_boolean_1)) or ((t_V_reg_408 = ap_const_lv6_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1D) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1E) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1F) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op58_write_state2 = ap_const_boolean_1)))) then 
            m_axis_tx_data_TLAST_int <= ap_const_lv1_0;
        elsif (((t_V_reg_408 = ap_const_lv6_25) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axis_tx_data_TLAST_int <= ap_const_lv1_1;
        else 
            m_axis_tx_data_TLAST_int <= "X";
        end if; 
    end process;

    m_axis_tx_data_TVALID <= regslice_both_dataOut_V_data_V_U_vld_out;

    m_axis_tx_data_TVALID_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, t_V_reg_408, ap_predicate_op54_write_state2, ap_predicate_op58_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op54_write_state2 = ap_const_boolean_1)) or ((t_V_reg_408 = ap_const_lv6_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_1F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((t_V_reg_408 = ap_const_lv6_25) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op58_write_state2 = ap_const_boolean_1)))) then 
            m_axis_tx_data_TVALID_int <= ap_const_logic_1;
        else 
            m_axis_tx_data_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_375_p3 <= (trunc_ln647_fu_372_p1 & ap_const_lv32_0);
    p_Result_2_fu_363_p3 <= (ap_const_lv48_0 & p_Result_9_i_i_fu_354_p4);
    p_Result_2_i_i_fu_300_p4 <= meta_requestedIpAddr(31 downto 24);
    p_Result_3_fu_333_p5 <= (((trunc_ln647_1_fu_329_p1 & ap_const_lv16_432) & meta_type_V) & ap_const_lv16_135);
    p_Result_9_i_i_fu_354_p4 <= myMacAddress_V(47 downto 32);
    p_Result_s_fu_394_p3 <= (trunc_ln321_reg_416 & ap_const_lv32_60101);
    t_V_load_fu_198_p1 <= sm_wordCount_V;
    tmp_data_V_2_fu_345_p3 <= 
        ap_const_lv64_FF010135 when (icmp_ln879_fu_323_p2(0) = '1') else 
        p_Result_3_fu_333_p5;
    tmp_data_V_3_fu_310_p3 <= 
        p_Result_2_i_i_fu_300_p4 when (icmp_ln879_1_fu_294_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_data_V_4_fu_318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_V_3_fu_310_p3),64));
    tmp_nbreadreq_fu_148_p3 <= (0=>(dhcp_requestMetaFifo_1_empty_n), others=>'-');
    trunc_ln321_fu_244_p1 <= dhcp_requestMetaFifo_1_dout(32 - 1 downto 0);
    trunc_ln647_1_fu_329_p1 <= meta_requestedIpAddr(24 - 1 downto 0);
    trunc_ln647_fu_372_p1 <= myMacAddress_V(32 - 1 downto 0);
end behav;
