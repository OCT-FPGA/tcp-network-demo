-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity open_dhcp_port is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    confirmPortStatus_V_TVALID : IN STD_LOGIC;
    openPort_V_V_TREADY : IN STD_LOGIC;
    portOpen_V_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    portOpen_V_V_full_n : IN STD_LOGIC;
    portOpen_V_V_write : OUT STD_LOGIC;
    openPort_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    openPort_V_V_TVALID : OUT STD_LOGIC;
    confirmPortStatus_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    confirmPortStatus_V_TREADY : OUT STD_LOGIC );
end;


architecture behav of open_dhcp_port is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_44 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln879_fu_94_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_nbwritereq_fu_52_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op19_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op14_write_state1 : BOOLEAN;
    signal ap_block_state1_io : BOOLEAN;
    signal icmp_ln879_reg_148 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_reg_160 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_reg_152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op28_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal openPortWaitTime_V : STD_LOGIC_VECTOR (31 downto 0) := "00101100101111111000110000011110";
    signal odp_listenDone : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal odp_waitListenStatus : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal openPort_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal confirmPortStatus_V_TDATA_blk_n : STD_LOGIC;
    signal portOpen_V_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal add_ln701_fu_100_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_138_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_2_nbreadreq_fu_68_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((or_ln46_fu_120_p2 = ap_const_lv1_1) and (icmp_ln879_fu_94_p2 = ap_const_lv1_1)) or ((tmp_nbwritereq_fu_52_p3 = ap_const_lv1_0) and (icmp_ln879_fu_94_p2 = ap_const_lv1_1))))) then
                and_ln50_reg_160 <= and_ln50_fu_132_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_reg_148 <= icmp_ln879_fu_94_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((or_ln46_fu_120_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln50_fu_132_p2) and (icmp_ln879_fu_94_p2 = ap_const_lv1_1)) or ((tmp_nbwritereq_fu_52_p3 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln50_fu_132_p2) and (icmp_ln879_fu_94_p2 = ap_const_lv1_1))))) then
                odp_listenDone <= tmp_3_fu_138_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln46_fu_120_p2 = ap_const_lv1_0) and (tmp_nbwritereq_fu_52_p3 = ap_const_lv1_1) and (icmp_ln879_fu_94_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                odp_waitListenStatus <= ap_const_lv1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_fu_94_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                openPortWaitTime_V <= add_ln701_fu_100_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_fu_94_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_ln46_reg_152 <= or_ln46_fu_120_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln46_fu_120_p2 = ap_const_lv1_0) and (icmp_ln879_fu_94_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_156 <= (0=>openPort_V_V_TREADY, others=>'-');
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln701_fu_100_p2 <= std_logic_vector(unsigned(openPortWaitTime_V) + unsigned(ap_const_lv32_FFFFFFFF));
    and_ln50_fu_132_p2 <= (tmp_2_nbreadreq_fu_68_p3 and odp_waitListenStatus);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, confirmPortStatus_V_TVALID, ap_predicate_op19_read_state1, portOpen_V_V_full_n, ap_predicate_op28_write_state2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((portOpen_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op28_write_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((confirmPortStatus_V_TVALID = ap_const_logic_0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, confirmPortStatus_V_TVALID, ap_predicate_op19_read_state1, ap_block_state1_io, portOpen_V_V_full_n, ap_predicate_op28_write_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((portOpen_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op28_write_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (ap_done_reg = ap_const_logic_1) or ((confirmPortStatus_V_TVALID = ap_const_logic_0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, confirmPortStatus_V_TVALID, ap_predicate_op19_read_state1, ap_block_state1_io, portOpen_V_V_full_n, ap_predicate_op28_write_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((portOpen_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op28_write_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (ap_done_reg = ap_const_logic_1) or ((confirmPortStatus_V_TVALID = ap_const_logic_0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_io_assign_proc : process(openPort_V_V_TREADY, ap_predicate_op14_write_state1)
    begin
                ap_block_state1_io <= ((openPort_V_V_TREADY = ap_const_logic_0) and (ap_predicate_op14_write_state1 = ap_const_boolean_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, confirmPortStatus_V_TVALID, ap_predicate_op19_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((confirmPortStatus_V_TVALID = ap_const_logic_0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(portOpen_V_V_full_n, ap_predicate_op28_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((portOpen_V_V_full_n = ap_const_logic_0) and (ap_predicate_op28_write_state2 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op14_write_state1_assign_proc : process(icmp_ln879_fu_94_p2, tmp_nbwritereq_fu_52_p3, or_ln46_fu_120_p2)
    begin
                ap_predicate_op14_write_state1 <= ((or_ln46_fu_120_p2 = ap_const_lv1_0) and (tmp_nbwritereq_fu_52_p3 = ap_const_lv1_1) and (icmp_ln879_fu_94_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op19_read_state1_assign_proc : process(icmp_ln879_fu_94_p2, tmp_nbwritereq_fu_52_p3, and_ln50_fu_132_p2, or_ln46_fu_120_p2)
    begin
                ap_predicate_op19_read_state1 <= (((or_ln46_fu_120_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln50_fu_132_p2) and (icmp_ln879_fu_94_p2 = ap_const_lv1_1)) or ((tmp_nbwritereq_fu_52_p3 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln50_fu_132_p2) and (icmp_ln879_fu_94_p2 = ap_const_lv1_1)));
    end process;


    ap_predicate_op28_write_state2_assign_proc : process(icmp_ln879_reg_148, tmp_reg_156, and_ln50_reg_160, or_ln46_reg_152)
    begin
                ap_predicate_op28_write_state2 <= (((or_ln46_reg_152 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln50_reg_160) and (icmp_ln879_reg_148 = ap_const_lv1_1)) or ((tmp_reg_156 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln50_reg_160) and (icmp_ln879_reg_148 = ap_const_lv1_1)));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    confirmPortStatus_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, confirmPortStatus_V_TVALID, ap_predicate_op19_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            confirmPortStatus_V_TDATA_blk_n <= confirmPortStatus_V_TVALID;
        else 
            confirmPortStatus_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    confirmPortStatus_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op19_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op19_read_state1 = ap_const_boolean_1))) then 
            confirmPortStatus_V_TREADY <= ap_const_logic_1;
        else 
            confirmPortStatus_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln879_fu_94_p2 <= "1" when (openPortWaitTime_V = ap_const_lv32_0) else "0";
    openPort_V_V_TDATA <= ap_const_lv16_44;

    openPort_V_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, openPort_V_V_TREADY, ap_predicate_op14_write_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op14_write_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            openPort_V_V_TDATA_blk_n <= openPort_V_V_TREADY;
        else 
            openPort_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    openPort_V_V_TVALID_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op14_write_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op14_write_state1 = ap_const_boolean_1))) then 
            openPort_V_V_TVALID <= ap_const_logic_1;
        else 
            openPort_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    or_ln46_fu_120_p2 <= (odp_waitListenStatus or odp_listenDone);

    portOpen_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, portOpen_V_V_full_n, ap_predicate_op28_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op28_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            portOpen_V_V_blk_n <= portOpen_V_V_full_n;
        else 
            portOpen_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    portOpen_V_V_din <= ap_const_lv1_1;

    portOpen_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op28_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op28_write_state2 = ap_const_boolean_1))) then 
            portOpen_V_V_write <= ap_const_logic_1;
        else 
            portOpen_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_nbreadreq_fu_68_p3 <= (0=>(confirmPortStatus_V_TVALID), others=>'-');
    tmp_3_fu_138_p1 <= confirmPortStatus_V_TDATA(1 - 1 downto 0);
    tmp_nbwritereq_fu_52_p3 <= (0=>openPort_V_V_TREADY, others=>'-');
end behav;
