-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dhcp_fsm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dhcp_replyMetaFifo_V_dout : IN STD_LOGIC_VECTOR (103 downto 0);
    dhcp_replyMetaFifo_V_empty_n : IN STD_LOGIC;
    dhcp_replyMetaFifo_V_read : OUT STD_LOGIC;
    portOpen_V_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    portOpen_V_V_empty_n : IN STD_LOGIC;
    portOpen_V_V_read : OUT STD_LOGIC;
    dhcp_requestMetaFifo_1_din : OUT STD_LOGIC_VECTOR (71 downto 0);
    dhcp_requestMetaFifo_1_full_n : IN STD_LOGIC;
    dhcp_requestMetaFifo_1_write : OUT STD_LOGIC;
    ipAddressOut_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    ipAddressOut_V_ap_vld : OUT STD_LOGIC;
    dhcpEnable_V : IN STD_LOGIC_VECTOR (0 downto 0);
    inputIpAddress_V : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of dhcp_fsm is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_2CBF8C1E : STD_LOGIC_VECTOR (31 downto 0) := "00101100101111111000110000011110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv40_1 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal state_load_load_fu_245_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nbreadreq_fu_112_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op11_read_state1 : BOOLEAN;
    signal ap_predicate_op21_read_state1 : BOOLEAN;
    signal ap_predicate_op38_read_state1 : BOOLEAN;
    signal tmp_nbreadreq_fu_126_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op66_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal state_load_reg_395 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_reg_445 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_reg_459 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_10_reg_463 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op91_write_state2 : BOOLEAN;
    signal dhcpEnable_V_read_read_fu_106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_467 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op96_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal myIpAddress_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal state : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal time_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    signal randomValue_V : STD_LOGIC_VECTOR (31 downto 0) := "00110100101010101101001101001011";
    signal myIdentity_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal IpAddressBuffer_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal portOpen_V_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal dhcp_requestMetaFifo_1_blk_n : STD_LOGIC;
    signal dhcp_replyMetaFifo_V_blk_n : STD_LOGIC;
    signal tmp_identifier_V_reg_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal myIdentity_V_load_reg_420 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_429 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_9_fu_203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_8_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_8_reg_437 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_11_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_11_reg_441 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_requestedIpAddre_reg_453 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_6_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_10_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln214_fu_334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_storemerge_i_phi_fu_157_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_i_reg_154 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_storemerge220_i_phi_fu_168_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge220_i_reg_165 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_1_reg_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_t_V_1_reg_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln290_fu_312_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_213_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln700_fu_383_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_identifier_V : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_366_p4 : STD_LOGIC_VECTOR (71 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp22_fu_375_p3 : STD_LOGIC_VECTOR (71 downto 0);
    signal trunc_ln321_1_fu_264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_224_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_identifier_V_1_fu_286_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln214_fu_328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_200 : BOOLEAN;
    signal ap_condition_187 : BOOLEAN;
    signal ap_condition_322 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_t_V_1_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_208_p2 = ap_const_lv1_1) and (dhcpEnable_V = ap_const_lv1_1) and (state_load_load_fu_245_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_t_V_1_reg_176 <= xor_ln214_fu_334_p2;
            elsif ((((state = ap_const_lv3_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((state = ap_const_lv3_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((state = ap_const_lv3_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((state = ap_const_lv3_4) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and ((state_load_load_fu_245_p1 = ap_const_lv3_5) or ((state_load_load_fu_245_p1 = ap_const_lv3_6) or (state_load_load_fu_245_p1 = ap_const_lv3_7)))) or ((state_load_load_fu_245_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (dhcpEnable_V_read_read_fu_106_p2 = ap_const_lv1_0)) or ((dhcpEnable_V = ap_const_lv1_1) and (state_load_load_fu_245_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_208_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter1_t_V_1_reg_176 <= ap_sig_allocacmp_tmp_identifier_V;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_t_V_1_reg_176 <= ap_phi_reg_pp0_iter0_t_V_1_reg_176;
            end if; 
        end if;
    end process;

    myIpAddress_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((state_load_reg_395 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((state_load_reg_395 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                myIpAddress_V <= inputIpAddress_V;
            elsif (((state_load_reg_395 = ap_const_lv3_3) and (icmp_ln879_11_reg_441 = ap_const_lv1_1) and (icmp_ln879_8_reg_437 = ap_const_lv1_1) and (tmp_5_reg_429 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                myIpAddress_V <= IpAddressBuffer_V;
            end if; 
        end if;
    end process;

    state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_208_p2 = ap_const_lv1_1) and (dhcpEnable_V = ap_const_lv1_1) and (state_load_load_fu_245_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                state <= ap_const_lv3_2;
            elsif (((icmp_ln879_6_fu_300_p2 = ap_const_lv1_1) and (grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                state <= zext_ln290_fu_312_p1;
            elsif (((icmp_ln879_8_fu_268_p2 = ap_const_lv1_1) and (grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                state <= ap_phi_mux_storemerge_i_phi_fu_157_p4;
            elsif ((((tmp_nbreadreq_fu_126_p3 = ap_const_lv1_1) and (state = ap_const_lv3_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_fu_208_p2 = ap_const_lv1_1) and (grp_nbreadreq_fu_112_p3 = ap_const_lv1_0) and (state = ap_const_lv3_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln879_9_fu_203_p2 = ap_const_lv1_1) and (grp_nbreadreq_fu_112_p3 = ap_const_lv1_0) and (state = ap_const_lv3_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((state = ap_const_lv3_4) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (dhcpEnable_V_read_read_fu_106_p2 = ap_const_lv1_0)))) then 
                state <= ap_const_lv3_1;
            end if; 
        end if;
    end process;

    time_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln879_10_fu_306_p2 = ap_const_lv1_1) and (icmp_ln879_6_fu_300_p2 = ap_const_lv1_1) and (grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_fu_208_p2 = ap_const_lv1_1) and (dhcpEnable_V = ap_const_lv1_1) and (state_load_load_fu_245_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                time_V <= ap_const_lv32_2CBF8C1E;
            elsif ((((grp_nbreadreq_fu_112_p3 = ap_const_lv1_0) and (state = ap_const_lv3_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_208_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_nbreadreq_fu_112_p3 = ap_const_lv1_0) and (state = ap_const_lv3_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln879_9_fu_203_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((dhcpEnable_V = ap_const_lv1_1) and (state_load_load_fu_245_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_208_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                time_V <= grp_fu_213_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state_load_reg_395 = ap_const_lv3_2) and (icmp_ln879_10_reg_463 = ap_const_lv1_1) and (icmp_ln879_6_reg_459 = ap_const_lv1_1) and (tmp_4_reg_445 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                IpAddressBuffer_V <= tmp_requestedIpAddre_reg_453;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_6_fu_300_p2 = ap_const_lv1_1) and (grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln879_10_reg_463 <= icmp_ln879_10_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_8_fu_268_p2 = ap_const_lv1_1) and (grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln879_11_reg_441 <= icmp_ln879_11_fu_274_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln879_6_reg_459 <= icmp_ln879_6_fu_300_p2;
                tmp_requestedIpAddre_reg_453 <= dhcp_replyMetaFifo_V_dout(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln879_8_reg_437 <= icmp_ln879_8_fu_268_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((dhcpEnable_V = ap_const_lv1_1) and (state_load_load_fu_245_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln879_reg_467 <= grp_fu_208_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_208_p2 = ap_const_lv1_1) and (dhcpEnable_V = ap_const_lv1_1) and (state_load_load_fu_245_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                myIdentity_V <= ap_sig_allocacmp_tmp_identifier_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                myIdentity_V_load_reg_420 <= myIdentity_V;
                state_load_reg_395 <= state;
                tmp_identifier_V_reg_408 <= ap_sig_allocacmp_tmp_identifier_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                randomValue_V <= add_ln700_fu_383_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state = ap_const_lv3_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_4_reg_445 <= grp_nbreadreq_fu_112_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((state = ap_const_lv3_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_5_reg_429 <= grp_nbreadreq_fu_112_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln700_fu_383_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter1_t_V_1_reg_176) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, dhcp_replyMetaFifo_V_empty_n, ap_predicate_op11_read_state1, ap_predicate_op21_read_state1, ap_predicate_op38_read_state1, portOpen_V_V_empty_n, ap_predicate_op66_read_state1, dhcp_requestMetaFifo_1_full_n, ap_predicate_op91_write_state2, ap_predicate_op96_write_state2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((portOpen_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op66_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((dhcp_requestMetaFifo_1_full_n = ap_const_logic_0) and (ap_predicate_op91_write_state2 = ap_const_boolean_1)) or ((dhcp_requestMetaFifo_1_full_n = ap_const_logic_0) and (ap_predicate_op96_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, dhcp_replyMetaFifo_V_empty_n, ap_predicate_op11_read_state1, ap_predicate_op21_read_state1, ap_predicate_op38_read_state1, portOpen_V_V_empty_n, ap_predicate_op66_read_state1, dhcp_requestMetaFifo_1_full_n, ap_predicate_op91_write_state2, ap_predicate_op96_write_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((portOpen_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op66_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((dhcp_requestMetaFifo_1_full_n = ap_const_logic_0) and (ap_predicate_op91_write_state2 = ap_const_boolean_1)) or ((dhcp_requestMetaFifo_1_full_n = ap_const_logic_0) and (ap_predicate_op96_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, dhcp_replyMetaFifo_V_empty_n, ap_predicate_op11_read_state1, ap_predicate_op21_read_state1, ap_predicate_op38_read_state1, portOpen_V_V_empty_n, ap_predicate_op66_read_state1, dhcp_requestMetaFifo_1_full_n, ap_predicate_op91_write_state2, ap_predicate_op96_write_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((portOpen_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op66_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((dhcp_requestMetaFifo_1_full_n = ap_const_logic_0) and (ap_predicate_op91_write_state2 = ap_const_boolean_1)) or ((dhcp_requestMetaFifo_1_full_n = ap_const_logic_0) and (ap_predicate_op96_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, dhcp_replyMetaFifo_V_empty_n, ap_predicate_op11_read_state1, ap_predicate_op21_read_state1, ap_predicate_op38_read_state1, portOpen_V_V_empty_n, ap_predicate_op66_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((portOpen_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op66_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1)) or ((dhcp_replyMetaFifo_V_empty_n = ap_const_logic_0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(dhcp_requestMetaFifo_1_full_n, ap_predicate_op91_write_state2, ap_predicate_op96_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((dhcp_requestMetaFifo_1_full_n = ap_const_logic_0) and (ap_predicate_op91_write_state2 = ap_const_boolean_1)) or ((dhcp_requestMetaFifo_1_full_n = ap_const_logic_0) and (ap_predicate_op96_write_state2 = ap_const_boolean_1)));
    end process;


    ap_condition_187_assign_proc : process(grp_nbreadreq_fu_112_p3, state, icmp_ln879_8_fu_268_p2)
    begin
                ap_condition_187 <= ((icmp_ln879_8_fu_268_p2 = ap_const_lv1_1) and (grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_3));
    end process;


    ap_condition_200_assign_proc : process(grp_nbreadreq_fu_112_p3, state, icmp_ln879_6_fu_300_p2)
    begin
                ap_condition_200 <= ((icmp_ln879_6_fu_300_p2 = ap_const_lv1_1) and (grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_2));
    end process;


    ap_condition_322_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_322 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge220_i_phi_fu_168_p4_assign_proc : process(icmp_ln879_10_fu_306_p2, ap_phi_reg_pp0_iter0_storemerge220_i_reg_165, ap_condition_200)
    begin
        if ((ap_const_boolean_1 = ap_condition_200)) then
            if ((icmp_ln879_10_fu_306_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge220_i_phi_fu_168_p4 <= ap_const_lv2_1;
            elsif ((icmp_ln879_10_fu_306_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge220_i_phi_fu_168_p4 <= ap_const_lv2_3;
            else 
                ap_phi_mux_storemerge220_i_phi_fu_168_p4 <= ap_phi_reg_pp0_iter0_storemerge220_i_reg_165;
            end if;
        else 
            ap_phi_mux_storemerge220_i_phi_fu_168_p4 <= ap_phi_reg_pp0_iter0_storemerge220_i_reg_165;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_phi_fu_157_p4_assign_proc : process(icmp_ln879_11_fu_274_p2, ap_phi_reg_pp0_iter0_storemerge_i_reg_154, ap_condition_187)
    begin
        if ((ap_const_boolean_1 = ap_condition_187)) then
            if ((icmp_ln879_11_fu_274_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_i_phi_fu_157_p4 <= ap_const_lv3_1;
            elsif ((icmp_ln879_11_fu_274_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_i_phi_fu_157_p4 <= ap_const_lv3_4;
            else 
                ap_phi_mux_storemerge_i_phi_fu_157_p4 <= ap_phi_reg_pp0_iter0_storemerge_i_reg_154;
            end if;
        else 
            ap_phi_mux_storemerge_i_phi_fu_157_p4 <= ap_phi_reg_pp0_iter0_storemerge_i_reg_154;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge220_i_reg_165 <= "XX";
    ap_phi_reg_pp0_iter0_storemerge_i_reg_154 <= "XXX";
    ap_phi_reg_pp0_iter0_t_V_1_reg_176 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op11_read_state1_assign_proc : process(grp_nbreadreq_fu_112_p3, state)
    begin
                ap_predicate_op11_read_state1 <= ((grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_4));
    end process;


    ap_predicate_op21_read_state1_assign_proc : process(grp_nbreadreq_fu_112_p3, state)
    begin
                ap_predicate_op21_read_state1 <= ((grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_3));
    end process;


    ap_predicate_op38_read_state1_assign_proc : process(grp_nbreadreq_fu_112_p3, state)
    begin
                ap_predicate_op38_read_state1 <= ((grp_nbreadreq_fu_112_p3 = ap_const_lv1_1) and (state = ap_const_lv3_2));
    end process;


    ap_predicate_op66_read_state1_assign_proc : process(tmp_nbreadreq_fu_126_p3, state)
    begin
                ap_predicate_op66_read_state1 <= ((tmp_nbreadreq_fu_126_p3 = ap_const_lv1_1) and (state = ap_const_lv3_0));
    end process;


    ap_predicate_op91_write_state2_assign_proc : process(state_load_reg_395, tmp_4_reg_445, icmp_ln879_6_reg_459, icmp_ln879_10_reg_463)
    begin
                ap_predicate_op91_write_state2 <= ((state_load_reg_395 = ap_const_lv3_2) and (icmp_ln879_10_reg_463 = ap_const_lv1_1) and (icmp_ln879_6_reg_459 = ap_const_lv1_1) and (tmp_4_reg_445 = ap_const_lv1_1));
    end process;


    ap_predicate_op96_write_state2_assign_proc : process(state_load_reg_395, icmp_ln879_reg_467, dhcpEnable_V)
    begin
                ap_predicate_op96_write_state2 <= ((state_load_reg_395 = ap_const_lv3_1) and (icmp_ln879_reg_467 = ap_const_lv1_1) and (dhcpEnable_V = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_tmp_identifier_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, randomValue_V, ap_block_pp0_stage0, add_ln700_fu_383_p2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_tmp_identifier_V <= add_ln700_fu_383_p2;
        else 
            ap_sig_allocacmp_tmp_identifier_V <= randomValue_V;
        end if; 
    end process;

    dhcpEnable_V_read_read_fu_106_p2 <= dhcpEnable_V;

    dhcp_replyMetaFifo_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, dhcp_replyMetaFifo_V_empty_n, ap_predicate_op11_read_state1, ap_predicate_op21_read_state1, ap_predicate_op38_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op38_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            dhcp_replyMetaFifo_V_blk_n <= dhcp_replyMetaFifo_V_empty_n;
        else 
            dhcp_replyMetaFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dhcp_replyMetaFifo_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op11_read_state1, ap_predicate_op21_read_state1, ap_predicate_op38_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op38_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op11_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dhcp_replyMetaFifo_V_read <= ap_const_logic_1;
        else 
            dhcp_replyMetaFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;


    dhcp_requestMetaFifo_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, dhcp_requestMetaFifo_1_full_n, ap_predicate_op91_write_state2, ap_predicate_op96_write_state2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op91_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op96_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            dhcp_requestMetaFifo_1_blk_n <= dhcp_requestMetaFifo_1_full_n;
        else 
            dhcp_requestMetaFifo_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dhcp_requestMetaFifo_1_din_assign_proc : process(ap_predicate_op91_write_state2, ap_predicate_op96_write_state2, tmp_2_fu_366_p4, tmp22_fu_375_p3, ap_condition_322)
    begin
        if ((ap_const_boolean_1 = ap_condition_322)) then
            if ((ap_predicate_op96_write_state2 = ap_const_boolean_1)) then 
                dhcp_requestMetaFifo_1_din <= tmp22_fu_375_p3;
            elsif ((ap_predicate_op91_write_state2 = ap_const_boolean_1)) then 
                dhcp_requestMetaFifo_1_din <= tmp_2_fu_366_p4;
            else 
                dhcp_requestMetaFifo_1_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            dhcp_requestMetaFifo_1_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dhcp_requestMetaFifo_1_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op91_write_state2, ap_predicate_op96_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op91_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op96_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dhcp_requestMetaFifo_1_write <= ap_const_logic_1;
        else 
            dhcp_requestMetaFifo_1_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_208_p2 <= "1" when (time_V = ap_const_lv32_0) else "0";
    grp_fu_213_p2 <= std_logic_vector(unsigned(time_V) + unsigned(ap_const_lv32_FFFFFFFF));
    grp_fu_224_p4 <= dhcp_replyMetaFifo_V_dout(103 downto 96);
    grp_nbreadreq_fu_112_p3 <= (0=>(dhcp_replyMetaFifo_V_empty_n), others=>'-');
    icmp_ln879_10_fu_306_p2 <= "1" when (grp_fu_224_p4 = ap_const_lv8_2) else "0";
    icmp_ln879_11_fu_274_p2 <= "1" when (grp_fu_224_p4 = ap_const_lv8_5) else "0";
    icmp_ln879_6_fu_300_p2 <= "1" when (tmp_identifier_V_1_fu_286_p1 = myIdentity_V) else "0";
    icmp_ln879_8_fu_268_p2 <= "1" when (trunc_ln321_1_fu_264_p1 = myIdentity_V) else "0";
    icmp_ln879_9_fu_203_p2 <= "1" when (time_V = ap_const_lv32_0) else "0";
    ipAddressOut_V <= myIpAddress_V;

    ipAddressOut_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ipAddressOut_V_ap_vld <= ap_const_logic_1;
        else 
            ipAddressOut_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    portOpen_V_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, portOpen_V_V_empty_n, ap_predicate_op66_read_state1, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op66_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            portOpen_V_V_blk_n <= portOpen_V_V_empty_n;
        else 
            portOpen_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    portOpen_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op66_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op66_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            portOpen_V_V_read <= ap_const_logic_1;
        else 
            portOpen_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln214_fu_328_p2 <= std_logic_vector(shift_left(unsigned(ap_sig_allocacmp_tmp_identifier_V),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    state_load_load_fu_245_p1 <= state;
    tmp22_fu_375_p3 <= (ap_const_lv40_1 & tmp_identifier_V_reg_408);
    tmp_2_fu_366_p4 <= ((tmp_requestedIpAddre_reg_453 & ap_const_lv8_3) & myIdentity_V_load_reg_420);
    tmp_identifier_V_1_fu_286_p1 <= dhcp_replyMetaFifo_V_dout(32 - 1 downto 0);
    tmp_nbreadreq_fu_126_p3 <= (0=>(portOpen_V_V_empty_n), others=>'-');
    trunc_ln321_1_fu_264_p1 <= dhcp_replyMetaFifo_V_dout(32 - 1 downto 0);
    xor_ln214_fu_334_p2 <= (shl_ln214_fu_328_p2 xor ap_sig_allocacmp_tmp_identifier_V);
    zext_ln290_fu_312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_storemerge220_i_phi_fu_168_p4),3));
end behav;
