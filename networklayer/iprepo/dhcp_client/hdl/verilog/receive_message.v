// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module receive_message (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        s_axis_rx_data_TVALID,
        dataInMeta_V_sourceS_TVALID,
        dataInMeta_V_destina_TVALID,
        dhcp_replyMetaFifo_V_din,
        dhcp_replyMetaFifo_V_full_n,
        dhcp_replyMetaFifo_V_write,
        dataInMeta_V_sourceS_TDATA,
        dataInMeta_V_sourceS_TREADY,
        dataInMeta_V_destina_TDATA,
        dataInMeta_V_destina_TREADY,
        s_axis_rx_data_TDATA,
        s_axis_rx_data_TREADY,
        s_axis_rx_data_TKEEP,
        s_axis_rx_data_TLAST,
        myMacAddress_V
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   s_axis_rx_data_TVALID;
input   dataInMeta_V_sourceS_TVALID;
input   dataInMeta_V_destina_TVALID;
output  [103:0] dhcp_replyMetaFifo_V_din;
input   dhcp_replyMetaFifo_V_full_n;
output   dhcp_replyMetaFifo_V_write;
input  [47:0] dataInMeta_V_sourceS_TDATA;
output   dataInMeta_V_sourceS_TREADY;
input  [47:0] dataInMeta_V_destina_TDATA;
output   dataInMeta_V_destina_TREADY;
input  [63:0] s_axis_rx_data_TDATA;
output   s_axis_rx_data_TREADY;
input  [7:0] s_axis_rx_data_TKEEP;
input  [0:0] s_axis_rx_data_TLAST;
input  [47:0] myMacAddress_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dhcp_replyMetaFifo_V_write;
reg dataInMeta_V_sourceS_TREADY;
reg dataInMeta_V_destina_TREADY;
reg s_axis_rx_data_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] tmp_nbreadreq_fu_110_p5;
wire    io_acc_block_signal_op59;
wire   [0:0] tmp_1_nbreadreq_fu_132_p4;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] tmp_reg_469;
reg   [0:0] tmp_last_V_reg_473;
reg   [0:0] and_ln121_1_reg_490;
reg    ap_predicate_op70_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [5:0] rm_wordCount_V;
reg   [0:0] rm_isReply;
reg   [0:0] rm_correctMac;
reg   [0:0] rm_isDHCP;
reg   [31:0] meta_identifier_V;
reg   [31:0] meta_assignedIpAddre;
reg   [31:0] meta_serverAddress_V;
reg   [7:0] meta_type_V_1;
reg    dataInMeta_V_sourceS_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    dataInMeta_V_destina_TDATA_blk_n;
reg    s_axis_rx_data_TDATA_blk_n;
reg    dhcp_replyMetaFifo_V_blk_n;
wire   [0:0] tmp_last_V_fu_240_p1;
wire   [5:0] t_V_load_fu_244_p1;
wire   [0:0] icmp_ln879_2_fu_365_p2;
wire   [5:0] add_ln700_fu_416_p2;
wire   [0:0] and_ln121_1_fu_428_p2;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_rm_isReply_loc_0_i_i_phi_fu_160_p14;
wire   [0:0] ap_phi_reg_pp0_iter0_rm_isReply_loc_0_i_i_reg_157;
wire   [0:0] icmp_ln879_fu_391_p2;
reg   [0:0] ap_phi_mux_rm_correctMac_loc_0_s_phi_fu_179_p14;
wire   [0:0] ap_phi_reg_pp0_iter0_rm_correctMac_loc_0_s_reg_176;
wire   [0:0] and_ln93_1_fu_309_p2;
wire   [0:0] and_ln93_fu_332_p2;
reg   [0:0] ap_phi_mux_rm_isDHCP_loc_0_i_i_phi_fu_199_p14;
wire   [0:0] ap_phi_reg_pp0_iter0_rm_isDHCP_loc_0_i_i_reg_196;
wire   [0:0] icmp_ln879_3_fu_276_p2;
wire   [5:0] ap_phi_reg_pp0_iter0_rm_wordCount_V_new_0_reg_215;
reg   [5:0] ap_phi_reg_pp0_iter1_rm_wordCount_V_new_0_reg_215;
reg   [5:0] ap_sig_allocacmp_t_V;
wire   [31:0] grp_fu_226_p4;
wire   [31:0] trunc_ln647_3_fu_345_p1;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] p_Result_10_i_i_fu_289_p4;
wire   [15:0] trunc_ln647_5_fu_299_p1;
wire   [0:0] icmp_ln879_5_fu_303_p2;
wire   [31:0] trunc_ln647_4_fu_322_p1;
wire   [0:0] icmp_ln879_4_fu_326_p2;
wire   [15:0] trunc_ln647_2_fu_361_p1;
wire   [7:0] trunc_ln647_fu_387_p1;
wire   [0:0] and_ln121_fu_422_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_78;
reg    ap_condition_250;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 rm_wordCount_V = 6'd0;
#0 rm_isReply = 1'd0;
#0 rm_correctMac = 1'd1;
#0 rm_isDHCP = 1'd0;
#0 meta_identifier_V = 32'd0;
#0 meta_assignedIpAddre = 32'd0;
#0 meta_serverAddress_V = 32'd0;
#0 meta_type_V_1 = 8'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_78)) begin
        if (((tmp_last_V_fu_240_p1 == 1'd0) & (tmp_nbreadreq_fu_110_p5 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_rm_wordCount_V_new_0_reg_215 <= add_ln700_fu_416_p2;
        end else if (((tmp_last_V_fu_240_p1 == 1'd1) & (tmp_nbreadreq_fu_110_p5 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_rm_wordCount_V_new_0_reg_215 <= 6'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_rm_wordCount_V_new_0_reg_215 <= ap_phi_reg_pp0_iter0_rm_wordCount_V_new_0_reg_215;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_250)) begin
        if ((t_V_load_fu_244_p1 == 6'd0)) begin
            rm_correctMac <= 1'd1;
        end else if ((t_V_load_fu_244_p1 == 6'd3)) begin
            rm_correctMac <= and_ln93_fu_332_p2;
        end else if ((t_V_load_fu_244_p1 == 6'd4)) begin
            rm_correctMac <= and_ln93_1_fu_309_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_last_V_fu_240_p1 == 1'd1) & (tmp_nbreadreq_fu_110_p5 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln121_1_reg_490 <= and_ln121_1_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_110_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (t_V_load_fu_244_p1 == 6'd2))) begin
        meta_assignedIpAddre <= trunc_ln647_3_fu_345_p1;
        meta_serverAddress_V <= {{s_axis_rx_data_TDATA[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((t_V_load_fu_244_p1 == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_110_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        meta_identifier_V <= {{s_axis_rx_data_TDATA[63:32]}};
        rm_isReply <= icmp_ln879_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln879_2_fu_365_p2 == 1'd1) & (tmp_nbreadreq_fu_110_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (t_V_load_fu_244_p1 == 6'd30))) begin
        meta_type_V_1 <= {{s_axis_rx_data_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_110_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (t_V_load_fu_244_p1 == 6'd29))) begin
        rm_isDHCP <= icmp_ln879_3_fu_276_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_469 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rm_wordCount_V <= ap_phi_reg_pp0_iter1_rm_wordCount_V_new_0_reg_215;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_110_p5 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_last_V_reg_473 <= s_axis_rx_data_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_469 <= tmp_nbreadreq_fu_110_p5;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((t_V_load_fu_244_p1 == 6'd0) & (tmp_nbreadreq_fu_110_p5 == 1'd1))) begin
        ap_phi_mux_rm_correctMac_loc_0_s_phi_fu_179_p14 = 1'd1;
    end else if (((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd3))) begin
        ap_phi_mux_rm_correctMac_loc_0_s_phi_fu_179_p14 = and_ln93_fu_332_p2;
    end else if (((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd4))) begin
        ap_phi_mux_rm_correctMac_loc_0_s_phi_fu_179_p14 = and_ln93_1_fu_309_p2;
    end else if ((((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd29)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd2)) | (~(t_V_load_fu_244_p1 == 6'd29) & ~(t_V_load_fu_244_p1 == 6'd4) & ~(t_V_load_fu_244_p1 == 6'd3) & ~(t_V_load_fu_244_p1 == 6'd2) & ~(t_V_load_fu_244_p1 == 6'd0) & ~(t_V_load_fu_244_p1 == 6'd30) & (tmp_nbreadreq_fu_110_p5 == 1'd1)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd30)))) begin
        ap_phi_mux_rm_correctMac_loc_0_s_phi_fu_179_p14 = rm_correctMac;
    end else begin
        ap_phi_mux_rm_correctMac_loc_0_s_phi_fu_179_p14 = ap_phi_reg_pp0_iter0_rm_correctMac_loc_0_s_reg_176;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd29))) begin
        ap_phi_mux_rm_isDHCP_loc_0_i_i_phi_fu_199_p14 = icmp_ln879_3_fu_276_p2;
    end else if ((((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd4)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd3)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd2)) | (~(t_V_load_fu_244_p1 == 6'd29) & ~(t_V_load_fu_244_p1 == 6'd4) & ~(t_V_load_fu_244_p1 == 6'd3) & ~(t_V_load_fu_244_p1 == 6'd2) & ~(t_V_load_fu_244_p1 == 6'd0) & ~(t_V_load_fu_244_p1 == 6'd30) & (tmp_nbreadreq_fu_110_p5 == 1'd1)) | ((t_V_load_fu_244_p1 == 6'd0) & (tmp_nbreadreq_fu_110_p5 == 1'd1)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd30)))) begin
        ap_phi_mux_rm_isDHCP_loc_0_i_i_phi_fu_199_p14 = rm_isDHCP;
    end else begin
        ap_phi_mux_rm_isDHCP_loc_0_i_i_phi_fu_199_p14 = ap_phi_reg_pp0_iter0_rm_isDHCP_loc_0_i_i_reg_196;
    end
end

always @ (*) begin
    if (((t_V_load_fu_244_p1 == 6'd0) & (tmp_nbreadreq_fu_110_p5 == 1'd1))) begin
        ap_phi_mux_rm_isReply_loc_0_i_i_phi_fu_160_p14 = icmp_ln879_fu_391_p2;
    end else if ((((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd29)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd4)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd3)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd2)) | (~(t_V_load_fu_244_p1 == 6'd29) & ~(t_V_load_fu_244_p1 == 6'd4) & ~(t_V_load_fu_244_p1 == 6'd3) & ~(t_V_load_fu_244_p1 == 6'd2) & ~(t_V_load_fu_244_p1 == 6'd0) & ~(t_V_load_fu_244_p1 == 6'd30) & (tmp_nbreadreq_fu_110_p5 == 1'd1)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (t_V_load_fu_244_p1 == 6'd30)))) begin
        ap_phi_mux_rm_isReply_loc_0_i_i_phi_fu_160_p14 = rm_isReply;
    end else begin
        ap_phi_mux_rm_isReply_loc_0_i_i_phi_fu_160_p14 = ap_phi_reg_pp0_iter0_rm_isReply_loc_0_i_i_reg_157;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_469 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_t_V = ap_phi_reg_pp0_iter1_rm_wordCount_V_new_0_reg_215;
    end else begin
        ap_sig_allocacmp_t_V = rm_wordCount_V;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_1_nbreadreq_fu_132_p4 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        dataInMeta_V_destina_TDATA_blk_n = dataInMeta_V_destina_TVALID;
    end else begin
        dataInMeta_V_destina_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_132_p4 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataInMeta_V_destina_TREADY = 1'b1;
    end else begin
        dataInMeta_V_destina_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_1_nbreadreq_fu_132_p4 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        dataInMeta_V_sourceS_TDATA_blk_n = dataInMeta_V_sourceS_TVALID;
    end else begin
        dataInMeta_V_sourceS_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_132_p4 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataInMeta_V_sourceS_TREADY = 1'b1;
    end else begin
        dataInMeta_V_sourceS_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op70_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        dhcp_replyMetaFifo_V_blk_n = dhcp_replyMetaFifo_V_full_n;
    end else begin
        dhcp_replyMetaFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op70_write_state2 == 1'b1))) begin
        dhcp_replyMetaFifo_V_write = 1'b1;
    end else begin
        dhcp_replyMetaFifo_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (tmp_nbreadreq_fu_110_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        s_axis_rx_data_TDATA_blk_n = s_axis_rx_data_TVALID;
    end else begin
        s_axis_rx_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_110_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_axis_rx_data_TREADY = 1'b1;
    end else begin
        s_axis_rx_data_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_fu_416_p2 = (ap_sig_allocacmp_t_V + 6'd1);

assign and_ln121_1_fu_428_p2 = (ap_phi_mux_rm_isReply_loc_0_i_i_phi_fu_160_p14 & and_ln121_fu_422_p2);

assign and_ln121_fu_422_p2 = (ap_phi_mux_rm_isDHCP_loc_0_i_i_phi_fu_199_p14 & ap_phi_mux_rm_correctMac_loc_0_s_phi_fu_179_p14);

assign and_ln93_1_fu_309_p2 = (rm_correctMac & icmp_ln879_5_fu_303_p2);

assign and_ln93_fu_332_p2 = (rm_correctMac & icmp_ln879_4_fu_326_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((dhcp_replyMetaFifo_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op70_write_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_1_nbreadreq_fu_132_p4 == 1'd1) & (io_acc_block_signal_op59 == 1'b0)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (s_axis_rx_data_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((dhcp_replyMetaFifo_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op70_write_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_1_nbreadreq_fu_132_p4 == 1'd1) & (io_acc_block_signal_op59 == 1'b0)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (s_axis_rx_data_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((dhcp_replyMetaFifo_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op70_write_state2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_1_nbreadreq_fu_132_p4 == 1'd1) & (io_acc_block_signal_op59 == 1'b0)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (s_axis_rx_data_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((tmp_1_nbreadreq_fu_132_p4 == 1'd1) & (io_acc_block_signal_op59 == 1'b0)) | ((tmp_nbreadreq_fu_110_p5 == 1'd1) & (s_axis_rx_data_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((dhcp_replyMetaFifo_V_full_n == 1'b0) & (ap_predicate_op70_write_state2 == 1'b1));
end

always @ (*) begin
    ap_condition_250 = ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_110_p5 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_78 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_rm_correctMac_loc_0_s_reg_176 = 'bx;

assign ap_phi_reg_pp0_iter0_rm_isDHCP_loc_0_i_i_reg_196 = 'bx;

assign ap_phi_reg_pp0_iter0_rm_isReply_loc_0_i_i_reg_157 = 'bx;

assign ap_phi_reg_pp0_iter0_rm_wordCount_V_new_0_reg_215 = 'bx;

always @ (*) begin
    ap_predicate_op70_write_state2 = ((1'd1 == and_ln121_1_reg_490) & (tmp_last_V_reg_473 == 1'd1) & (tmp_reg_469 == 1'd1));
end

assign dhcp_replyMetaFifo_V_din = {{{{meta_type_V_1}, {meta_serverAddress_V}}, {meta_assignedIpAddre}}, {meta_identifier_V}};

assign grp_fu_226_p4 = {{s_axis_rx_data_TDATA[63:32]}};

assign icmp_ln879_2_fu_365_p2 = ((trunc_ln647_2_fu_361_p1 == 16'd309) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_276_p2 = ((grp_fu_226_p4 == 32'd1666417251) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_326_p2 = ((trunc_ln647_4_fu_322_p1 == grp_fu_226_p4) ? 1'b1 : 1'b0);

assign icmp_ln879_5_fu_303_p2 = ((p_Result_10_i_i_fu_289_p4 == trunc_ln647_5_fu_299_p1) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_391_p2 = ((trunc_ln647_fu_387_p1 == 8'd2) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op59 = (dataInMeta_V_sourceS_TVALID & dataInMeta_V_destina_TVALID);

assign p_Result_10_i_i_fu_289_p4 = {{myMacAddress_V[47:32]}};

assign t_V_load_fu_244_p1 = ap_sig_allocacmp_t_V;

assign tmp_1_nbreadreq_fu_132_p4 = (dataInMeta_V_sourceS_TVALID & dataInMeta_V_destina_TVALID);

assign tmp_last_V_fu_240_p1 = s_axis_rx_data_TLAST;

assign tmp_nbreadreq_fu_110_p5 = s_axis_rx_data_TVALID;

assign trunc_ln647_2_fu_361_p1 = s_axis_rx_data_TDATA[15:0];

assign trunc_ln647_3_fu_345_p1 = s_axis_rx_data_TDATA[31:0];

assign trunc_ln647_4_fu_322_p1 = myMacAddress_V[31:0];

assign trunc_ln647_5_fu_299_p1 = s_axis_rx_data_TDATA[15:0];

assign trunc_ln647_fu_387_p1 = s_axis_rx_data_TDATA[7:0];

endmodule //receive_message
