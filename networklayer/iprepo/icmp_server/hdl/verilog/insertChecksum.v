// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module insertChecksum (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        dataStreams_V_data_V_dout,
        dataStreams_V_data_V_empty_n,
        dataStreams_V_data_V_read,
        dataStreams_V_keep_V_dout,
        dataStreams_V_keep_V_empty_n,
        dataStreams_V_keep_V_read,
        dataStreams_V_last_V_dout,
        dataStreams_V_last_V_empty_n,
        dataStreams_V_last_V_read,
        dataStreams_V_data_V_1_dout,
        dataStreams_V_data_V_1_empty_n,
        dataStreams_V_data_V_1_read,
        dataStreams_V_keep_V_1_dout,
        dataStreams_V_keep_V_1_empty_n,
        dataStreams_V_keep_V_1_read,
        dataStreams_V_last_V_1_dout,
        dataStreams_V_last_V_1_empty_n,
        dataStreams_V_last_V_1_read,
        checksumStreams_V_V_s_dout,
        checksumStreams_V_V_s_empty_n,
        checksumStreams_V_V_s_read,
        checksumStreams_V_V_1_dout,
        checksumStreams_V_V_1_empty_n,
        checksumStreams_V_V_1_read,
        m_axis_TREADY,
        m_axis_TDATA,
        m_axis_TVALID,
        m_axis_TKEEP,
        m_axis_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] dataStreams_V_data_V_dout;
input   dataStreams_V_data_V_empty_n;
output   dataStreams_V_data_V_read;
input  [7:0] dataStreams_V_keep_V_dout;
input   dataStreams_V_keep_V_empty_n;
output   dataStreams_V_keep_V_read;
input  [0:0] dataStreams_V_last_V_dout;
input   dataStreams_V_last_V_empty_n;
output   dataStreams_V_last_V_read;
input  [63:0] dataStreams_V_data_V_1_dout;
input   dataStreams_V_data_V_1_empty_n;
output   dataStreams_V_data_V_1_read;
input  [7:0] dataStreams_V_keep_V_1_dout;
input   dataStreams_V_keep_V_1_empty_n;
output   dataStreams_V_keep_V_1_read;
input  [0:0] dataStreams_V_last_V_1_dout;
input   dataStreams_V_last_V_1_empty_n;
output   dataStreams_V_last_V_1_read;
input  [15:0] checksumStreams_V_V_s_dout;
input   checksumStreams_V_V_s_empty_n;
output   checksumStreams_V_V_s_read;
input  [15:0] checksumStreams_V_V_1_dout;
input   checksumStreams_V_V_1_empty_n;
output   checksumStreams_V_V_1_read;
input   m_axis_TREADY;
output  [63:0] m_axis_TDATA;
output   m_axis_TVALID;
output  [7:0] m_axis_TKEEP;
output  [0:0] m_axis_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dataStreams_V_data_V_read;
reg dataStreams_V_keep_V_read;
reg dataStreams_V_last_V_read;
reg dataStreams_V_data_V_1_read;
reg dataStreams_V_keep_V_1_read;
reg dataStreams_V_last_V_1_read;
reg checksumStreams_V_V_s_read;
reg checksumStreams_V_V_1_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    io_acc_block_signal_op23;
reg   [0:0] streamSource_V_load_reg_433;
reg   [0:0] ap_phi_mux_tmp_16_phi_fu_162_p4;
reg   [0:0] ap_phi_mux_tmp_17_phi_fu_174_p4;
reg    ap_predicate_op23_read_state2;
wire    io_acc_block_signal_op28;
reg    ap_predicate_op28_read_state2;
reg    ap_predicate_op34_read_state2;
reg    ap_predicate_op36_read_state2;
wire    io_acc_block_signal_op45;
wire   [0:0] or_ln377_fu_376_p2;
wire   [0:0] grp_nbreadreq_fu_74_p5;
reg    ap_predicate_op45_read_state2;
wire    io_acc_block_signal_op50;
reg    ap_predicate_op50_read_state2;
wire    io_acc_block_signal_op64;
reg   [0:0] ap_phi_mux_tmp_phi_fu_186_p4;
reg    ap_predicate_op64_read_state2;
wire    io_acc_block_signal_op69;
reg    ap_predicate_op69_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [15:0] t_V_reg_437;
reg   [0:0] tmp_16_reg_159;
reg   [0:0] tmp_17_reg_171;
reg    ap_predicate_op83_write_state3;
reg   [0:0] or_ln377_reg_465;
reg    ap_predicate_op88_write_state3;
reg   [0:0] tmp_reg_183;
reg    ap_predicate_op91_write_state3;
reg    ap_block_state3_io;
wire    regslice_both_outputStream_V_data_V_U_apdone_blk;
reg    ap_block_state4_pp0_stage0_iter3;
reg   [15:0] t_V_reg_437_pp0_iter2_reg;
reg   [0:0] tmp_16_reg_159_pp0_iter2_reg;
reg   [0:0] tmp_17_reg_171_pp0_iter2_reg;
reg    ap_predicate_op102_write_state4;
reg   [0:0] or_ln377_reg_465_pp0_iter2_reg;
reg    ap_predicate_op105_write_state4;
reg   [0:0] tmp_reg_183_pp0_iter2_reg;
reg    ap_predicate_op108_write_state4;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] ic_wordCount_V;
reg   [0:0] streamSource_V;
reg    m_axis_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    dataStreams_V_data_V_blk_n;
reg    dataStreams_V_keep_V_blk_n;
reg    dataStreams_V_last_V_blk_n;
reg    dataStreams_V_data_V_1_blk_n;
reg    dataStreams_V_keep_V_1_blk_n;
reg    dataStreams_V_last_V_1_blk_n;
reg    checksumStreams_V_V_s_blk_n;
reg    checksumStreams_V_V_1_blk_n;
reg   [0:0] tmp_last_V_11_reg_195;
wire   [63:0] p_Result_s_fu_420_p5;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] ap_phi_reg_pp0_iter1_tmp_16_reg_159;
wire   [0:0] grp_nbreadreq_fu_86_p5;
wire   [0:0] tmp_2_i_nbreadreq_fu_98_p3;
wire   [0:0] ap_phi_reg_pp0_iter1_tmp_17_reg_171;
wire   [0:0] tmp_3_i_nbreadreq_fu_106_p3;
wire   [0:0] ap_phi_reg_pp0_iter1_tmp_reg_183;
reg   [0:0] ap_phi_mux_tmp_last_V_11_phi_fu_199_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_tmp_last_V_11_reg_195;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_V_14_reg_206;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_last_V_14_reg_206;
reg   [0:0] ap_phi_reg_pp0_iter2_tmp_last_V_14_reg_206;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_keep_V_17_reg_218;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_keep_V_17_reg_218;
reg   [7:0] ap_phi_reg_pp0_iter2_tmp_keep_V_17_reg_218;
wire   [63:0] ap_phi_reg_pp0_iter0_p_Val2_s_reg_230;
reg   [63:0] ap_phi_reg_pp0_iter1_p_Val2_s_reg_230;
reg   [63:0] ap_phi_reg_pp0_iter2_p_Val2_s_reg_230;
wire   [15:0] ap_phi_reg_pp0_iter0_icmpChecksum_V_1_reg_239;
reg   [15:0] ap_phi_reg_pp0_iter1_icmpChecksum_V_1_reg_239;
reg   [15:0] ap_phi_reg_pp0_iter2_icmpChecksum_V_1_reg_239;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_V_8_reg_248;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_last_V_8_reg_248;
reg   [0:0] ap_phi_reg_pp0_iter2_tmp_last_V_8_reg_248;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_keep_V_11_reg_260;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_keep_V_11_reg_260;
reg   [7:0] ap_phi_reg_pp0_iter2_tmp_keep_V_11_reg_260;
wire   [63:0] ap_phi_reg_pp0_iter0_tmp_data_V_17_reg_272;
reg   [63:0] ap_phi_reg_pp0_iter1_tmp_data_V_17_reg_272;
reg   [63:0] ap_phi_reg_pp0_iter2_tmp_data_V_17_reg_272;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_keep_V_14_reg_284;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_keep_V_14_reg_284;
reg   [7:0] ap_phi_reg_pp0_iter2_tmp_keep_V_14_reg_284;
wire   [63:0] ap_phi_reg_pp0_iter0_tmp_data_V_20_reg_296;
reg   [63:0] ap_phi_reg_pp0_iter1_tmp_data_V_20_reg_296;
reg   [63:0] ap_phi_reg_pp0_iter2_tmp_data_V_20_reg_296;
wire   [15:0] select_ln399_fu_406_p3;
wire   [0:0] xor_ln377_fu_382_p2;
reg   [0:0] ap_sig_allocacmp_streamSource_V_load;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] add_ln700_fu_400_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg   [63:0] m_axis_TDATA_int;
reg    m_axis_TVALID_int;
wire    m_axis_TREADY_int;
wire    regslice_both_outputStream_V_data_V_U_vld_out;
wire    regslice_both_outputStream_V_keep_V_U_apdone_blk;
reg   [7:0] m_axis_TKEEP_int;
wire    regslice_both_outputStream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_outputStream_V_keep_V_U_vld_out;
wire    regslice_both_outputStream_V_last_V_U_apdone_blk;
reg   [0:0] m_axis_TLAST_int;
wire    regslice_both_outputStream_V_last_V_U_ack_in_dummy;
wire    regslice_both_outputStream_V_last_V_U_vld_out;
reg    ap_condition_416;
reg    ap_condition_93;
reg    ap_condition_71;
reg    ap_condition_315;
reg    ap_condition_125;
reg    ap_condition_133;
reg    ap_condition_154;
reg    ap_condition_146;
reg    ap_condition_411;
reg    ap_condition_68;
reg    ap_condition_92;
reg    ap_condition_143;
reg    ap_condition_153;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ic_wordCount_V = 16'd0;
#0 streamSource_V = 1'd0;
end

regslice_both #(
    .DataWidth( 64 ))
regslice_both_outputStream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_TDATA_int),
    .vld_in(m_axis_TVALID_int),
    .ack_in(m_axis_TREADY_int),
    .data_out(m_axis_TDATA),
    .vld_out(regslice_both_outputStream_V_data_V_U_vld_out),
    .ack_out(m_axis_TREADY),
    .apdone_blk(regslice_both_outputStream_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_outputStream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_TKEEP_int),
    .vld_in(m_axis_TVALID_int),
    .ack_in(regslice_both_outputStream_V_keep_V_U_ack_in_dummy),
    .data_out(m_axis_TKEEP),
    .vld_out(regslice_both_outputStream_V_keep_V_U_vld_out),
    .ack_out(m_axis_TREADY),
    .apdone_blk(regslice_both_outputStream_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_outputStream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_TLAST_int),
    .vld_in(m_axis_TVALID_int),
    .ack_in(regslice_both_outputStream_V_last_V_U_ack_in_dummy),
    .data_out(m_axis_TLAST),
    .vld_out(regslice_both_outputStream_V_last_V_U_vld_out),
    .ack_out(m_axis_TREADY),
    .apdone_blk(regslice_both_outputStream_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_71)) begin
            ap_phi_reg_pp0_iter2_icmpChecksum_V_1_reg_239 <= checksumStreams_V_V_s_dout;
        end else if ((1'b1 == ap_condition_93)) begin
            ap_phi_reg_pp0_iter2_icmpChecksum_V_1_reg_239 <= checksumStreams_V_V_1_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_icmpChecksum_V_1_reg_239 <= ap_phi_reg_pp0_iter1_icmpChecksum_V_1_reg_239;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_71)) begin
            ap_phi_reg_pp0_iter2_p_Val2_s_reg_230 <= dataStreams_V_data_V_dout;
        end else if ((1'b1 == ap_condition_93)) begin
            ap_phi_reg_pp0_iter2_p_Val2_s_reg_230 <= dataStreams_V_data_V_1_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_Val2_s_reg_230 <= ap_phi_reg_pp0_iter1_p_Val2_s_reg_230;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_133)) begin
            ap_phi_reg_pp0_iter2_tmp_data_V_17_reg_272 <= dataStreams_V_data_V_dout;
        end else if ((1'b1 == ap_condition_125)) begin
            ap_phi_reg_pp0_iter2_tmp_data_V_17_reg_272 <= dataStreams_V_data_V_1_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_data_V_17_reg_272 <= ap_phi_reg_pp0_iter1_tmp_data_V_17_reg_272;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_146)) begin
            ap_phi_reg_pp0_iter2_tmp_data_V_20_reg_296 <= dataStreams_V_data_V_dout;
        end else if ((1'b1 == ap_condition_154)) begin
            ap_phi_reg_pp0_iter2_tmp_data_V_20_reg_296 <= dataStreams_V_data_V_1_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_data_V_20_reg_296 <= ap_phi_reg_pp0_iter1_tmp_data_V_20_reg_296;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_133)) begin
            ap_phi_reg_pp0_iter2_tmp_keep_V_11_reg_260 <= dataStreams_V_keep_V_dout;
        end else if ((1'b1 == ap_condition_125)) begin
            ap_phi_reg_pp0_iter2_tmp_keep_V_11_reg_260 <= dataStreams_V_keep_V_1_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_keep_V_11_reg_260 <= ap_phi_reg_pp0_iter1_tmp_keep_V_11_reg_260;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_146)) begin
            ap_phi_reg_pp0_iter2_tmp_keep_V_14_reg_284 <= dataStreams_V_keep_V_dout;
        end else if ((1'b1 == ap_condition_154)) begin
            ap_phi_reg_pp0_iter2_tmp_keep_V_14_reg_284 <= dataStreams_V_keep_V_1_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_keep_V_14_reg_284 <= ap_phi_reg_pp0_iter1_tmp_keep_V_14_reg_284;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_71)) begin
            ap_phi_reg_pp0_iter2_tmp_keep_V_17_reg_218 <= dataStreams_V_keep_V_dout;
        end else if ((1'b1 == ap_condition_93)) begin
            ap_phi_reg_pp0_iter2_tmp_keep_V_17_reg_218 <= dataStreams_V_keep_V_1_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_keep_V_17_reg_218 <= ap_phi_reg_pp0_iter1_tmp_keep_V_17_reg_218;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_71)) begin
            ap_phi_reg_pp0_iter2_tmp_last_V_14_reg_206 <= dataStreams_V_last_V_dout;
        end else if ((1'b1 == ap_condition_93)) begin
            ap_phi_reg_pp0_iter2_tmp_last_V_14_reg_206 <= dataStreams_V_last_V_1_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_last_V_14_reg_206 <= ap_phi_reg_pp0_iter1_tmp_last_V_14_reg_206;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_133)) begin
            ap_phi_reg_pp0_iter2_tmp_last_V_8_reg_248 <= dataStreams_V_last_V_dout;
        end else if ((1'b1 == ap_condition_125)) begin
            ap_phi_reg_pp0_iter2_tmp_last_V_8_reg_248 <= dataStreams_V_last_V_1_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_last_V_8_reg_248 <= ap_phi_reg_pp0_iter1_tmp_last_V_8_reg_248;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_416)) begin
            ic_wordCount_V <= select_ln399_fu_406_p3;
        end else if (((or_ln377_fu_376_p2 == 1'd1) & (ic_wordCount_V == 16'd0))) begin
            ic_wordCount_V <= 16'd1;
        end else if ((1'b1 == ap_condition_411)) begin
            ic_wordCount_V <= 16'd3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if (((streamSource_V_load_reg_433 == 1'd1) & (ic_wordCount_V == 16'd2))) begin
            tmp_16_reg_159 <= grp_nbreadreq_fu_86_p5;
        end else if (((streamSource_V_load_reg_433 == 1'd0) & (ic_wordCount_V == 16'd2))) begin
            tmp_16_reg_159 <= grp_nbreadreq_fu_74_p5;
        end else if ((1'b1 == 1'b1)) begin
            tmp_16_reg_159 <= ap_phi_reg_pp0_iter1_tmp_16_reg_159;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_92)) begin
            tmp_17_reg_171 <= tmp_3_i_nbreadreq_fu_106_p3;
        end else if ((1'b1 == ap_condition_68)) begin
            tmp_17_reg_171 <= tmp_2_i_nbreadreq_fu_98_p3;
        end else if ((1'b1 == 1'b1)) begin
            tmp_17_reg_171 <= ap_phi_reg_pp0_iter1_tmp_17_reg_171;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_146)) begin
            tmp_last_V_11_reg_195 <= dataStreams_V_last_V_dout;
        end else if ((1'b1 == ap_condition_154)) begin
            tmp_last_V_11_reg_195 <= dataStreams_V_last_V_1_dout;
        end else if ((1'b1 == 1'b1)) begin
            tmp_last_V_11_reg_195 <= ap_phi_reg_pp0_iter1_tmp_last_V_11_reg_195;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_315)) begin
        if ((1'b1 == ap_condition_153)) begin
            tmp_reg_183 <= grp_nbreadreq_fu_86_p5;
        end else if ((1'b1 == ap_condition_143)) begin
            tmp_reg_183 <= grp_nbreadreq_fu_74_p5;
        end else if ((1'b1 == 1'b1)) begin
            tmp_reg_183 <= ap_phi_reg_pp0_iter1_tmp_reg_183;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_icmpChecksum_V_1_reg_239 <= ap_phi_reg_pp0_iter0_icmpChecksum_V_1_reg_239;
        ap_phi_reg_pp0_iter1_p_Val2_s_reg_230 <= ap_phi_reg_pp0_iter0_p_Val2_s_reg_230;
        ap_phi_reg_pp0_iter1_tmp_data_V_17_reg_272 <= ap_phi_reg_pp0_iter0_tmp_data_V_17_reg_272;
        ap_phi_reg_pp0_iter1_tmp_data_V_20_reg_296 <= ap_phi_reg_pp0_iter0_tmp_data_V_20_reg_296;
        ap_phi_reg_pp0_iter1_tmp_keep_V_11_reg_260 <= ap_phi_reg_pp0_iter0_tmp_keep_V_11_reg_260;
        ap_phi_reg_pp0_iter1_tmp_keep_V_14_reg_284 <= ap_phi_reg_pp0_iter0_tmp_keep_V_14_reg_284;
        ap_phi_reg_pp0_iter1_tmp_keep_V_17_reg_218 <= ap_phi_reg_pp0_iter0_tmp_keep_V_17_reg_218;
        ap_phi_reg_pp0_iter1_tmp_last_V_14_reg_206 <= ap_phi_reg_pp0_iter0_tmp_last_V_14_reg_206;
        ap_phi_reg_pp0_iter1_tmp_last_V_8_reg_248 <= ap_phi_reg_pp0_iter0_tmp_last_V_8_reg_248;
    end
end

always @ (posedge ap_clk) begin
    if (((ic_wordCount_V == 16'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln377_reg_465 <= or_ln377_fu_376_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        or_ln377_reg_465_pp0_iter2_reg <= or_ln377_reg_465;
        t_V_reg_437_pp0_iter2_reg <= t_V_reg_437;
        tmp_16_reg_159_pp0_iter2_reg <= tmp_16_reg_159;
        tmp_17_reg_171_pp0_iter2_reg <= tmp_17_reg_171;
        tmp_reg_183_pp0_iter2_reg <= tmp_reg_183;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln377_fu_376_p2 == 1'd1) & (ic_wordCount_V == 16'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        streamSource_V <= xor_ln377_fu_382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        streamSource_V_load_reg_433 <= ap_sig_allocacmp_streamSource_V_load;
        t_V_reg_437 <= ic_wordCount_V;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if ((ic_wordCount_V == 16'd2)) begin
        if ((streamSource_V_load_reg_433 == 1'd1)) begin
            ap_phi_mux_tmp_16_phi_fu_162_p4 = grp_nbreadreq_fu_86_p5;
        end else if ((streamSource_V_load_reg_433 == 1'd0)) begin
            ap_phi_mux_tmp_16_phi_fu_162_p4 = grp_nbreadreq_fu_74_p5;
        end else begin
            ap_phi_mux_tmp_16_phi_fu_162_p4 = ap_phi_reg_pp0_iter1_tmp_16_reg_159;
        end
    end else begin
        ap_phi_mux_tmp_16_phi_fu_162_p4 = ap_phi_reg_pp0_iter1_tmp_16_reg_159;
    end
end

always @ (*) begin
    if (((ap_phi_mux_tmp_16_phi_fu_162_p4 == 1'd1) & (ic_wordCount_V == 16'd2))) begin
        if ((streamSource_V_load_reg_433 == 1'd1)) begin
            ap_phi_mux_tmp_17_phi_fu_174_p4 = tmp_3_i_nbreadreq_fu_106_p3;
        end else if ((streamSource_V_load_reg_433 == 1'd0)) begin
            ap_phi_mux_tmp_17_phi_fu_174_p4 = tmp_2_i_nbreadreq_fu_98_p3;
        end else begin
            ap_phi_mux_tmp_17_phi_fu_174_p4 = ap_phi_reg_pp0_iter1_tmp_17_reg_171;
        end
    end else begin
        ap_phi_mux_tmp_17_phi_fu_174_p4 = ap_phi_reg_pp0_iter1_tmp_17_reg_171;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_416)) begin
        if ((streamSource_V_load_reg_433 == 1'd0)) begin
            ap_phi_mux_tmp_last_V_11_phi_fu_199_p4 = dataStreams_V_last_V_dout;
        end else if ((streamSource_V_load_reg_433 == 1'd1)) begin
            ap_phi_mux_tmp_last_V_11_phi_fu_199_p4 = dataStreams_V_last_V_1_dout;
        end else begin
            ap_phi_mux_tmp_last_V_11_phi_fu_199_p4 = ap_phi_reg_pp0_iter1_tmp_last_V_11_reg_195;
        end
    end else begin
        ap_phi_mux_tmp_last_V_11_phi_fu_199_p4 = ap_phi_reg_pp0_iter1_tmp_last_V_11_reg_195;
    end
end

always @ (*) begin
    if ((~(ic_wordCount_V == 16'd2) & ~(ic_wordCount_V == 16'd0))) begin
        if ((streamSource_V_load_reg_433 == 1'd1)) begin
            ap_phi_mux_tmp_phi_fu_186_p4 = grp_nbreadreq_fu_86_p5;
        end else if ((streamSource_V_load_reg_433 == 1'd0)) begin
            ap_phi_mux_tmp_phi_fu_186_p4 = grp_nbreadreq_fu_74_p5;
        end else begin
            ap_phi_mux_tmp_phi_fu_186_p4 = ap_phi_reg_pp0_iter1_tmp_reg_183;
        end
    end else begin
        ap_phi_mux_tmp_phi_fu_186_p4 = ap_phi_reg_pp0_iter1_tmp_reg_183;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln377_fu_376_p2 == 1'd1) & (ic_wordCount_V == 16'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_streamSource_V_load = xor_ln377_fu_382_p2;
    end else begin
        ap_sig_allocacmp_streamSource_V_load = streamSource_V;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op36_read_state2 == 1'b1))) begin
        checksumStreams_V_V_1_blk_n = checksumStreams_V_V_1_empty_n;
    end else begin
        checksumStreams_V_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op36_read_state2 == 1'b1))) begin
        checksumStreams_V_V_1_read = 1'b1;
    end else begin
        checksumStreams_V_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op34_read_state2 == 1'b1))) begin
        checksumStreams_V_V_s_blk_n = checksumStreams_V_V_s_empty_n;
    end else begin
        checksumStreams_V_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op34_read_state2 == 1'b1))) begin
        checksumStreams_V_V_s_read = 1'b1;
    end else begin
        checksumStreams_V_V_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_read_state2 == 1'b1)))) begin
        dataStreams_V_data_V_1_blk_n = dataStreams_V_data_V_1_empty_n;
    end else begin
        dataStreams_V_data_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_read_state2 == 1'b1)))) begin
        dataStreams_V_data_V_1_read = 1'b1;
    end else begin
        dataStreams_V_data_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op64_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_read_state2 == 1'b1)))) begin
        dataStreams_V_data_V_blk_n = dataStreams_V_data_V_empty_n;
    end else begin
        dataStreams_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op64_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_read_state2 == 1'b1)))) begin
        dataStreams_V_data_V_read = 1'b1;
    end else begin
        dataStreams_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_read_state2 == 1'b1)))) begin
        dataStreams_V_keep_V_1_blk_n = dataStreams_V_keep_V_1_empty_n;
    end else begin
        dataStreams_V_keep_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_read_state2 == 1'b1)))) begin
        dataStreams_V_keep_V_1_read = 1'b1;
    end else begin
        dataStreams_V_keep_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op64_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_read_state2 == 1'b1)))) begin
        dataStreams_V_keep_V_blk_n = dataStreams_V_keep_V_empty_n;
    end else begin
        dataStreams_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op64_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_read_state2 == 1'b1)))) begin
        dataStreams_V_keep_V_read = 1'b1;
    end else begin
        dataStreams_V_keep_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_read_state2 == 1'b1)))) begin
        dataStreams_V_last_V_1_blk_n = dataStreams_V_last_V_1_empty_n;
    end else begin
        dataStreams_V_last_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_read_state2 == 1'b1)))) begin
        dataStreams_V_last_V_1_read = 1'b1;
    end else begin
        dataStreams_V_last_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op64_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_read_state2 == 1'b1)))) begin
        dataStreams_V_last_V_blk_n = dataStreams_V_last_V_empty_n;
    end else begin
        dataStreams_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op23_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op64_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_read_state2 == 1'b1)))) begin
        dataStreams_V_last_V_read = 1'b1;
    end else begin
        dataStreams_V_last_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op108_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op105_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op102_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op91_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op88_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op83_write_state3 == 1'b1)))) begin
        m_axis_TDATA_blk_n = m_axis_TREADY_int;
    end else begin
        m_axis_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op91_write_state3 == 1'b1)) begin
            m_axis_TDATA_int = ap_phi_reg_pp0_iter2_tmp_data_V_20_reg_296;
        end else if ((ap_predicate_op88_write_state3 == 1'b1)) begin
            m_axis_TDATA_int = ap_phi_reg_pp0_iter2_tmp_data_V_17_reg_272;
        end else if ((ap_predicate_op83_write_state3 == 1'b1)) begin
            m_axis_TDATA_int = p_Result_s_fu_420_p5;
        end else begin
            m_axis_TDATA_int = 'bx;
        end
    end else begin
        m_axis_TDATA_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op91_write_state3 == 1'b1)) begin
            m_axis_TKEEP_int = ap_phi_reg_pp0_iter2_tmp_keep_V_14_reg_284;
        end else if ((ap_predicate_op88_write_state3 == 1'b1)) begin
            m_axis_TKEEP_int = ap_phi_reg_pp0_iter2_tmp_keep_V_11_reg_260;
        end else if ((ap_predicate_op83_write_state3 == 1'b1)) begin
            m_axis_TKEEP_int = ap_phi_reg_pp0_iter2_tmp_keep_V_17_reg_218;
        end else begin
            m_axis_TKEEP_int = 'bx;
        end
    end else begin
        m_axis_TKEEP_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op91_write_state3 == 1'b1)) begin
            m_axis_TLAST_int = tmp_last_V_11_reg_195;
        end else if ((ap_predicate_op88_write_state3 == 1'b1)) begin
            m_axis_TLAST_int = ap_phi_reg_pp0_iter2_tmp_last_V_8_reg_248;
        end else if ((ap_predicate_op83_write_state3 == 1'b1)) begin
            m_axis_TLAST_int = ap_phi_reg_pp0_iter2_tmp_last_V_14_reg_206;
        end else begin
            m_axis_TLAST_int = 'bx;
        end
    end else begin
        m_axis_TLAST_int = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op91_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op88_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op83_write_state3 == 1'b1)))) begin
        m_axis_TVALID_int = 1'b1;
    end else begin
        m_axis_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_fu_400_p2 = (ic_wordCount_V + 16'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (regslice_both_outputStream_V_data_V_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((io_acc_block_signal_op28 == 1'b0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((io_acc_block_signal_op23 == 1'b0) & (ap_predicate_op23_read_state2 == 1'b1)) | ((io_acc_block_signal_op69 == 1'b0) & (ap_predicate_op69_read_state2 == 1'b1)) | ((io_acc_block_signal_op64 == 1'b0) & (ap_predicate_op64_read_state2 == 1'b1)) | ((io_acc_block_signal_op50 == 1'b0) & (ap_predicate_op50_read_state2 == 1'b1)) | ((io_acc_block_signal_op45 == 1'b0) & (ap_predicate_op45_read_state2 == 1'b1)) | ((checksumStreams_V_V_1_empty_n == 1'b0) & (ap_predicate_op36_read_state2 == 1'b1)) | ((checksumStreams_V_V_s_empty_n == 1'b0) & (ap_predicate_op34_read_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_outputStream_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((io_acc_block_signal_op28 == 1'b0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((io_acc_block_signal_op23 == 1'b0) & (ap_predicate_op23_read_state2 == 1'b1)) | ((io_acc_block_signal_op69 == 1'b0) & (ap_predicate_op69_read_state2 == 1'b1)) | ((io_acc_block_signal_op64 == 1'b0) & (ap_predicate_op64_read_state2 == 1'b1)) | ((io_acc_block_signal_op50 == 1'b0) & (ap_predicate_op50_read_state2 == 1'b1)) | ((io_acc_block_signal_op45 == 1'b0) & (ap_predicate_op45_read_state2 == 1'b1)) | ((checksumStreams_V_V_1_empty_n == 1'b0) & (ap_predicate_op36_read_state2 == 1'b1)) | ((checksumStreams_V_V_s_empty_n == 1'b0) & (ap_predicate_op34_read_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_outputStream_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((io_acc_block_signal_op28 == 1'b0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((io_acc_block_signal_op23 == 1'b0) & (ap_predicate_op23_read_state2 == 1'b1)) | ((io_acc_block_signal_op69 == 1'b0) & (ap_predicate_op69_read_state2 == 1'b1)) | ((io_acc_block_signal_op64 == 1'b0) & (ap_predicate_op64_read_state2 == 1'b1)) | ((io_acc_block_signal_op50 == 1'b0) & (ap_predicate_op50_read_state2 == 1'b1)) | ((io_acc_block_signal_op45 == 1'b0) & (ap_predicate_op45_read_state2 == 1'b1)) | ((checksumStreams_V_V_1_empty_n == 1'b0) & (ap_predicate_op36_read_state2 == 1'b1)) | ((checksumStreams_V_V_s_empty_n == 1'b0) & (ap_predicate_op34_read_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((io_acc_block_signal_op28 == 1'b0) & (ap_predicate_op28_read_state2 == 1'b1)) | ((io_acc_block_signal_op23 == 1'b0) & (ap_predicate_op23_read_state2 == 1'b1)) | ((io_acc_block_signal_op69 == 1'b0) & (ap_predicate_op69_read_state2 == 1'b1)) | ((io_acc_block_signal_op64 == 1'b0) & (ap_predicate_op64_read_state2 == 1'b1)) | ((io_acc_block_signal_op50 == 1'b0) & (ap_predicate_op50_read_state2 == 1'b1)) | ((io_acc_block_signal_op45 == 1'b0) & (ap_predicate_op45_read_state2 == 1'b1)) | ((checksumStreams_V_V_1_empty_n == 1'b0) & (ap_predicate_op36_read_state2 == 1'b1)) | ((checksumStreams_V_V_s_empty_n == 1'b0) & (ap_predicate_op34_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_io = (((m_axis_TREADY_int == 1'b0) & (ap_predicate_op91_write_state3 == 1'b1)) | ((m_axis_TREADY_int == 1'b0) & (ap_predicate_op88_write_state3 == 1'b1)) | ((m_axis_TREADY_int == 1'b0) & (ap_predicate_op83_write_state3 == 1'b1)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = (((m_axis_TREADY_int == 1'b0) & (ap_predicate_op108_write_state4 == 1'b1)) | ((m_axis_TREADY_int == 1'b0) & (ap_predicate_op105_write_state4 == 1'b1)) | ((m_axis_TREADY_int == 1'b0) & (ap_predicate_op102_write_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (regslice_both_outputStream_V_data_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_condition_125 = ((or_ln377_fu_376_p2 == 1'd1) & (grp_nbreadreq_fu_74_p5 == 1'd0) & (ic_wordCount_V == 16'd0));
end

always @ (*) begin
    ap_condition_133 = ((grp_nbreadreq_fu_74_p5 == 1'd1) & (or_ln377_fu_376_p2 == 1'd1) & (ic_wordCount_V == 16'd0));
end

always @ (*) begin
    ap_condition_143 = (~(ic_wordCount_V == 16'd2) & ~(ic_wordCount_V == 16'd0) & (streamSource_V_load_reg_433 == 1'd0));
end

always @ (*) begin
    ap_condition_146 = (~(ic_wordCount_V == 16'd2) & ~(ic_wordCount_V == 16'd0) & (ap_phi_mux_tmp_phi_fu_186_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd0));
end

always @ (*) begin
    ap_condition_153 = (~(ic_wordCount_V == 16'd2) & ~(ic_wordCount_V == 16'd0) & (streamSource_V_load_reg_433 == 1'd1));
end

always @ (*) begin
    ap_condition_154 = (~(ic_wordCount_V == 16'd2) & ~(ic_wordCount_V == 16'd0) & (ap_phi_mux_tmp_phi_fu_186_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd1));
end

always @ (*) begin
    ap_condition_315 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_411 = ((ap_phi_mux_tmp_17_phi_fu_174_p4 == 1'd1) & (ap_phi_mux_tmp_16_phi_fu_162_p4 == 1'd1) & (ic_wordCount_V == 16'd2));
end

always @ (*) begin
    ap_condition_416 = (~(ic_wordCount_V == 16'd2) & ~(ic_wordCount_V == 16'd0) & (ap_phi_mux_tmp_phi_fu_186_p4 == 1'd1));
end

always @ (*) begin
    ap_condition_68 = ((ap_phi_mux_tmp_16_phi_fu_162_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd0) & (ic_wordCount_V == 16'd2));
end

always @ (*) begin
    ap_condition_71 = ((ap_phi_mux_tmp_17_phi_fu_174_p4 == 1'd1) & (ap_phi_mux_tmp_16_phi_fu_162_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd0) & (ic_wordCount_V == 16'd2));
end

always @ (*) begin
    ap_condition_92 = ((ap_phi_mux_tmp_16_phi_fu_162_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd1) & (ic_wordCount_V == 16'd2));
end

always @ (*) begin
    ap_condition_93 = ((ap_phi_mux_tmp_17_phi_fu_174_p4 == 1'd1) & (ap_phi_mux_tmp_16_phi_fu_162_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd1) & (ic_wordCount_V == 16'd2));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_icmpChecksum_V_1_reg_239 = 'bx;

assign ap_phi_reg_pp0_iter0_p_Val2_s_reg_230 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_data_V_17_reg_272 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_data_V_20_reg_296 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_keep_V_11_reg_260 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_keep_V_14_reg_284 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_keep_V_17_reg_218 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_last_V_14_reg_206 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_last_V_8_reg_248 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_16_reg_159 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_17_reg_171 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_last_V_11_reg_195 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_reg_183 = 'bx;

always @ (*) begin
    ap_predicate_op102_write_state4 = ((tmp_17_reg_171_pp0_iter2_reg == 1'd1) & (tmp_16_reg_159_pp0_iter2_reg == 1'd1) & (t_V_reg_437_pp0_iter2_reg == 16'd2));
end

always @ (*) begin
    ap_predicate_op105_write_state4 = ((or_ln377_reg_465_pp0_iter2_reg == 1'd1) & (t_V_reg_437_pp0_iter2_reg == 16'd0));
end

always @ (*) begin
    ap_predicate_op108_write_state4 = (~(t_V_reg_437_pp0_iter2_reg == 16'd0) & ~(t_V_reg_437_pp0_iter2_reg == 16'd2) & (tmp_reg_183_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op23_read_state2 = ((ap_phi_mux_tmp_17_phi_fu_174_p4 == 1'd1) & (ap_phi_mux_tmp_16_phi_fu_162_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd0) & (ic_wordCount_V == 16'd2));
end

always @ (*) begin
    ap_predicate_op28_read_state2 = ((ap_phi_mux_tmp_17_phi_fu_174_p4 == 1'd1) & (ap_phi_mux_tmp_16_phi_fu_162_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd1) & (ic_wordCount_V == 16'd2));
end

always @ (*) begin
    ap_predicate_op34_read_state2 = ((ap_phi_mux_tmp_17_phi_fu_174_p4 == 1'd1) & (ap_phi_mux_tmp_16_phi_fu_162_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd0) & (ic_wordCount_V == 16'd2));
end

always @ (*) begin
    ap_predicate_op36_read_state2 = ((ap_phi_mux_tmp_17_phi_fu_174_p4 == 1'd1) & (ap_phi_mux_tmp_16_phi_fu_162_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd1) & (ic_wordCount_V == 16'd2));
end

always @ (*) begin
    ap_predicate_op45_read_state2 = ((or_ln377_fu_376_p2 == 1'd1) & (grp_nbreadreq_fu_74_p5 == 1'd0) & (ic_wordCount_V == 16'd0));
end

always @ (*) begin
    ap_predicate_op50_read_state2 = ((grp_nbreadreq_fu_74_p5 == 1'd1) & (or_ln377_fu_376_p2 == 1'd1) & (ic_wordCount_V == 16'd0));
end

always @ (*) begin
    ap_predicate_op64_read_state2 = (~(ic_wordCount_V == 16'd2) & ~(ic_wordCount_V == 16'd0) & (ap_phi_mux_tmp_phi_fu_186_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd0));
end

always @ (*) begin
    ap_predicate_op69_read_state2 = (~(ic_wordCount_V == 16'd2) & ~(ic_wordCount_V == 16'd0) & (ap_phi_mux_tmp_phi_fu_186_p4 == 1'd1) & (streamSource_V_load_reg_433 == 1'd1));
end

always @ (*) begin
    ap_predicate_op83_write_state3 = ((tmp_17_reg_171 == 1'd1) & (tmp_16_reg_159 == 1'd1) & (t_V_reg_437 == 16'd2));
end

always @ (*) begin
    ap_predicate_op88_write_state3 = ((or_ln377_reg_465 == 1'd1) & (t_V_reg_437 == 16'd0));
end

always @ (*) begin
    ap_predicate_op91_write_state3 = (~(t_V_reg_437 == 16'd0) & ~(t_V_reg_437 == 16'd2) & (tmp_reg_183 == 1'd1));
end

assign grp_nbreadreq_fu_74_p5 = (dataStreams_V_last_V_empty_n & dataStreams_V_keep_V_empty_n & dataStreams_V_data_V_empty_n);

assign grp_nbreadreq_fu_86_p5 = (dataStreams_V_last_V_1_empty_n & dataStreams_V_keep_V_1_empty_n & dataStreams_V_data_V_1_empty_n);

assign io_acc_block_signal_op23 = (dataStreams_V_last_V_empty_n & dataStreams_V_keep_V_empty_n & dataStreams_V_data_V_empty_n);

assign io_acc_block_signal_op28 = (dataStreams_V_last_V_1_empty_n & dataStreams_V_keep_V_1_empty_n & dataStreams_V_data_V_1_empty_n);

assign io_acc_block_signal_op45 = (dataStreams_V_last_V_1_empty_n & dataStreams_V_keep_V_1_empty_n & dataStreams_V_data_V_1_empty_n);

assign io_acc_block_signal_op50 = (dataStreams_V_last_V_empty_n & dataStreams_V_keep_V_empty_n & dataStreams_V_data_V_empty_n);

assign io_acc_block_signal_op64 = (dataStreams_V_last_V_empty_n & dataStreams_V_keep_V_empty_n & dataStreams_V_data_V_empty_n);

assign io_acc_block_signal_op69 = (dataStreams_V_last_V_1_empty_n & dataStreams_V_keep_V_1_empty_n & dataStreams_V_data_V_1_empty_n);

assign m_axis_TVALID = regslice_both_outputStream_V_data_V_U_vld_out;

assign or_ln377_fu_376_p2 = (grp_nbreadreq_fu_86_p5 | grp_nbreadreq_fu_74_p5);

assign p_Result_s_fu_420_p5 = {{ap_phi_reg_pp0_iter2_icmpChecksum_V_1_reg_239}, {ap_phi_reg_pp0_iter2_p_Val2_s_reg_230[47:0]}};

assign select_ln399_fu_406_p3 = ((ap_phi_mux_tmp_last_V_11_phi_fu_199_p4[0:0] === 1'b1) ? 16'd0 : add_ln700_fu_400_p2);

assign tmp_2_i_nbreadreq_fu_98_p3 = checksumStreams_V_V_s_empty_n;

assign tmp_3_i_nbreadreq_fu_106_p3 = checksumStreams_V_V_1_empty_n;

assign xor_ln377_fu_382_p2 = (grp_nbreadreq_fu_74_p5 ^ 1'd1);

endmodule //insertChecksum
