// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module udp_lshiftWordByOcte (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        s_axis_tx_data_TVALID,
        tx_shift2udpFifo_V_d_din,
        tx_shift2udpFifo_V_d_full_n,
        tx_shift2udpFifo_V_d_write,
        tx_shift2udpFifo_V_k_din,
        tx_shift2udpFifo_V_k_full_n,
        tx_shift2udpFifo_V_k_write,
        tx_shift2udpFifo_V_l_din,
        tx_shift2udpFifo_V_l_full_n,
        tx_shift2udpFifo_V_l_write,
        s_axis_tx_data_TDATA,
        s_axis_tx_data_TREADY,
        s_axis_tx_data_TKEEP,
        s_axis_tx_data_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   s_axis_tx_data_TVALID;
output  [511:0] tx_shift2udpFifo_V_d_din;
input   tx_shift2udpFifo_V_d_full_n;
output   tx_shift2udpFifo_V_d_write;
output  [63:0] tx_shift2udpFifo_V_k_din;
input   tx_shift2udpFifo_V_k_full_n;
output   tx_shift2udpFifo_V_k_write;
output  [0:0] tx_shift2udpFifo_V_l_din;
input   tx_shift2udpFifo_V_l_full_n;
output   tx_shift2udpFifo_V_l_write;
input  [511:0] s_axis_tx_data_TDATA;
output   s_axis_tx_data_TREADY;
input  [63:0] s_axis_tx_data_TKEEP;
input  [0:0] s_axis_tx_data_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[511:0] tx_shift2udpFifo_V_d_din;
reg tx_shift2udpFifo_V_d_write;
reg[63:0] tx_shift2udpFifo_V_k_din;
reg tx_shift2udpFifo_V_k_write;
reg[0:0] tx_shift2udpFifo_V_l_din;
reg tx_shift2udpFifo_V_l_write;
reg s_axis_tx_data_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] ls_writeRemainder_lo_load_fu_134_p1;
wire   [0:0] tmp_nbreadreq_fu_76_p5;
reg    ap_predicate_op9_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    io_acc_block_signal_op40;
reg   [0:0] ls_writeRemainder_lo_reg_305;
reg   [0:0] tmp_reg_309;
reg    ap_predicate_op40_write_state2;
wire    io_acc_block_signal_op47;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ls_writeRemainder;
reg   [511:0] prevWord_data_V;
reg   [63:0] prevWord_keep_V_1;
reg   [0:0] ls_firstWord;
reg    s_axis_tx_data_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    tx_shift2udpFifo_V_d_blk_n;
reg    tx_shift2udpFifo_V_k_blk_n;
reg    tx_shift2udpFifo_V_l_blk_n;
wire   [63:0] sendWord_keep_V_fu_221_p3;
reg   [63:0] sendWord_keep_V_reg_316;
wire   [511:0] sendWord_data_V_fu_229_p3;
reg   [511:0] sendWord_data_V_reg_321;
wire   [0:0] sendWord_last_V_fu_237_p2;
reg   [0:0] sendWord_last_V_reg_326;
reg   [63:0] p_Result_i_reg_331;
wire   [7:0] grp_fu_125_p4;
reg   [7:0] p_Result_i_36_reg_336;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] ap_phi_reg_pp0_iter0_ls_firstWord_new_0_i_reg_112;
reg   [0:0] ap_phi_reg_pp0_iter1_ls_firstWord_new_0_i_reg_112;
wire   [0:0] tmp_last_V_fu_155_p1;
wire   [0:0] xor_ln761_fu_255_p2;
reg   [0:0] ap_sig_allocacmp_ls_firstWord_load;
reg    ap_block_pp0_stage0_01001;
wire   [511:0] p_Result_s_fu_289_p3;
wire   [63:0] p_Result_4_fu_297_p3;
wire   [55:0] trunc_ln647_2_fu_173_p1;
wire   [447:0] trunc_ln647_fu_163_p1;
wire   [63:0] p_Result_16_i_fu_195_p4;
wire   [63:0] p_Result_6_fu_177_p3;
wire   [63:0] p_Result_8_fu_213_p3;
wire   [511:0] p_Result_5_fu_167_p2;
wire   [511:0] p_Result_7_fu_205_p3;
wire   [7:0] p_Result_15_i_fu_185_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_141;
reg    ap_condition_145;
reg    ap_condition_87;
reg    ap_condition_170;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ls_writeRemainder = 1'd0;
#0 prevWord_data_V = 512'd0;
#0 prevWord_keep_V_1 = 64'd0;
#0 ls_firstWord = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_87)) begin
        if ((1'b1 == ap_condition_145)) begin
            ap_phi_reg_pp0_iter1_ls_firstWord_new_0_i_reg_112 <= 1'd0;
        end else if ((1'b1 == ap_condition_141)) begin
            ap_phi_reg_pp0_iter1_ls_firstWord_new_0_i_reg_112 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_ls_firstWord_new_0_i_reg_112 <= ap_phi_reg_pp0_iter0_ls_firstWord_new_0_i_reg_112;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_87)) begin
        if ((ls_writeRemainder_lo_load_fu_134_p1 == 1'd1)) begin
            ls_writeRemainder <= 1'd0;
        end else if ((1'b1 == ap_condition_141)) begin
            ls_writeRemainder <= xor_ln761_fu_255_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_309 == 1'd1) & (ls_writeRemainder_lo_reg_305 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ls_firstWord <= ap_phi_reg_pp0_iter1_ls_firstWord_new_0_i_reg_112;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ls_writeRemainder_lo_reg_305 <= ls_writeRemainder;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ls_writeRemainder_lo_load_fu_134_p1 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_i_36_reg_336 <= {{prevWord_keep_V_1[63:56]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ls_writeRemainder_lo_load_fu_134_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_i_reg_331 <= {{prevWord_data_V[511:448]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_76_p5 == 1'd1) & (ls_writeRemainder == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prevWord_data_V <= s_axis_tx_data_TDATA;
        prevWord_keep_V_1 <= s_axis_tx_data_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_76_p5 == 1'd1) & (ls_writeRemainder == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sendWord_data_V_reg_321 <= sendWord_data_V_fu_229_p3;
        sendWord_keep_V_reg_316 <= sendWord_keep_V_fu_221_p3;
        sendWord_last_V_reg_326 <= sendWord_last_V_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ls_writeRemainder == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_309 <= tmp_nbreadreq_fu_76_p5;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_309 == 1'd1) & (ls_writeRemainder_lo_reg_305 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_ls_firstWord_load = ap_phi_reg_pp0_iter1_ls_firstWord_new_0_i_reg_112;
    end else begin
        ap_sig_allocacmp_ls_firstWord_load = ls_firstWord;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op9_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        s_axis_tx_data_TDATA_blk_n = s_axis_tx_data_TVALID;
    end else begin
        s_axis_tx_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op9_read_state1 == 1'b1))) begin
        s_axis_tx_data_TREADY = 1'b1;
    end else begin
        s_axis_tx_data_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ls_writeRemainder_lo_reg_305 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op40_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        tx_shift2udpFifo_V_d_blk_n = tx_shift2udpFifo_V_d_full_n;
    end else begin
        tx_shift2udpFifo_V_d_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_170)) begin
        if ((ls_writeRemainder_lo_reg_305 == 1'd1)) begin
            tx_shift2udpFifo_V_d_din = p_Result_s_fu_289_p3;
        end else if ((ap_predicate_op40_write_state2 == 1'b1)) begin
            tx_shift2udpFifo_V_d_din = sendWord_data_V_reg_321;
        end else begin
            tx_shift2udpFifo_V_d_din = 'bx;
        end
    end else begin
        tx_shift2udpFifo_V_d_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ls_writeRemainder_lo_reg_305 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op40_write_state2 == 1'b1)))) begin
        tx_shift2udpFifo_V_d_write = 1'b1;
    end else begin
        tx_shift2udpFifo_V_d_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ls_writeRemainder_lo_reg_305 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op40_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        tx_shift2udpFifo_V_k_blk_n = tx_shift2udpFifo_V_k_full_n;
    end else begin
        tx_shift2udpFifo_V_k_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_170)) begin
        if ((ls_writeRemainder_lo_reg_305 == 1'd1)) begin
            tx_shift2udpFifo_V_k_din = p_Result_4_fu_297_p3;
        end else if ((ap_predicate_op40_write_state2 == 1'b1)) begin
            tx_shift2udpFifo_V_k_din = sendWord_keep_V_reg_316;
        end else begin
            tx_shift2udpFifo_V_k_din = 'bx;
        end
    end else begin
        tx_shift2udpFifo_V_k_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ls_writeRemainder_lo_reg_305 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op40_write_state2 == 1'b1)))) begin
        tx_shift2udpFifo_V_k_write = 1'b1;
    end else begin
        tx_shift2udpFifo_V_k_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ls_writeRemainder_lo_reg_305 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op40_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        tx_shift2udpFifo_V_l_blk_n = tx_shift2udpFifo_V_l_full_n;
    end else begin
        tx_shift2udpFifo_V_l_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_170)) begin
        if ((ls_writeRemainder_lo_reg_305 == 1'd1)) begin
            tx_shift2udpFifo_V_l_din = 1'd1;
        end else if ((ap_predicate_op40_write_state2 == 1'b1)) begin
            tx_shift2udpFifo_V_l_din = sendWord_last_V_reg_326;
        end else begin
            tx_shift2udpFifo_V_l_din = 'bx;
        end
    end else begin
        tx_shift2udpFifo_V_l_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ls_writeRemainder_lo_reg_305 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op40_write_state2 == 1'b1)))) begin
        tx_shift2udpFifo_V_l_write = 1'b1;
    end else begin
        tx_shift2udpFifo_V_l_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ls_writeRemainder_lo_reg_305 == 1'd1) & (io_acc_block_signal_op47 == 1'b0)) | ((io_acc_block_signal_op40 == 1'b0) & (ap_predicate_op40_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((s_axis_tx_data_TVALID == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ls_writeRemainder_lo_reg_305 == 1'd1) & (io_acc_block_signal_op47 == 1'b0)) | ((io_acc_block_signal_op40 == 1'b0) & (ap_predicate_op40_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((s_axis_tx_data_TVALID == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ls_writeRemainder_lo_reg_305 == 1'd1) & (io_acc_block_signal_op47 == 1'b0)) | ((io_acc_block_signal_op40 == 1'b0) & (ap_predicate_op40_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((s_axis_tx_data_TVALID == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((s_axis_tx_data_TVALID == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ls_writeRemainder_lo_reg_305 == 1'd1) & (io_acc_block_signal_op47 == 1'b0)) | ((io_acc_block_signal_op40 == 1'b0) & (ap_predicate_op40_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_141 = ((tmp_last_V_fu_155_p1 == 1'd1) & (tmp_nbreadreq_fu_76_p5 == 1'd1) & (ls_writeRemainder == 1'd0));
end

always @ (*) begin
    ap_condition_145 = ((tmp_nbreadreq_fu_76_p5 == 1'd1) & (tmp_last_V_fu_155_p1 == 1'd0) & (ls_writeRemainder == 1'd0));
end

always @ (*) begin
    ap_condition_170 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

always @ (*) begin
    ap_condition_87 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_ls_firstWord_new_0_i_reg_112 = 'bx;

always @ (*) begin
    ap_predicate_op40_write_state2 = ((tmp_reg_309 == 1'd1) & (ls_writeRemainder_lo_reg_305 == 1'd0));
end

always @ (*) begin
    ap_predicate_op9_read_state1 = ((tmp_nbreadreq_fu_76_p5 == 1'd1) & (ls_writeRemainder == 1'd0));
end

assign grp_fu_125_p4 = {{prevWord_keep_V_1[63:56]}};

assign io_acc_block_signal_op40 = (tx_shift2udpFifo_V_l_full_n & tx_shift2udpFifo_V_k_full_n & tx_shift2udpFifo_V_d_full_n);

assign io_acc_block_signal_op47 = (tx_shift2udpFifo_V_l_full_n & tx_shift2udpFifo_V_k_full_n & tx_shift2udpFifo_V_d_full_n);

assign ls_writeRemainder_lo_load_fu_134_p1 = ls_writeRemainder;

assign p_Result_15_i_fu_185_p4 = {{s_axis_tx_data_TKEEP[63:56]}};

assign p_Result_16_i_fu_195_p4 = {{prevWord_data_V[511:448]}};

assign p_Result_4_fu_297_p3 = {{56'd0}, {p_Result_i_36_reg_336}};

assign p_Result_5_fu_167_p2 = s_axis_tx_data_TDATA << 512'd64;

assign p_Result_6_fu_177_p3 = {{trunc_ln647_2_fu_173_p1}, {8'd255}};

assign p_Result_7_fu_205_p3 = {{trunc_ln647_fu_163_p1}, {p_Result_16_i_fu_195_p4}};

assign p_Result_8_fu_213_p3 = {{trunc_ln647_2_fu_173_p1}, {grp_fu_125_p4}};

assign p_Result_s_fu_289_p3 = {{448'd0}, {p_Result_i_reg_331}};

assign sendWord_data_V_fu_229_p3 = ((ap_sig_allocacmp_ls_firstWord_load[0:0] === 1'b1) ? p_Result_5_fu_167_p2 : p_Result_7_fu_205_p3);

assign sendWord_keep_V_fu_221_p3 = ((ap_sig_allocacmp_ls_firstWord_load[0:0] === 1'b1) ? p_Result_6_fu_177_p3 : p_Result_8_fu_213_p3);

assign sendWord_last_V_fu_237_p2 = ((p_Result_15_i_fu_185_p4 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_last_V_fu_155_p1 = s_axis_tx_data_TLAST;

assign tmp_nbreadreq_fu_76_p5 = s_axis_tx_data_TVALID;

assign trunc_ln647_2_fu_173_p1 = s_axis_tx_data_TKEEP[55:0];

assign trunc_ln647_fu_163_p1 = s_axis_tx_data_TDATA[447:0];

assign xor_ln761_fu_255_p2 = (sendWord_last_V_fu_237_p2 ^ 1'd1);

endmodule //udp_lshiftWordByOcte
