// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module insert_ethernet_head (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        dataStreamBuffer4_V_dout,
        dataStreamBuffer4_V_empty_n,
        dataStreamBuffer4_V_read,
        headerFifo_V_dout,
        headerFifo_V_empty_n,
        headerFifo_V_read,
        m_axis_ip_TREADY,
        m_axis_ip_TDATA,
        m_axis_ip_TVALID,
        m_axis_ip_TKEEP,
        m_axis_ip_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    ap_const_lv512_lc_2 = 512'd0;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [576:0] dataStreamBuffer4_V_dout;
input   dataStreamBuffer4_V_empty_n;
output   dataStreamBuffer4_V_read;
input  [128:0] headerFifo_V_dout;
input   headerFifo_V_empty_n;
output   headerFifo_V_read;
input   m_axis_ip_TREADY;
output  [511:0] m_axis_ip_TDATA;
output   m_axis_ip_TVALID;
output  [63:0] m_axis_ip_TKEEP;
output  [0:0] m_axis_ip_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dataStreamBuffer4_V_read;
reg headerFifo_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] grp_nbreadreq_fu_92_p3;
reg    ap_predicate_op7_read_state1;
wire   [0:0] grp_nbreadreq_fu_106_p3;
reg    ap_predicate_op14_read_state1;
reg    ap_predicate_op16_read_state1;
reg    ap_predicate_op34_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [1:0] ge_state_load_reg_383;
reg   [0:0] tmp_5_reg_387;
reg    ap_predicate_op48_write_state2;
reg   [0:0] tmp_4_reg_401;
reg   [0:0] tmp_6_reg_405;
reg    ap_predicate_op54_write_state2;
reg   [0:0] tmp_reg_430;
reg    ap_predicate_op57_write_state2;
reg    ap_block_state2_io;
wire    regslice_both_dataOut_V_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [1:0] ge_state_load_reg_383_pp0_iter1_reg;
reg   [0:0] tmp_5_reg_387_pp0_iter1_reg;
reg    ap_predicate_op62_write_state3;
reg   [0:0] tmp_4_reg_401_pp0_iter1_reg;
reg   [0:0] tmp_6_reg_405_pp0_iter1_reg;
reg    ap_predicate_op66_write_state3;
reg   [0:0] tmp_reg_430_pp0_iter1_reg;
reg    ap_predicate_op69_write_state3;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [1:0] ge_state;
reg    m_axis_ip_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    headerFifo_V_blk_n;
reg    dataStreamBuffer4_V_blk_n;
reg   [63:0] reg_169;
wire   [511:0] tmp_data_V_1_fu_178_p1;
reg   [511:0] tmp_data_V_1_reg_391;
wire   [0:0] grp_fu_145_p3;
reg   [0:0] tmp_last_V_reg_396;
wire   [511:0] p_Val2_6_fu_192_p1;
reg   [511:0] p_Val2_6_reg_409;
wire   [0:0] icmp_ln82_fu_204_p2;
reg   [0:0] icmp_ln82_reg_415;
wire   [111:0] p_Result_9_fu_260_p2;
reg   [111:0] p_Result_9_reg_420;
reg   [0:0] tmp_last_V_3_reg_425;
wire   [111:0] p_Result_7_fu_348_p2;
reg   [111:0] p_Result_7_reg_434;
wire   [511:0] tmp_data_V_2_fu_364_p3;
wire   [511:0] p_Result_8_fu_371_p5;
reg    ap_block_pp0_stage0_subdone;
wire   [1:0] select_ln250_fu_266_p3;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] grp_fu_159_p4;
wire   [24:0] Lo_assign_1_fu_196_p3;
wire   [0:0] icmp_ln647_1_fu_210_p2;
wire   [0:0] tmp_73_fu_216_p3;
wire   [0:0] tmp_74_fu_224_p3;
wire   [0:0] select_ln647_3_fu_232_p3;
wire   [111:0] zext_ln647_1_fu_240_p1;
wire   [111:0] p_Val2_5_fu_182_p4;
wire   [111:0] select_ln647_4_fu_244_p3;
wire   [111:0] select_ln647_5_fu_252_p3;
wire   [24:0] Lo_assign_fu_290_p3;
wire   [0:0] icmp_ln647_fu_298_p2;
wire   [0:0] tmp_70_fu_304_p3;
wire   [0:0] tmp_71_fu_312_p3;
wire   [0:0] select_ln647_fu_320_p3;
wire   [111:0] zext_ln647_fu_328_p1;
wire   [111:0] p_Val2_s_fu_280_p4;
wire   [111:0] select_ln647_1_fu_332_p3;
wire   [111:0] select_ln647_2_fu_340_p3;
wire   [511:0] p_Result_s_fu_354_p5;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg   [511:0] m_axis_ip_TDATA_int;
reg    m_axis_ip_TVALID_int;
wire    m_axis_ip_TREADY_int;
wire    regslice_both_dataOut_V_data_V_U_vld_out;
wire    regslice_both_dataOut_V_keep_V_U_apdone_blk;
reg   [63:0] m_axis_ip_TKEEP_int;
wire    regslice_both_dataOut_V_keep_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_keep_V_U_vld_out;
wire    regslice_both_dataOut_V_last_V_U_apdone_blk;
reg   [0:0] m_axis_ip_TLAST_int;
wire    regslice_both_dataOut_V_last_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_last_V_U_vld_out;
reg    ap_condition_268;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ge_state = 2'd1;
end

regslice_both #(
    .DataWidth( 512 ))
regslice_both_dataOut_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_ip_TDATA_int),
    .vld_in(m_axis_ip_TVALID_int),
    .ack_in(m_axis_ip_TREADY_int),
    .data_out(m_axis_ip_TDATA),
    .vld_out(regslice_both_dataOut_V_data_V_U_vld_out),
    .ack_out(m_axis_ip_TREADY),
    .apdone_blk(regslice_both_dataOut_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataOut_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_ip_TKEEP_int),
    .vld_in(m_axis_ip_TVALID_int),
    .ack_in(regslice_both_dataOut_V_keep_V_U_ack_in_dummy),
    .data_out(m_axis_ip_TKEEP),
    .vld_out(regslice_both_dataOut_V_keep_V_U_vld_out),
    .ack_out(m_axis_ip_TREADY),
    .apdone_blk(regslice_both_dataOut_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataOut_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_ip_TLAST_int),
    .vld_in(m_axis_ip_TVALID_int),
    .ack_in(regslice_both_dataOut_V_last_V_U_ack_in_dummy),
    .data_out(m_axis_ip_TLAST),
    .vld_out(regslice_both_dataOut_V_last_V_U_vld_out),
    .ack_out(m_axis_ip_TREADY),
    .apdone_blk(regslice_both_dataOut_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_106_p3 == 1'd1) & (grp_nbreadreq_fu_92_p3 == 1'd1) & (ge_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ge_state <= select_ln250_fu_266_p3;
    end else if ((((grp_nbreadreq_fu_106_p3 == 1'd1) & (ge_state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_fu_145_p3 == 1'd1) & (grp_nbreadreq_fu_92_p3 == 1'd1) & (ge_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ge_state <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ge_state_load_reg_383 <= ge_state;
        ge_state_load_reg_383_pp0_iter1_reg <= ge_state_load_reg_383;
        tmp_4_reg_401_pp0_iter1_reg <= tmp_4_reg_401;
        tmp_5_reg_387_pp0_iter1_reg <= tmp_5_reg_387;
        tmp_6_reg_405_pp0_iter1_reg <= tmp_6_reg_405;
        tmp_reg_430_pp0_iter1_reg <= tmp_reg_430;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_106_p3 == 1'd1) & (grp_nbreadreq_fu_92_p3 == 1'd1) & (ge_state == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln82_reg_415 <= icmp_ln82_fu_204_p2;
        p_Result_9_reg_420 <= p_Result_9_fu_260_p2;
        p_Val2_6_reg_409 <= p_Val2_6_fu_192_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_106_p3 == 1'd1) & (ge_state == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_7_reg_434 <= p_Result_7_fu_348_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_nbreadreq_fu_106_p3 == 1'd1) & (grp_nbreadreq_fu_92_p3 == 1'd1) & (ge_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_92_p3 == 1'd1) & (ge_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_169 <= {{dataStreamBuffer4_V_dout[575:512]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ge_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_reg_401 <= grp_nbreadreq_fu_106_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ge_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_5_reg_387 <= grp_nbreadreq_fu_92_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_106_p3 == 1'd1) & (ge_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_6_reg_405 <= grp_nbreadreq_fu_92_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_92_p3 == 1'd1) & (ge_state == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_1_reg_391 <= tmp_data_V_1_fu_178_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_106_p3 == 1'd1) & (grp_nbreadreq_fu_92_p3 == 1'd1) & (ge_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_3_reg_425 <= dataStreamBuffer4_V_dout[32'd576];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_92_p3 == 1'd1) & (ge_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_reg_396 <= dataStreamBuffer4_V_dout[32'd576];
    end
end

always @ (posedge ap_clk) begin
    if (((ge_state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_430 <= grp_nbreadreq_fu_106_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op16_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        dataStreamBuffer4_V_blk_n = dataStreamBuffer4_V_empty_n;
    end else begin
        dataStreamBuffer4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op16_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        dataStreamBuffer4_V_read = 1'b1;
    end else begin
        dataStreamBuffer4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op34_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        headerFifo_V_blk_n = headerFifo_V_empty_n;
    end else begin
        headerFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op34_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op14_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        headerFifo_V_read = 1'b1;
    end else begin
        headerFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op57_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op54_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op69_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op66_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op62_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        m_axis_ip_TDATA_blk_n = m_axis_ip_TREADY_int;
    end else begin
        m_axis_ip_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_268)) begin
        if ((ap_predicate_op57_write_state2 == 1'b1)) begin
            m_axis_ip_TDATA_int = p_Result_8_fu_371_p5;
        end else if ((ap_predicate_op54_write_state2 == 1'b1)) begin
            m_axis_ip_TDATA_int = tmp_data_V_2_fu_364_p3;
        end else if ((ap_predicate_op48_write_state2 == 1'b1)) begin
            m_axis_ip_TDATA_int = tmp_data_V_1_reg_391;
        end else begin
            m_axis_ip_TDATA_int = 'bx;
        end
    end else begin
        m_axis_ip_TDATA_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op57_write_state2 == 1'b1))) begin
        m_axis_ip_TKEEP_int = 64'd18446744073709551615;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op54_write_state2 == 1'b1)))) begin
        m_axis_ip_TKEEP_int = reg_169;
    end else begin
        m_axis_ip_TKEEP_int = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_268)) begin
        if ((ap_predicate_op57_write_state2 == 1'b1)) begin
            m_axis_ip_TLAST_int = 1'd0;
        end else if ((ap_predicate_op54_write_state2 == 1'b1)) begin
            m_axis_ip_TLAST_int = tmp_last_V_3_reg_425;
        end else if ((ap_predicate_op48_write_state2 == 1'b1)) begin
            m_axis_ip_TLAST_int = tmp_last_V_reg_396;
        end else begin
            m_axis_ip_TLAST_int = 'bx;
        end
    end else begin
        m_axis_ip_TLAST_int = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op57_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op54_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axis_ip_TVALID_int = 1'b1;
    end else begin
        m_axis_ip_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Lo_assign_1_fu_196_p3 = {{grp_fu_159_p4}, {9'd0}};

assign Lo_assign_fu_290_p3 = {{grp_fu_159_p4}, {9'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op34_read_state1 == 1'b1)) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op16_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op34_read_state1 == 1'b1)) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op16_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op34_read_state1 == 1'b1)) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op16_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op34_read_state1 == 1'b1)) | ((headerFifo_V_empty_n == 1'b0) & (ap_predicate_op14_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op16_read_state1 == 1'b1)) | ((dataStreamBuffer4_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = (((m_axis_ip_TREADY_int == 1'b0) & (ap_predicate_op48_write_state2 == 1'b1)) | ((m_axis_ip_TREADY_int == 1'b0) & (ap_predicate_op57_write_state2 == 1'b1)) | ((m_axis_ip_TREADY_int == 1'b0) & (ap_predicate_op54_write_state2 == 1'b1)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((m_axis_ip_TREADY_int == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((m_axis_ip_TREADY_int == 1'b0) & (ap_predicate_op66_write_state3 == 1'b1)) | ((m_axis_ip_TREADY_int == 1'b0) & (ap_predicate_op62_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_condition_268 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op14_read_state1 = ((grp_nbreadreq_fu_106_p3 == 1'd1) & (grp_nbreadreq_fu_92_p3 == 1'd1) & (ge_state == 2'd1));
end

always @ (*) begin
    ap_predicate_op16_read_state1 = ((grp_nbreadreq_fu_106_p3 == 1'd1) & (grp_nbreadreq_fu_92_p3 == 1'd1) & (ge_state == 2'd1));
end

always @ (*) begin
    ap_predicate_op34_read_state1 = ((grp_nbreadreq_fu_106_p3 == 1'd1) & (ge_state == 2'd0));
end

always @ (*) begin
    ap_predicate_op48_write_state2 = ((tmp_5_reg_387 == 1'd1) & (ge_state_load_reg_383 == 2'd2));
end

always @ (*) begin
    ap_predicate_op54_write_state2 = ((ge_state_load_reg_383 == 2'd1) & (tmp_6_reg_405 == 1'd1) & (tmp_4_reg_401 == 1'd1));
end

always @ (*) begin
    ap_predicate_op57_write_state2 = ((ge_state_load_reg_383 == 2'd0) & (tmp_reg_430 == 1'd1));
end

always @ (*) begin
    ap_predicate_op62_write_state3 = ((tmp_5_reg_387_pp0_iter1_reg == 1'd1) & (ge_state_load_reg_383_pp0_iter1_reg == 2'd2));
end

always @ (*) begin
    ap_predicate_op66_write_state3 = ((ge_state_load_reg_383_pp0_iter1_reg == 2'd1) & (tmp_6_reg_405_pp0_iter1_reg == 1'd1) & (tmp_4_reg_401_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op69_write_state3 = ((ge_state_load_reg_383_pp0_iter1_reg == 2'd0) & (tmp_reg_430_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op7_read_state1 = ((grp_nbreadreq_fu_92_p3 == 1'd1) & (ge_state == 2'd2));
end

assign grp_fu_145_p3 = dataStreamBuffer4_V_dout[32'd576];

assign grp_fu_159_p4 = {{headerFifo_V_dout[16:1]}};

assign grp_nbreadreq_fu_106_p3 = headerFifo_V_empty_n;

assign grp_nbreadreq_fu_92_p3 = dataStreamBuffer4_V_empty_n;

assign icmp_ln647_1_fu_210_p2 = ((Lo_assign_1_fu_196_p3 > 25'd111) ? 1'b1 : 1'b0);

assign icmp_ln647_fu_298_p2 = ((Lo_assign_fu_290_p3 > 25'd111) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_204_p2 = ((Lo_assign_1_fu_196_p3 < 25'd112) ? 1'b1 : 1'b0);

assign m_axis_ip_TVALID = regslice_both_dataOut_V_data_V_U_vld_out;

assign p_Result_7_fu_348_p2 = (select_ln647_2_fu_340_p3 & select_ln647_1_fu_332_p3);

assign p_Result_8_fu_371_p5 = {{ap_const_lv512_lc_2[511:112]}, {p_Result_7_reg_434}};

assign p_Result_9_fu_260_p2 = (select_ln647_5_fu_252_p3 & select_ln647_4_fu_244_p3);

assign p_Result_s_fu_354_p5 = {{p_Val2_6_reg_409[511:112]}, {p_Result_9_reg_420}};

assign p_Val2_5_fu_182_p4 = {{headerFifo_V_dout[128:17]}};

assign p_Val2_6_fu_192_p1 = dataStreamBuffer4_V_dout[511:0];

assign p_Val2_s_fu_280_p4 = {{headerFifo_V_dout[128:17]}};

assign select_ln250_fu_266_p3 = ((grp_fu_145_p3[0:0] === 1'b1) ? 2'd1 : 2'd2);

assign select_ln647_1_fu_332_p3 = ((icmp_ln647_fu_298_p2[0:0] === 1'b1) ? zext_ln647_fu_328_p1 : p_Val2_s_fu_280_p4);

assign select_ln647_2_fu_340_p3 = ((icmp_ln647_fu_298_p2[0:0] === 1'b1) ? 112'd262143 : 112'd5192296858534827628530496329220095);

assign select_ln647_3_fu_232_p3 = ((icmp_ln647_1_fu_210_p2[0:0] === 1'b1) ? tmp_73_fu_216_p3 : tmp_74_fu_224_p3);

assign select_ln647_4_fu_244_p3 = ((icmp_ln647_1_fu_210_p2[0:0] === 1'b1) ? zext_ln647_1_fu_240_p1 : p_Val2_5_fu_182_p4);

assign select_ln647_5_fu_252_p3 = ((icmp_ln647_1_fu_210_p2[0:0] === 1'b1) ? 112'd262143 : 112'd5192296858534827628530496329220095);

assign select_ln647_fu_320_p3 = ((icmp_ln647_fu_298_p2[0:0] === 1'b1) ? tmp_70_fu_304_p3 : tmp_71_fu_312_p3);

assign tmp_70_fu_304_p3 = headerFifo_V_dout[32'd17];

assign tmp_71_fu_312_p3 = headerFifo_V_dout[32'd128];

assign tmp_73_fu_216_p3 = headerFifo_V_dout[32'd17];

assign tmp_74_fu_224_p3 = headerFifo_V_dout[32'd128];

assign tmp_data_V_1_fu_178_p1 = dataStreamBuffer4_V_dout[511:0];

assign tmp_data_V_2_fu_364_p3 = ((icmp_ln82_reg_415[0:0] === 1'b1) ? p_Result_s_fu_354_p5 : p_Val2_6_reg_409);

assign zext_ln647_1_fu_240_p1 = select_ln647_3_fu_232_p3;

assign zext_ln647_fu_328_p1 = select_ln647_fu_320_p3;

endmodule //insert_ethernet_head
