// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rshiftWordByOctet_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rxEng_dataBuffer3a_V_dout,
        rxEng_dataBuffer3a_V_empty_n,
        rxEng_dataBuffer3a_V_read,
        rxEng_dataBuffer3b_V_din,
        rxEng_dataBuffer3b_V_full_n,
        rxEng_dataBuffer3b_V_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [576:0] rxEng_dataBuffer3a_V_dout;
input   rxEng_dataBuffer3a_V_empty_n;
output   rxEng_dataBuffer3a_V_read;
output  [576:0] rxEng_dataBuffer3b_V_din;
input   rxEng_dataBuffer3b_V_full_n;
output   rxEng_dataBuffer3b_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rxEng_dataBuffer3a_V_read;
reg[576:0] rxEng_dataBuffer3b_V_din;
reg rxEng_dataBuffer3b_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] fsmState_1_load_load_fu_139_p1;
wire   [0:0] tmp_nbreadreq_fu_76_p3;
reg    ap_predicate_op7_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] fsmState_1_load_reg_263;
reg   [0:0] tmp_reg_267;
reg   [0:0] rs_firstWord_1_load_reg_285;
reg    ap_predicate_op32_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] fsmState_1;
reg   [511:0] prevWord_data_V_9;
reg   [63:0] prevWord_keep_V_13;
reg   [0:0] rs_firstWord_1;
reg    rxEng_dataBuffer3a_V_blk_n;
wire    ap_block_pp0_stage0;
reg    rxEng_dataBuffer3b_V_blk_n;
wire   [511:0] p_Val2_19_fu_143_p1;
reg   [511:0] p_Val2_19_reg_271;
reg   [63:0] p_Val2_3_reg_276;
wire   [0:0] tmp_343_fu_157_p3;
wire   [0:0] rs_firstWord_1_load_load_fu_165_p1;
wire   [255:0] trunc_ln647_fu_169_p1;
reg   [255:0] trunc_ln647_reg_289;
reg   [31:0] p_Result_26_i_reg_294;
wire   [0:0] tmp_last_V_fu_193_p2;
reg   [0:0] tmp_last_V_reg_299;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_p_0256_2_0_i_phi_fu_100_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_97;
wire   [0:0] ap_phi_reg_pp0_iter0_rs_firstWord_1_new_0_reg_108;
reg   [0:0] ap_phi_reg_pp0_iter1_rs_firstWord_1_new_0_reg_108;
reg   [0:0] ap_sig_allocacmp_rs_firstWord_1_load;
wire   [576:0] tmp_1_fu_222_p6;
reg    ap_block_pp0_stage0_01001;
wire   [576:0] tmp_2_fu_250_p5;
wire   [31:0] p_Result_27_i_fu_183_p4;
wire   [31:0] grp_fu_130_p4;
wire   [255:0] grp_fu_121_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_139;
reg    ap_condition_143;
reg    ap_condition_81;
reg    ap_condition_146;
reg    ap_condition_166;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 fsmState_1 = 1'd0;
#0 prevWord_data_V_9 = 512'd0;
#0 prevWord_keep_V_13 = 64'd0;
#0 rs_firstWord_1 = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_81)) begin
        if ((1'b1 == ap_condition_143)) begin
            ap_phi_reg_pp0_iter1_rs_firstWord_1_new_0_reg_108 <= 1'd0;
        end else if ((1'b1 == ap_condition_139)) begin
            ap_phi_reg_pp0_iter1_rs_firstWord_1_new_0_reg_108 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_rs_firstWord_1_new_0_reg_108 <= ap_phi_reg_pp0_iter0_rs_firstWord_1_new_0_reg_108;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_81)) begin
        if ((fsmState_1_load_load_fu_139_p1 == 1'd1)) begin
            fsmState_1 <= 1'd0;
        end else if ((1'b1 == ap_condition_146)) begin
            fsmState_1 <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fsmState_1_load_reg_263 <= fsmState_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_76_p3 == 1'd1) & (rs_firstWord_1_load_load_fu_165_p1 == 1'd0) & (fsmState_1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_26_i_reg_294 <= {{rxEng_dataBuffer3a_V_dout[543:512]}};
        tmp_last_V_reg_299 <= tmp_last_V_fu_193_p2;
        trunc_ln647_reg_289 <= trunc_ln647_fu_169_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_19_reg_271 <= p_Val2_19_fu_143_p1;
        p_Val2_3_reg_276 <= {{rxEng_dataBuffer3a_V_dout[575:512]}};
        rs_firstWord_1_load_reg_285 <= ap_sig_allocacmp_rs_firstWord_1_load;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_267 == 1'd1) & (fsmState_1_load_reg_263 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prevWord_data_V_9 <= p_Val2_19_reg_271;
        prevWord_keep_V_13 <= p_Val2_3_reg_276;
        rs_firstWord_1 <= ap_phi_reg_pp0_iter1_rs_firstWord_1_new_0_reg_108;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (fsmState_1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_267 <= tmp_nbreadreq_fu_76_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0))) begin
        if ((rs_firstWord_1_load_load_fu_165_p1 == 1'd1)) begin
            ap_phi_mux_p_0256_2_0_i_phi_fu_100_p4 = 1'd0;
        end else if ((rs_firstWord_1_load_load_fu_165_p1 == 1'd0)) begin
            ap_phi_mux_p_0256_2_0_i_phi_fu_100_p4 = tmp_last_V_fu_193_p2;
        end else begin
            ap_phi_mux_p_0256_2_0_i_phi_fu_100_p4 = ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_97;
        end
    end else begin
        ap_phi_mux_p_0256_2_0_i_phi_fu_100_p4 = ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_97;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_reg_267 == 1'd1) & (fsmState_1_load_reg_263 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_rs_firstWord_1_load = ap_phi_reg_pp0_iter1_rs_firstWord_1_new_0_reg_108;
    end else begin
        ap_sig_allocacmp_rs_firstWord_1_load = rs_firstWord_1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        rxEng_dataBuffer3a_V_blk_n = rxEng_dataBuffer3a_V_empty_n;
    end else begin
        rxEng_dataBuffer3a_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        rxEng_dataBuffer3a_V_read = 1'b1;
    end else begin
        rxEng_dataBuffer3a_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (fsmState_1_load_reg_263 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op32_write_state2 == 1'b1)))) begin
        rxEng_dataBuffer3b_V_blk_n = rxEng_dataBuffer3b_V_full_n;
    end else begin
        rxEng_dataBuffer3b_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_166)) begin
        if ((fsmState_1_load_reg_263 == 1'd1)) begin
            rxEng_dataBuffer3b_V_din = tmp_2_fu_250_p5;
        end else if ((ap_predicate_op32_write_state2 == 1'b1)) begin
            rxEng_dataBuffer3b_V_din = tmp_1_fu_222_p6;
        end else begin
            rxEng_dataBuffer3b_V_din = 'bx;
        end
    end else begin
        rxEng_dataBuffer3b_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (fsmState_1_load_reg_263 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op32_write_state2 == 1'b1)))) begin
        rxEng_dataBuffer3b_V_write = 1'b1;
    end else begin
        rxEng_dataBuffer3b_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_1_load_reg_263 == 1'd1) & (rxEng_dataBuffer3b_V_full_n == 1'b0)) | ((rxEng_dataBuffer3b_V_full_n == 1'b0) & (ap_predicate_op32_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxEng_dataBuffer3a_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_1_load_reg_263 == 1'd1) & (rxEng_dataBuffer3b_V_full_n == 1'b0)) | ((rxEng_dataBuffer3b_V_full_n == 1'b0) & (ap_predicate_op32_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxEng_dataBuffer3a_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_1_load_reg_263 == 1'd1) & (rxEng_dataBuffer3b_V_full_n == 1'b0)) | ((rxEng_dataBuffer3b_V_full_n == 1'b0) & (ap_predicate_op32_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxEng_dataBuffer3a_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxEng_dataBuffer3a_V_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((fsmState_1_load_reg_263 == 1'd1) & (rxEng_dataBuffer3b_V_full_n == 1'b0)) | ((rxEng_dataBuffer3b_V_full_n == 1'b0) & (ap_predicate_op32_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_139 = ((tmp_343_fu_157_p3 == 1'd1) & (tmp_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0));
end

always @ (*) begin
    ap_condition_143 = ((tmp_nbreadreq_fu_76_p3 == 1'd1) & (tmp_343_fu_157_p3 == 1'd0) & (fsmState_1 == 1'd0));
end

always @ (*) begin
    ap_condition_146 = ((tmp_343_fu_157_p3 == 1'd1) & (tmp_nbreadreq_fu_76_p3 == 1'd1) & (ap_phi_mux_p_0256_2_0_i_phi_fu_100_p4 == 1'd0) & (fsmState_1 == 1'd0));
end

always @ (*) begin
    ap_condition_166 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

always @ (*) begin
    ap_condition_81 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_97 = 'bx;

assign ap_phi_reg_pp0_iter0_rs_firstWord_1_new_0_reg_108 = 'bx;

always @ (*) begin
    ap_predicate_op32_write_state2 = ((tmp_reg_267 == 1'd1) & (rs_firstWord_1_load_reg_285 == 1'd0) & (fsmState_1_load_reg_263 == 1'd0));
end

always @ (*) begin
    ap_predicate_op7_read_state1 = ((tmp_nbreadreq_fu_76_p3 == 1'd1) & (fsmState_1 == 1'd0));
end

assign fsmState_1_load_load_fu_139_p1 = fsmState_1;

assign grp_fu_121_p4 = {{prevWord_data_V_9[511:256]}};

assign grp_fu_130_p4 = {{prevWord_keep_V_13[63:32]}};

assign p_Result_27_i_fu_183_p4 = {{rxEng_dataBuffer3a_V_dout[575:544]}};

assign p_Val2_19_fu_143_p1 = rxEng_dataBuffer3a_V_dout[511:0];

assign rs_firstWord_1_load_load_fu_165_p1 = ap_sig_allocacmp_rs_firstWord_1_load;

assign tmp_1_fu_222_p6 = {{{{{tmp_last_V_reg_299}, {p_Result_26_i_reg_294}}, {grp_fu_130_p4}}, {trunc_ln647_reg_289}}, {grp_fu_121_p4}};

assign tmp_2_fu_250_p5 = {{{{{{33'd4294967296}, {grp_fu_130_p4}}}, {256'd0}}}, {grp_fu_121_p4}};

assign tmp_343_fu_157_p3 = rxEng_dataBuffer3a_V_dout[32'd576];

assign tmp_last_V_fu_193_p2 = ((p_Result_27_i_fu_183_p4 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_nbreadreq_fu_76_p3 = rxEng_dataBuffer3a_V_empty_n;

assign trunc_ln647_fu_169_p1 = rxEng_dataBuffer3a_V_dout[255:0];

endmodule //rshiftWordByOctet_1
