// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generate_ipv4_512_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        txEng_tcpPkgBuffer6_s_3_dout,
        txEng_tcpPkgBuffer6_s_3_empty_n,
        txEng_tcpPkgBuffer6_s_3_read,
        txEng_ipMetaFifo_V_V_dout,
        txEng_ipMetaFifo_V_V_empty_n,
        txEng_ipMetaFifo_V_V_read,
        txEng_ipTupleFifo_V_dout,
        txEng_ipTupleFifo_V_empty_n,
        txEng_ipTupleFifo_V_read,
        m_axis_tcp_data_TREADY,
        m_axis_tcp_data_TDATA,
        m_axis_tcp_data_TVALID,
        m_axis_tcp_data_TKEEP,
        m_axis_tcp_data_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [576:0] txEng_tcpPkgBuffer6_s_3_dout;
input   txEng_tcpPkgBuffer6_s_3_empty_n;
output   txEng_tcpPkgBuffer6_s_3_read;
input  [15:0] txEng_ipMetaFifo_V_V_dout;
input   txEng_ipMetaFifo_V_V_empty_n;
output   txEng_ipMetaFifo_V_V_read;
input  [63:0] txEng_ipTupleFifo_V_dout;
input   txEng_ipTupleFifo_V_empty_n;
output   txEng_ipTupleFifo_V_read;
input   m_axis_tcp_data_TREADY;
output  [511:0] m_axis_tcp_data_TDATA;
output   m_axis_tcp_data_TVALID;
output  [63:0] m_axis_tcp_data_TKEEP;
output  [0:0] m_axis_tcp_data_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg txEng_tcpPkgBuffer6_s_3_read;
reg txEng_ipMetaFifo_V_V_read;
reg txEng_ipTupleFifo_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] grp_nbreadreq_fu_132_p3;
reg    ap_predicate_op7_read_state1;
reg    ap_predicate_op15_read_state1;
wire   [0:0] tmp_nbreadreq_fu_146_p3;
wire   [0:0] tmp_443_nbreadreq_fu_154_p3;
reg    ap_predicate_op24_read_state1;
reg    ap_predicate_op25_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [1:0] gi_state_load_reg_473;
reg   [0:0] tmp_442_reg_477;
reg    ap_predicate_op57_write_state2;
reg   [0:0] tmp_441_reg_492;
reg    ap_predicate_op59_write_state2;
reg    ap_block_state2_io;
wire    regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [1:0] gi_state_load_reg_473_pp0_iter1_reg;
reg   [0:0] tmp_442_reg_477_pp0_iter1_reg;
reg    ap_predicate_op67_write_state3;
reg   [0:0] tmp_441_reg_492_pp0_iter1_reg;
reg    ap_predicate_op70_write_state3;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [1:0] gi_state;
reg   [15:0] header_idx_7;
reg   [159:0] header_header_V_7;
reg    m_axis_tcp_data_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    txEng_ipMetaFifo_V_V_blk_n;
reg    txEng_ipTupleFifo_V_blk_n;
reg    txEng_tcpPkgBuffer6_s_3_blk_n;
reg   [63:0] reg_205;
wire   [511:0] p_Val2_56_fu_214_p1;
reg   [511:0] p_Val2_56_reg_481;
wire   [0:0] grp_fu_197_p3;
reg   [0:0] tmp_last_V_13_reg_487;
wire   [511:0] tmp_data_V_fu_238_p1;
reg   [511:0] tmp_data_V_reg_496;
reg   [0:0] tmp_last_V_reg_501;
reg   [0:0] tmp_reg_506;
reg   [0:0] tmp_443_reg_510;
wire   [511:0] tmp_data_V_15_fu_453_p3;
reg    ap_block_pp0_stage0_subdone;
wire   [1:0] select_ln883_fu_224_p3;
wire   [15:0] select_ln82_fu_445_p3;
wire   [159:0] p_Result_95_fu_330_p5;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] xor_ln883_fu_218_p2;
wire   [15:0] length_V_1_fu_248_p2;
wire   [7:0] trunc_ln647_14_fu_264_p1;
wire   [7:0] p_Result_138_i_i_i_fu_254_p4;
wire   [15:0] agg_result_V_0_1_i_i_fu_268_p3;
wire   [159:0] p_Result_96_fu_280_p5;
wire   [31:0] addr_V_read_assign_fu_292_p4;
wire   [159:0] p_Result_97_fu_302_p5;
wire   [31:0] trunc_ln838_fu_314_p1;
wire   [159:0] p_Result_98_fu_318_p5;
wire   [24:0] Lo_assign_fu_362_p3;
wire   [0:0] icmp_ln647_fu_376_p2;
wire   [0:0] trunc_ln647_fu_382_p1;
wire   [0:0] tmp_445_fu_386_p3;
wire   [0:0] select_ln647_fu_394_p3;
wire   [159:0] zext_ln647_fu_402_p1;
wire   [159:0] select_ln647_11_fu_406_p3;
wire   [159:0] select_ln647_12_fu_414_p3;
wire   [159:0] p_Result_99_fu_422_p2;
wire   [0:0] icmp_ln82_fu_370_p2;
wire   [15:0] add_ln85_fu_439_p2;
wire   [511:0] p_Result_s_fu_428_p5;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg   [511:0] m_axis_tcp_data_TDATA_int;
reg    m_axis_tcp_data_TVALID_int;
wire    m_axis_tcp_data_TREADY_int;
wire    regslice_both_m_axis_tx_data_V_data_V_U_vld_out;
wire    regslice_both_m_axis_tx_data_V_keep_V_U_apdone_blk;
wire    regslice_both_m_axis_tx_data_V_keep_V_U_ack_in_dummy;
wire    regslice_both_m_axis_tx_data_V_keep_V_U_vld_out;
wire    regslice_both_m_axis_tx_data_V_last_V_U_apdone_blk;
reg   [0:0] m_axis_tcp_data_TLAST_int;
wire    regslice_both_m_axis_tx_data_V_last_V_U_ack_in_dummy;
wire    regslice_both_m_axis_tx_data_V_last_V_U_vld_out;
reg    ap_condition_226;
reg    ap_condition_70;
reg    ap_condition_143;
reg    ap_condition_237;
reg    ap_condition_231;
reg    ap_condition_265;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 gi_state = 2'd0;
#0 header_idx_7 = 16'd0;
#0 header_header_V_7 = 160'd1180591620717411303493;
end

regslice_both #(
    .DataWidth( 512 ))
regslice_both_m_axis_tx_data_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_tcp_data_TDATA_int),
    .vld_in(m_axis_tcp_data_TVALID_int),
    .ack_in(m_axis_tcp_data_TREADY_int),
    .data_out(m_axis_tcp_data_TDATA),
    .vld_out(regslice_both_m_axis_tx_data_V_data_V_U_vld_out),
    .ack_out(m_axis_tcp_data_TREADY),
    .apdone_blk(regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 64 ))
regslice_both_m_axis_tx_data_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(reg_205),
    .vld_in(m_axis_tcp_data_TVALID_int),
    .ack_in(regslice_both_m_axis_tx_data_V_keep_V_U_ack_in_dummy),
    .data_out(m_axis_tcp_data_TKEEP),
    .vld_out(regslice_both_m_axis_tx_data_V_keep_V_U_vld_out),
    .ack_out(m_axis_tcp_data_TREADY),
    .apdone_blk(regslice_both_m_axis_tx_data_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_m_axis_tx_data_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_tcp_data_TLAST_int),
    .vld_in(m_axis_tcp_data_TVALID_int),
    .ack_in(regslice_both_m_axis_tx_data_V_last_V_U_ack_in_dummy),
    .data_out(m_axis_tcp_data_TLAST),
    .vld_out(regslice_both_m_axis_tx_data_V_last_V_U_vld_out),
    .ack_out(m_axis_tcp_data_TREADY),
    .apdone_blk(regslice_both_m_axis_tx_data_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_143)) begin
        if ((1'b1 == ap_condition_70)) begin
            gi_state <= 2'd2;
        end else if ((1'b1 == ap_condition_226)) begin
            gi_state <= 2'd0;
        end else if (((grp_nbreadreq_fu_132_p3 == 1'd1) & (gi_state == 2'd2))) begin
            gi_state <= select_ln883_fu_224_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_231)) begin
        if ((1'b1 == ap_condition_237)) begin
            header_idx_7 <= 16'd0;
        end else if (((tmp_442_reg_477 == 1'd1) & (gi_state_load_reg_473 == 2'd2))) begin
            header_idx_7 <= select_ln82_fu_445_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gi_state_load_reg_473 <= gi_state;
        gi_state_load_reg_473_pp0_iter1_reg <= gi_state_load_reg_473;
        tmp_441_reg_492_pp0_iter1_reg <= tmp_441_reg_492;
        tmp_442_reg_477_pp0_iter1_reg <= tmp_442_reg_477;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_443_nbreadreq_fu_154_p3 == 1'd1) & (tmp_nbreadreq_fu_146_p3 == 1'd1) & (gi_state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        header_header_V_7 <= p_Result_95_fu_330_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_132_p3 == 1'd1) & (gi_state == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_56_reg_481 <= p_Val2_56_fu_214_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_nbreadreq_fu_132_p3 == 1'd1) & (gi_state == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_132_p3 == 1'd1) & (gi_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_205 <= {{txEng_tcpPkgBuffer6_s_3_dout[575:512]}};
    end
end

always @ (posedge ap_clk) begin
    if (((gi_state == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_441_reg_492 <= grp_nbreadreq_fu_132_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((gi_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_442_reg_477 <= grp_nbreadreq_fu_132_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_146_p3 == 1'd1) & (gi_state == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_443_reg_510 <= tmp_443_nbreadreq_fu_154_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_132_p3 == 1'd1) & (gi_state == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_reg_496 <= tmp_data_V_fu_238_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_132_p3 == 1'd1) & (gi_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_13_reg_487 <= txEng_tcpPkgBuffer6_s_3_dout[32'd576];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_132_p3 == 1'd1) & (gi_state == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_last_V_reg_501 <= txEng_tcpPkgBuffer6_s_3_dout[32'd576];
    end
end

always @ (posedge ap_clk) begin
    if (((gi_state == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_506 <= tmp_nbreadreq_fu_146_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op57_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op59_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op70_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op67_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        m_axis_tcp_data_TDATA_blk_n = m_axis_tcp_data_TREADY_int;
    end else begin
        m_axis_tcp_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_265)) begin
        if ((ap_predicate_op59_write_state2 == 1'b1)) begin
            m_axis_tcp_data_TDATA_int = tmp_data_V_reg_496;
        end else if ((ap_predicate_op57_write_state2 == 1'b1)) begin
            m_axis_tcp_data_TDATA_int = tmp_data_V_15_fu_453_p3;
        end else begin
            m_axis_tcp_data_TDATA_int = 'bx;
        end
    end else begin
        m_axis_tcp_data_TDATA_int = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_265)) begin
        if ((ap_predicate_op59_write_state2 == 1'b1)) begin
            m_axis_tcp_data_TLAST_int = tmp_last_V_reg_501;
        end else if ((ap_predicate_op57_write_state2 == 1'b1)) begin
            m_axis_tcp_data_TLAST_int = tmp_last_V_13_reg_487;
        end else begin
            m_axis_tcp_data_TLAST_int = 'bx;
        end
    end else begin
        m_axis_tcp_data_TLAST_int = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op57_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op59_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axis_tcp_data_TVALID_int = 1'b1;
    end else begin
        m_axis_tcp_data_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op24_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        txEng_ipMetaFifo_V_V_blk_n = txEng_ipMetaFifo_V_V_empty_n;
    end else begin
        txEng_ipMetaFifo_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op24_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        txEng_ipMetaFifo_V_V_read = 1'b1;
    end else begin
        txEng_ipMetaFifo_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op25_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        txEng_ipTupleFifo_V_blk_n = txEng_ipTupleFifo_V_empty_n;
    end else begin
        txEng_ipTupleFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op25_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        txEng_ipTupleFifo_V_read = 1'b1;
    end else begin
        txEng_ipTupleFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op15_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        txEng_tcpPkgBuffer6_s_3_blk_n = txEng_tcpPkgBuffer6_s_3_empty_n;
    end else begin
        txEng_tcpPkgBuffer6_s_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op15_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        txEng_tcpPkgBuffer6_s_3_read = 1'b1;
    end else begin
        txEng_tcpPkgBuffer6_s_3_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Lo_assign_fu_362_p3 = {{header_idx_7}, {9'd0}};

assign add_ln85_fu_439_p2 = (header_idx_7 + 16'd1);

assign addr_V_read_assign_fu_292_p4 = {{txEng_ipTupleFifo_V_dout[63:32]}};

assign agg_result_V_0_1_i_i_fu_268_p3 = {{trunc_ln647_14_fu_264_p1}, {p_Result_138_i_i_i_fu_254_p4}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_ipTupleFifo_V_empty_n == 1'b0) & (ap_predicate_op25_read_state1 == 1'b1)) | ((txEng_ipMetaFifo_V_V_empty_n == 1'b0) & (ap_predicate_op24_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op15_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_ipTupleFifo_V_empty_n == 1'b0) & (ap_predicate_op25_read_state1 == 1'b1)) | ((txEng_ipMetaFifo_V_V_empty_n == 1'b0) & (ap_predicate_op24_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op15_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_ipTupleFifo_V_empty_n == 1'b0) & (ap_predicate_op25_read_state1 == 1'b1)) | ((txEng_ipMetaFifo_V_V_empty_n == 1'b0) & (ap_predicate_op24_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op15_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((txEng_ipTupleFifo_V_empty_n == 1'b0) & (ap_predicate_op25_read_state1 == 1'b1)) | ((txEng_ipMetaFifo_V_V_empty_n == 1'b0) & (ap_predicate_op24_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op15_read_state1 == 1'b1)) | ((txEng_tcpPkgBuffer6_s_3_empty_n == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = (((m_axis_tcp_data_TREADY_int == 1'b0) & (ap_predicate_op57_write_state2 == 1'b1)) | ((m_axis_tcp_data_TREADY_int == 1'b0) & (ap_predicate_op59_write_state2 == 1'b1)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((m_axis_tcp_data_TREADY_int == 1'b0) & (ap_predicate_op70_write_state3 == 1'b1)) | ((m_axis_tcp_data_TREADY_int == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_condition_143 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_226 = ((grp_fu_197_p3 == 1'd1) & (grp_nbreadreq_fu_132_p3 == 1'd1) & (gi_state == 2'd3));
end

always @ (*) begin
    ap_condition_231 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_237 = ((gi_state_load_reg_473 == 2'd0) & (tmp_443_reg_510 == 1'd1) & (tmp_reg_506 == 1'd1));
end

always @ (*) begin
    ap_condition_265 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_70 = ((tmp_443_nbreadreq_fu_154_p3 == 1'd1) & (tmp_nbreadreq_fu_146_p3 == 1'd1) & (gi_state == 2'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op15_read_state1 = ((grp_nbreadreq_fu_132_p3 == 1'd1) & (gi_state == 2'd3));
end

always @ (*) begin
    ap_predicate_op24_read_state1 = ((tmp_443_nbreadreq_fu_154_p3 == 1'd1) & (tmp_nbreadreq_fu_146_p3 == 1'd1) & (gi_state == 2'd0));
end

always @ (*) begin
    ap_predicate_op25_read_state1 = ((tmp_443_nbreadreq_fu_154_p3 == 1'd1) & (tmp_nbreadreq_fu_146_p3 == 1'd1) & (gi_state == 2'd0));
end

always @ (*) begin
    ap_predicate_op57_write_state2 = ((tmp_442_reg_477 == 1'd1) & (gi_state_load_reg_473 == 2'd2));
end

always @ (*) begin
    ap_predicate_op59_write_state2 = ((gi_state_load_reg_473 == 2'd3) & (tmp_441_reg_492 == 1'd1));
end

always @ (*) begin
    ap_predicate_op67_write_state3 = ((tmp_442_reg_477_pp0_iter1_reg == 1'd1) & (gi_state_load_reg_473_pp0_iter1_reg == 2'd2));
end

always @ (*) begin
    ap_predicate_op70_write_state3 = ((gi_state_load_reg_473_pp0_iter1_reg == 2'd3) & (tmp_441_reg_492_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op7_read_state1 = ((grp_nbreadreq_fu_132_p3 == 1'd1) & (gi_state == 2'd2));
end

assign grp_fu_197_p3 = txEng_tcpPkgBuffer6_s_3_dout[32'd576];

assign grp_nbreadreq_fu_132_p3 = txEng_tcpPkgBuffer6_s_3_empty_n;

assign icmp_ln647_fu_376_p2 = ((Lo_assign_fu_362_p3 > 25'd159) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_370_p2 = ((Lo_assign_fu_362_p3 < 25'd160) ? 1'b1 : 1'b0);

assign length_V_1_fu_248_p2 = (16'd40 + txEng_ipMetaFifo_V_V_dout);

assign m_axis_tcp_data_TVALID = regslice_both_m_axis_tx_data_V_data_V_U_vld_out;

assign p_Result_138_i_i_i_fu_254_p4 = {{length_V_1_fu_248_p2[15:8]}};

assign p_Result_95_fu_330_p5 = {{p_Result_98_fu_318_p5[159:80]}, {8'd6}, {p_Result_98_fu_318_p5[71:0]}};

assign p_Result_96_fu_280_p5 = {{header_header_V_7[159:32]}, {agg_result_V_0_1_i_i_fu_268_p3}, {header_header_V_7[15:0]}};

assign p_Result_97_fu_302_p5 = {{addr_V_read_assign_fu_292_p4}, {p_Result_96_fu_280_p5[127:0]}};

assign p_Result_98_fu_318_p5 = {{p_Result_97_fu_302_p5[159:128]}, {trunc_ln838_fu_314_p1}, {p_Result_97_fu_302_p5[95:0]}};

assign p_Result_99_fu_422_p2 = (select_ln647_12_fu_414_p3 & select_ln647_11_fu_406_p3);

assign p_Result_s_fu_428_p5 = {{p_Val2_56_reg_481[511:160]}, {p_Result_99_fu_422_p2}};

assign p_Val2_56_fu_214_p1 = txEng_tcpPkgBuffer6_s_3_dout[511:0];

assign select_ln647_11_fu_406_p3 = ((icmp_ln647_fu_376_p2[0:0] === 1'b1) ? zext_ln647_fu_402_p1 : header_header_V_7);

assign select_ln647_12_fu_414_p3 = ((icmp_ln647_fu_376_p2[0:0] === 1'b1) ? 160'd316912650057057350374175801343 : 160'd1461501637330902918203684832716283019655932542975);

assign select_ln647_fu_394_p3 = ((icmp_ln647_fu_376_p2[0:0] === 1'b1) ? trunc_ln647_fu_382_p1 : tmp_445_fu_386_p3);

assign select_ln82_fu_445_p3 = ((icmp_ln82_fu_370_p2[0:0] === 1'b1) ? add_ln85_fu_439_p2 : header_idx_7);

assign select_ln883_fu_224_p3 = ((xor_ln883_fu_218_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign tmp_443_nbreadreq_fu_154_p3 = txEng_ipTupleFifo_V_empty_n;

assign tmp_445_fu_386_p3 = header_header_V_7[32'd159];

assign tmp_data_V_15_fu_453_p3 = ((icmp_ln82_fu_370_p2[0:0] === 1'b1) ? p_Result_s_fu_428_p5 : p_Val2_56_reg_481);

assign tmp_data_V_fu_238_p1 = txEng_tcpPkgBuffer6_s_3_dout[511:0];

assign tmp_nbreadreq_fu_146_p3 = txEng_ipMetaFifo_V_V_empty_n;

assign trunc_ln647_14_fu_264_p1 = length_V_1_fu_248_p2[7:0];

assign trunc_ln647_fu_382_p1 = header_header_V_7[0:0];

assign trunc_ln838_fu_314_p1 = txEng_ipTupleFifo_V_dout[31:0];

assign xor_ln883_fu_218_p2 = (grp_fu_197_p3 ^ 1'd1);

assign zext_ln647_fu_402_p1 = select_ln647_fu_394_p3;

endmodule //generate_ipv4_512_s
