// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ip_handler_rshiftWor (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ipv6ShiftFifo_V_data_dout,
        ipv6ShiftFifo_V_data_empty_n,
        ipv6ShiftFifo_V_data_read,
        ipv6ShiftFifo_V_keep_dout,
        ipv6ShiftFifo_V_keep_empty_n,
        ipv6ShiftFifo_V_keep_read,
        ipv6ShiftFifo_V_last_dout,
        ipv6ShiftFifo_V_last_empty_n,
        ipv6ShiftFifo_V_last_read,
        ipv6DataFifo_V_data_s_din,
        ipv6DataFifo_V_data_s_full_n,
        ipv6DataFifo_V_data_s_write,
        ipv6DataFifo_V_keep_s_din,
        ipv6DataFifo_V_keep_s_full_n,
        ipv6DataFifo_V_keep_s_write,
        ipv6DataFifo_V_last_s_din,
        ipv6DataFifo_V_last_s_full_n,
        ipv6DataFifo_V_last_s_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] ipv6ShiftFifo_V_data_dout;
input   ipv6ShiftFifo_V_data_empty_n;
output   ipv6ShiftFifo_V_data_read;
input  [63:0] ipv6ShiftFifo_V_keep_dout;
input   ipv6ShiftFifo_V_keep_empty_n;
output   ipv6ShiftFifo_V_keep_read;
input  [0:0] ipv6ShiftFifo_V_last_dout;
input   ipv6ShiftFifo_V_last_empty_n;
output   ipv6ShiftFifo_V_last_read;
output  [511:0] ipv6DataFifo_V_data_s_din;
input   ipv6DataFifo_V_data_s_full_n;
output   ipv6DataFifo_V_data_s_write;
output  [63:0] ipv6DataFifo_V_keep_s_din;
input   ipv6DataFifo_V_keep_s_full_n;
output   ipv6DataFifo_V_keep_s_write;
output  [0:0] ipv6DataFifo_V_last_s_din;
input   ipv6DataFifo_V_last_s_full_n;
output   ipv6DataFifo_V_last_s_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ipv6ShiftFifo_V_data_read;
reg ipv6ShiftFifo_V_keep_read;
reg ipv6ShiftFifo_V_last_read;
reg[511:0] ipv6DataFifo_V_data_s_din;
reg ipv6DataFifo_V_data_s_write;
reg[63:0] ipv6DataFifo_V_keep_s_din;
reg ipv6DataFifo_V_keep_s_write;
reg[0:0] ipv6DataFifo_V_last_s_din;
reg ipv6DataFifo_V_last_s_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    io_acc_block_signal_op7;
wire   [0:0] fsmState_load_load_fu_148_p1;
wire   [0:0] tmp_nbreadreq_fu_70_p5;
reg    ap_predicate_op7_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    io_acc_block_signal_op37;
reg   [0:0] fsmState_load_reg_265;
reg   [0:0] tmp_reg_269;
reg   [0:0] rs_firstWord_load_reg_289;
reg    ap_predicate_op37_write_state2;
wire    io_acc_block_signal_op49;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] fsmState;
reg   [511:0] prevWord_data_V_1;
reg   [63:0] prevWord_keep_V;
reg   [0:0] rs_firstWord;
reg    ipv6ShiftFifo_V_data_blk_n;
wire    ap_block_pp0_stage0;
reg    ipv6ShiftFifo_V_keep_blk_n;
reg    ipv6ShiftFifo_V_last_blk_n;
reg    ipv6DataFifo_V_data_s_blk_n;
reg    ipv6DataFifo_V_keep_s_blk_n;
reg    ipv6DataFifo_V_last_s_blk_n;
reg   [511:0] tmp_data_V_4_reg_273;
reg   [63:0] tmp_keep_V_4_reg_279;
wire   [0:0] tmp_last_V_fu_160_p1;
wire   [0:0] rs_firstWord_load_load_fu_164_p1;
wire   [0:0] tmp_last_V_3_fu_178_p2;
reg   [0:0] tmp_last_V_3_reg_293;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106;
wire   [0:0] ap_phi_reg_pp0_iter0_rs_firstWord_new_0_i_reg_117;
reg   [0:0] ap_phi_reg_pp0_iter1_rs_firstWord_new_0_i_reg_117;
reg   [0:0] ap_sig_allocacmp_rs_firstWord_load;
wire   [511:0] p_Result_s_fu_210_p3;
reg    ap_block_pp0_stage0_01001;
wire   [511:0] p_Result_2_fu_247_p3;
wire   [63:0] p_Result_1_fu_222_p3;
wire   [63:0] p_Result_3_fu_256_p3;
wire   [49:0] p_Result_9_i_fu_168_p4;
wire   [111:0] trunc_ln647_fu_207_p1;
wire   [399:0] grp_fu_130_p4;
wire   [13:0] trunc_ln647_2_fu_219_p1;
wire   [49:0] grp_fu_139_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_161;
reg    ap_condition_165;
reg    ap_condition_103;
reg    ap_condition_168;
reg    ap_condition_190;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 fsmState = 1'd0;
#0 prevWord_data_V_1 = 512'd0;
#0 prevWord_keep_V = 64'd0;
#0 rs_firstWord = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_103)) begin
        if ((1'b1 == ap_condition_165)) begin
            ap_phi_reg_pp0_iter1_rs_firstWord_new_0_i_reg_117 <= 1'd0;
        end else if ((1'b1 == ap_condition_161)) begin
            ap_phi_reg_pp0_iter1_rs_firstWord_new_0_i_reg_117 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_rs_firstWord_new_0_i_reg_117 <= ap_phi_reg_pp0_iter0_rs_firstWord_new_0_i_reg_117;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_103)) begin
        if ((fsmState_load_load_fu_148_p1 == 1'd1)) begin
            fsmState <= 1'd0;
        end else if ((1'b1 == ap_condition_168)) begin
            fsmState <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fsmState_load_reg_265 <= fsmState;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_269 == 1'd1) & (fsmState_load_reg_265 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prevWord_data_V_1 <= tmp_data_V_4_reg_273;
        prevWord_keep_V <= tmp_keep_V_4_reg_279;
        rs_firstWord <= ap_phi_reg_pp0_iter1_rs_firstWord_new_0_i_reg_117;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_70_p5 == 1'd1) & (fsmState == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rs_firstWord_load_reg_289 <= ap_sig_allocacmp_rs_firstWord_load;
        tmp_data_V_4_reg_273 <= ipv6ShiftFifo_V_data_dout;
        tmp_keep_V_4_reg_279 <= ipv6ShiftFifo_V_keep_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_70_p5 == 1'd1) & (rs_firstWord_load_load_fu_164_p1 == 1'd0) & (fsmState == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_last_V_3_reg_293 <= tmp_last_V_3_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (fsmState == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_269 <= tmp_nbreadreq_fu_70_p5;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_70_p5 == 1'd1) & (fsmState == 1'd0))) begin
        if ((rs_firstWord_load_load_fu_164_p1 == 1'd1)) begin
            ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4 = 1'd0;
        end else if ((rs_firstWord_load_load_fu_164_p1 == 1'd0)) begin
            ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4 = tmp_last_V_3_fu_178_p2;
        end else begin
            ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4 = ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106;
        end
    end else begin
        ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4 = ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_269 == 1'd1) & (fsmState_load_reg_265 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_rs_firstWord_load = ap_phi_reg_pp0_iter1_rs_firstWord_new_0_i_reg_117;
    end else begin
        ap_sig_allocacmp_rs_firstWord_load = rs_firstWord;
    end
end

always @ (*) begin
    if ((((fsmState_load_reg_265 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op37_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        ipv6DataFifo_V_data_s_blk_n = ipv6DataFifo_V_data_s_full_n;
    end else begin
        ipv6DataFifo_V_data_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_190)) begin
        if ((fsmState_load_reg_265 == 1'd1)) begin
            ipv6DataFifo_V_data_s_din = p_Result_2_fu_247_p3;
        end else if ((ap_predicate_op37_write_state2 == 1'b1)) begin
            ipv6DataFifo_V_data_s_din = p_Result_s_fu_210_p3;
        end else begin
            ipv6DataFifo_V_data_s_din = 'bx;
        end
    end else begin
        ipv6DataFifo_V_data_s_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (fsmState_load_reg_265 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op37_write_state2 == 1'b1)))) begin
        ipv6DataFifo_V_data_s_write = 1'b1;
    end else begin
        ipv6DataFifo_V_data_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((((fsmState_load_reg_265 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op37_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        ipv6DataFifo_V_keep_s_blk_n = ipv6DataFifo_V_keep_s_full_n;
    end else begin
        ipv6DataFifo_V_keep_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_190)) begin
        if ((fsmState_load_reg_265 == 1'd1)) begin
            ipv6DataFifo_V_keep_s_din = p_Result_3_fu_256_p3;
        end else if ((ap_predicate_op37_write_state2 == 1'b1)) begin
            ipv6DataFifo_V_keep_s_din = p_Result_1_fu_222_p3;
        end else begin
            ipv6DataFifo_V_keep_s_din = 'bx;
        end
    end else begin
        ipv6DataFifo_V_keep_s_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (fsmState_load_reg_265 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op37_write_state2 == 1'b1)))) begin
        ipv6DataFifo_V_keep_s_write = 1'b1;
    end else begin
        ipv6DataFifo_V_keep_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((((fsmState_load_reg_265 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op37_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        ipv6DataFifo_V_last_s_blk_n = ipv6DataFifo_V_last_s_full_n;
    end else begin
        ipv6DataFifo_V_last_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_190)) begin
        if ((fsmState_load_reg_265 == 1'd1)) begin
            ipv6DataFifo_V_last_s_din = 1'd1;
        end else if ((ap_predicate_op37_write_state2 == 1'b1)) begin
            ipv6DataFifo_V_last_s_din = tmp_last_V_3_reg_293;
        end else begin
            ipv6DataFifo_V_last_s_din = 'bx;
        end
    end else begin
        ipv6DataFifo_V_last_s_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (fsmState_load_reg_265 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op37_write_state2 == 1'b1)))) begin
        ipv6DataFifo_V_last_s_write = 1'b1;
    end else begin
        ipv6DataFifo_V_last_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ipv6ShiftFifo_V_data_blk_n = ipv6ShiftFifo_V_data_empty_n;
    end else begin
        ipv6ShiftFifo_V_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        ipv6ShiftFifo_V_data_read = 1'b1;
    end else begin
        ipv6ShiftFifo_V_data_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ipv6ShiftFifo_V_keep_blk_n = ipv6ShiftFifo_V_keep_empty_n;
    end else begin
        ipv6ShiftFifo_V_keep_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        ipv6ShiftFifo_V_keep_read = 1'b1;
    end else begin
        ipv6ShiftFifo_V_keep_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ipv6ShiftFifo_V_last_blk_n = ipv6ShiftFifo_V_last_empty_n;
    end else begin
        ipv6ShiftFifo_V_last_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op7_read_state1 == 1'b1))) begin
        ipv6ShiftFifo_V_last_read = 1'b1;
    end else begin
        ipv6ShiftFifo_V_last_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_load_reg_265 == 1'd1) & (io_acc_block_signal_op49 == 1'b0)) | ((io_acc_block_signal_op37 == 1'b0) & (ap_predicate_op37_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_load_reg_265 == 1'd1) & (io_acc_block_signal_op49 == 1'b0)) | ((io_acc_block_signal_op37 == 1'b0) & (ap_predicate_op37_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fsmState_load_reg_265 == 1'd1) & (io_acc_block_signal_op49 == 1'b0)) | ((io_acc_block_signal_op37 == 1'b0) & (ap_predicate_op37_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((io_acc_block_signal_op7 == 1'b0) & (ap_predicate_op7_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((fsmState_load_reg_265 == 1'd1) & (io_acc_block_signal_op49 == 1'b0)) | ((io_acc_block_signal_op37 == 1'b0) & (ap_predicate_op37_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_103 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_161 = ((tmp_last_V_fu_160_p1 == 1'd1) & (tmp_nbreadreq_fu_70_p5 == 1'd1) & (fsmState == 1'd0));
end

always @ (*) begin
    ap_condition_165 = ((tmp_nbreadreq_fu_70_p5 == 1'd1) & (tmp_last_V_fu_160_p1 == 1'd0) & (fsmState == 1'd0));
end

always @ (*) begin
    ap_condition_168 = ((tmp_last_V_fu_160_p1 == 1'd1) & (tmp_nbreadreq_fu_70_p5 == 1'd1) & (ap_phi_mux_p_0256_2_0_i_phi_fu_109_p4 == 1'd0) & (fsmState == 1'd0));
end

always @ (*) begin
    ap_condition_190 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_p_0256_2_0_i_reg_106 = 'bx;

assign ap_phi_reg_pp0_iter0_rs_firstWord_new_0_i_reg_117 = 'bx;

always @ (*) begin
    ap_predicate_op37_write_state2 = ((tmp_reg_269 == 1'd1) & (rs_firstWord_load_reg_289 == 1'd0) & (fsmState_load_reg_265 == 1'd0));
end

always @ (*) begin
    ap_predicate_op7_read_state1 = ((tmp_nbreadreq_fu_70_p5 == 1'd1) & (fsmState == 1'd0));
end

assign fsmState_load_load_fu_148_p1 = fsmState;

assign grp_fu_130_p4 = {{prevWord_data_V_1[511:112]}};

assign grp_fu_139_p4 = {{prevWord_keep_V[63:14]}};

assign io_acc_block_signal_op37 = (ipv6DataFifo_V_last_s_full_n & ipv6DataFifo_V_keep_s_full_n & ipv6DataFifo_V_data_s_full_n);

assign io_acc_block_signal_op49 = (ipv6DataFifo_V_last_s_full_n & ipv6DataFifo_V_keep_s_full_n & ipv6DataFifo_V_data_s_full_n);

assign io_acc_block_signal_op7 = (ipv6ShiftFifo_V_last_empty_n & ipv6ShiftFifo_V_keep_empty_n & ipv6ShiftFifo_V_data_empty_n);

assign p_Result_1_fu_222_p3 = {{trunc_ln647_2_fu_219_p1}, {grp_fu_139_p4}};

assign p_Result_2_fu_247_p3 = {{112'd0}, {grp_fu_130_p4}};

assign p_Result_3_fu_256_p3 = {{14'd0}, {grp_fu_139_p4}};

assign p_Result_9_i_fu_168_p4 = {{ipv6ShiftFifo_V_keep_dout[63:14]}};

assign p_Result_s_fu_210_p3 = {{trunc_ln647_fu_207_p1}, {grp_fu_130_p4}};

assign rs_firstWord_load_load_fu_164_p1 = ap_sig_allocacmp_rs_firstWord_load;

assign tmp_last_V_3_fu_178_p2 = ((p_Result_9_i_fu_168_p4 == 50'd0) ? 1'b1 : 1'b0);

assign tmp_last_V_fu_160_p1 = ipv6ShiftFifo_V_last_dout;

assign tmp_nbreadreq_fu_70_p5 = (ipv6ShiftFifo_V_last_empty_n & ipv6ShiftFifo_V_keep_empty_n & ipv6ShiftFifo_V_data_empty_n);

assign trunc_ln647_2_fu_219_p1 = tmp_keep_V_4_reg_279[13:0];

assign trunc_ln647_fu_207_p1 = tmp_data_V_4_reg_273[111:0];

endmodule //ip_handler_rshiftWor
