// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ip_handler_top,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.200000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.970000,HLS_SYN_LAT=23,HLS_SYN_TPT=1,HLS_SYN_MEM=341,HLS_SYN_DSP=0,HLS_SYN_FF=17246,HLS_SYN_LUT=16580,HLS_VERSION=2020_1}" *)

module ip_handler_top (
        s_axis_raw_TDATA,
        s_axis_raw_TKEEP,
        s_axis_raw_TLAST,
        m_axis_arp_TDATA,
        m_axis_arp_TKEEP,
        m_axis_arp_TLAST,
        m_axis_icmpv6_TDATA,
        m_axis_icmpv6_TKEEP,
        m_axis_icmpv6_TLAST,
        m_axis_ipv6udp_TDATA,
        m_axis_ipv6udp_TKEEP,
        m_axis_ipv6udp_TLAST,
        m_axis_icmp_TDATA,
        m_axis_icmp_TKEEP,
        m_axis_icmp_TLAST,
        m_axis_udp_TDATA,
        m_axis_udp_TKEEP,
        m_axis_udp_TLAST,
        m_axis_tcp_TDATA,
        m_axis_tcp_TKEEP,
        m_axis_tcp_TLAST,
        m_axis_roce_TDATA,
        m_axis_roce_TKEEP,
        m_axis_roce_TLAST,
        myIpAddress_V,
        ap_clk,
        ap_rst_n,
        s_axis_raw_TVALID,
        s_axis_raw_TREADY,
        m_axis_arp_TVALID,
        m_axis_arp_TREADY,
        m_axis_icmp_TVALID,
        m_axis_icmp_TREADY,
        m_axis_tcp_TVALID,
        m_axis_tcp_TREADY,
        m_axis_icmpv6_TVALID,
        m_axis_icmpv6_TREADY,
        m_axis_ipv6udp_TVALID,
        m_axis_ipv6udp_TREADY,
        m_axis_udp_TVALID,
        m_axis_udp_TREADY,
        m_axis_roce_TVALID,
        m_axis_roce_TREADY
);


input  [511:0] s_axis_raw_TDATA;
input  [63:0] s_axis_raw_TKEEP;
input  [0:0] s_axis_raw_TLAST;
output  [511:0] m_axis_arp_TDATA;
output  [63:0] m_axis_arp_TKEEP;
output  [0:0] m_axis_arp_TLAST;
output  [511:0] m_axis_icmpv6_TDATA;
output  [63:0] m_axis_icmpv6_TKEEP;
output  [0:0] m_axis_icmpv6_TLAST;
output  [511:0] m_axis_ipv6udp_TDATA;
output  [63:0] m_axis_ipv6udp_TKEEP;
output  [0:0] m_axis_ipv6udp_TLAST;
output  [511:0] m_axis_icmp_TDATA;
output  [63:0] m_axis_icmp_TKEEP;
output  [0:0] m_axis_icmp_TLAST;
output  [511:0] m_axis_udp_TDATA;
output  [63:0] m_axis_udp_TKEEP;
output  [0:0] m_axis_udp_TLAST;
output  [511:0] m_axis_tcp_TDATA;
output  [63:0] m_axis_tcp_TKEEP;
output  [0:0] m_axis_tcp_TLAST;
output  [511:0] m_axis_roce_TDATA;
output  [63:0] m_axis_roce_TKEEP;
output  [0:0] m_axis_roce_TLAST;
input  [31:0] myIpAddress_V;
input   ap_clk;
input   ap_rst_n;
input   s_axis_raw_TVALID;
output   s_axis_raw_TREADY;
output   m_axis_arp_TVALID;
input   m_axis_arp_TREADY;
output   m_axis_icmp_TVALID;
input   m_axis_icmp_TREADY;
output   m_axis_tcp_TVALID;
input   m_axis_tcp_TREADY;
output   m_axis_icmpv6_TVALID;
input   m_axis_icmpv6_TREADY;
output   m_axis_ipv6udp_TVALID;
input   m_axis_ipv6udp_TREADY;
output   m_axis_udp_TVALID;
input   m_axis_udp_TREADY;
output   m_axis_roce_TVALID;
input   m_axis_roce_TREADY;

 reg    ap_rst_n_inv;
wire    detect_eth_protocol_U0_ap_start;
wire    detect_eth_protocol_U0_ap_done;
wire    detect_eth_protocol_U0_ap_continue;
wire    detect_eth_protocol_U0_ap_idle;
wire    detect_eth_protocol_U0_ap_ready;
wire   [15:0] detect_eth_protocol_U0_etherTypeFifo_V_V_din;
wire    detect_eth_protocol_U0_etherTypeFifo_V_V_write;
wire   [511:0] detect_eth_protocol_U0_ethDataFifo_V_data_V_din;
wire    detect_eth_protocol_U0_ethDataFifo_V_data_V_write;
wire   [63:0] detect_eth_protocol_U0_ethDataFifo_V_keep_V_din;
wire    detect_eth_protocol_U0_ethDataFifo_V_keep_V_write;
wire   [0:0] detect_eth_protocol_U0_ethDataFifo_V_last_V_din;
wire    detect_eth_protocol_U0_ethDataFifo_V_last_V_write;
wire    detect_eth_protocol_U0_s_axis_raw_TREADY;
wire    route_by_eth_protoco_U0_ap_start;
wire    route_by_eth_protoco_U0_ap_done;
wire    route_by_eth_protoco_U0_ap_continue;
wire    route_by_eth_protoco_U0_ap_idle;
wire    route_by_eth_protoco_U0_ap_ready;
wire    route_by_eth_protoco_U0_etherTypeFifo_V_V_read;
wire    route_by_eth_protoco_U0_ethDataFifo_V_data_V_read;
wire    route_by_eth_protoco_U0_ethDataFifo_V_keep_V_read;
wire    route_by_eth_protoco_U0_ethDataFifo_V_last_V_read;
wire   [511:0] route_by_eth_protoco_U0_ipv6ShiftFifo_V_data_din;
wire    route_by_eth_protoco_U0_ipv6ShiftFifo_V_data_write;
wire   [63:0] route_by_eth_protoco_U0_ipv6ShiftFifo_V_keep_din;
wire    route_by_eth_protoco_U0_ipv6ShiftFifo_V_keep_write;
wire   [0:0] route_by_eth_protoco_U0_ipv6ShiftFifo_V_last_din;
wire    route_by_eth_protoco_U0_ipv6ShiftFifo_V_last_write;
wire   [511:0] route_by_eth_protoco_U0_ipv4ShiftFifo_V_data_din;
wire    route_by_eth_protoco_U0_ipv4ShiftFifo_V_data_write;
wire   [63:0] route_by_eth_protoco_U0_ipv4ShiftFifo_V_keep_din;
wire    route_by_eth_protoco_U0_ipv4ShiftFifo_V_keep_write;
wire   [0:0] route_by_eth_protoco_U0_ipv4ShiftFifo_V_last_din;
wire    route_by_eth_protoco_U0_ipv4ShiftFifo_V_last_write;
wire   [511:0] route_by_eth_protoco_U0_m_axis_arp_TDATA;
wire    route_by_eth_protoco_U0_m_axis_arp_TVALID;
wire   [63:0] route_by_eth_protoco_U0_m_axis_arp_TKEEP;
wire   [0:0] route_by_eth_protoco_U0_m_axis_arp_TLAST;
wire    ap_sync_continue;
wire    ip_handler_rshiftWor_1_U0_ap_start;
wire    ip_handler_rshiftWor_1_U0_ap_done;
wire    ip_handler_rshiftWor_1_U0_ap_continue;
wire    ip_handler_rshiftWor_1_U0_ap_idle;
wire    ip_handler_rshiftWor_1_U0_ap_ready;
wire    ip_handler_rshiftWor_1_U0_ipv4ShiftFifo_V_data_read;
wire    ip_handler_rshiftWor_1_U0_ipv4ShiftFifo_V_keep_read;
wire    ip_handler_rshiftWor_1_U0_ipv4ShiftFifo_V_last_read;
wire   [576:0] ip_handler_rshiftWor_1_U0_ipDataFifo_V_din;
wire    ip_handler_rshiftWor_1_U0_ipDataFifo_V_write;
wire    ip_handler_rshiftWor_U0_ap_start;
wire    ip_handler_rshiftWor_U0_ap_done;
wire    ip_handler_rshiftWor_U0_ap_continue;
wire    ip_handler_rshiftWor_U0_ap_idle;
wire    ip_handler_rshiftWor_U0_ap_ready;
wire    ip_handler_rshiftWor_U0_ipv6ShiftFifo_V_data_read;
wire    ip_handler_rshiftWor_U0_ipv6ShiftFifo_V_keep_read;
wire    ip_handler_rshiftWor_U0_ipv6ShiftFifo_V_last_read;
wire   [511:0] ip_handler_rshiftWor_U0_ipv6DataFifo_V_data_s_din;
wire    ip_handler_rshiftWor_U0_ipv6DataFifo_V_data_s_write;
wire   [63:0] ip_handler_rshiftWor_U0_ipv6DataFifo_V_keep_s_din;
wire    ip_handler_rshiftWor_U0_ipv6DataFifo_V_keep_s_write;
wire   [0:0] ip_handler_rshiftWor_U0_ipv6DataFifo_V_last_s_din;
wire    ip_handler_rshiftWor_U0_ipv6DataFifo_V_last_s_write;
wire    extract_ip_meta_512_U0_ap_start;
wire    extract_ip_meta_512_U0_ap_done;
wire    extract_ip_meta_512_U0_ap_continue;
wire    extract_ip_meta_512_U0_ap_idle;
wire    extract_ip_meta_512_U0_ap_ready;
wire    extract_ip_meta_512_U0_ipDataFifo_V_read;
wire   [511:0] extract_ip_meta_512_U0_ipDataMetaFifo_V_dat_din;
wire    extract_ip_meta_512_U0_ipDataMetaFifo_V_dat_write;
wire   [63:0] extract_ip_meta_512_U0_ipDataMetaFifo_V_kee_din;
wire    extract_ip_meta_512_U0_ipDataMetaFifo_V_kee_write;
wire   [0:0] extract_ip_meta_512_U0_ipDataMetaFifo_V_las_din;
wire    extract_ip_meta_512_U0_ipDataMetaFifo_V_las_write;
wire   [0:0] extract_ip_meta_512_U0_validIpAddressFifo_V_din;
wire    extract_ip_meta_512_U0_validIpAddressFifo_V_write;
wire   [7:0] extract_ip_meta_512_U0_ipv4ProtocolFifo_V_V_din;
wire    extract_ip_meta_512_U0_ipv4ProtocolFifo_V_V_write;
wire    ip_handler_compute_i_U0_ap_start;
wire    ip_handler_compute_i_U0_ap_done;
wire    ip_handler_compute_i_U0_ap_continue;
wire    ip_handler_compute_i_U0_ap_idle;
wire    ip_handler_compute_i_U0_ap_ready;
wire    ip_handler_compute_i_U0_ipDataMetaFifo_V_dat_read;
wire    ip_handler_compute_i_U0_ipDataMetaFifo_V_kee_read;
wire    ip_handler_compute_i_U0_ipDataMetaFifo_V_las_read;
wire   [576:0] ip_handler_compute_i_U0_ipDataCheckFifo_V_din;
wire    ip_handler_compute_i_U0_ipDataCheckFifo_V_write;
wire   [543:0] ip_handler_compute_i_U0_iph_subSumsFifoOut_V_din;
wire    ip_handler_compute_i_U0_iph_subSumsFifoOut_V_write;
wire    ip_handler_check_ipv_U0_ap_start;
wire    ip_handler_check_ipv_U0_ap_done;
wire    ip_handler_check_ipv_U0_ap_continue;
wire    ip_handler_check_ipv_U0_ap_idle;
wire    ip_handler_check_ipv_U0_ap_ready;
wire    ip_handler_check_ipv_U0_iph_subSumsFifoOut_V_read;
wire   [0:0] ip_handler_check_ipv_U0_validChecksumFifo_V_din;
wire    ip_handler_check_ipv_U0_validChecksumFifo_V_write;
wire    ip_invalid_dropper_U0_ap_start;
wire    ip_invalid_dropper_U0_ap_done;
wire    ip_invalid_dropper_U0_ap_continue;
wire    ip_invalid_dropper_U0_ap_idle;
wire    ip_invalid_dropper_U0_ap_ready;
wire    ip_invalid_dropper_U0_ipDataCheckFifo_V_read;
wire    ip_invalid_dropper_U0_validChecksumFifo_V_read;
wire    ip_invalid_dropper_U0_validIpAddressFifo_V_read;
wire   [576:0] ip_invalid_dropper_U0_ipDataDropFifo_V_din;
wire    ip_invalid_dropper_U0_ipDataDropFifo_V_write;
wire   [0:0] ip_invalid_dropper_U0_ipv4ValidFifo_V_din;
wire    ip_invalid_dropper_U0_ipv4ValidFifo_V_write;
wire    cut_length_U0_ap_start;
wire    cut_length_U0_ap_done;
wire    cut_length_U0_ap_continue;
wire    cut_length_U0_ap_idle;
wire    cut_length_U0_ap_ready;
wire    cut_length_U0_ipDataDropFifo_V_read;
wire   [576:0] cut_length_U0_ipDataCutFifo_V_din;
wire    cut_length_U0_ipDataCutFifo_V_write;
wire    detect_ipv4_protocol_U0_ap_start;
wire    detect_ipv4_protocol_U0_ap_done;
wire    detect_ipv4_protocol_U0_ap_continue;
wire    detect_ipv4_protocol_U0_ap_idle;
wire    detect_ipv4_protocol_U0_ap_ready;
wire    detect_ipv4_protocol_U0_ipv4ProtocolFifo_V_V_read;
wire    detect_ipv4_protocol_U0_ipv4ValidFifo_V_read;
wire    detect_ipv4_protocol_U0_ipDataCutFifo_V_read;
wire   [576:0] detect_ipv4_protocol_U0_udpDataFifo_V_din;
wire    detect_ipv4_protocol_U0_udpDataFifo_V_write;
wire   [511:0] detect_ipv4_protocol_U0_m_axis_icmp_TDATA;
wire    detect_ipv4_protocol_U0_m_axis_icmp_TVALID;
wire   [63:0] detect_ipv4_protocol_U0_m_axis_icmp_TKEEP;
wire   [0:0] detect_ipv4_protocol_U0_m_axis_icmp_TLAST;
wire   [511:0] detect_ipv4_protocol_U0_m_axis_tcp_TDATA;
wire    detect_ipv4_protocol_U0_m_axis_tcp_TVALID;
wire   [63:0] detect_ipv4_protocol_U0_m_axis_tcp_TKEEP;
wire   [0:0] detect_ipv4_protocol_U0_m_axis_tcp_TLAST;
wire    detect_ipv6_protocol_U0_ap_start;
wire    detect_ipv6_protocol_U0_ap_done;
wire    detect_ipv6_protocol_U0_ap_continue;
wire    detect_ipv6_protocol_U0_ap_idle;
wire    detect_ipv6_protocol_U0_ap_ready;
wire    detect_ipv6_protocol_U0_ipv6DataFifo_V_data_s_read;
wire    detect_ipv6_protocol_U0_ipv6DataFifo_V_keep_s_read;
wire    detect_ipv6_protocol_U0_ipv6DataFifo_V_last_s_read;
wire   [511:0] detect_ipv6_protocol_U0_m_axis_icmpv6_TDATA;
wire    detect_ipv6_protocol_U0_m_axis_icmpv6_TVALID;
wire   [63:0] detect_ipv6_protocol_U0_m_axis_icmpv6_TKEEP;
wire   [0:0] detect_ipv6_protocol_U0_m_axis_icmpv6_TLAST;
wire   [511:0] detect_ipv6_protocol_U0_m_axis_ipv6udp_TDATA;
wire    detect_ipv6_protocol_U0_m_axis_ipv6udp_TVALID;
wire   [63:0] detect_ipv6_protocol_U0_m_axis_ipv6udp_TKEEP;
wire   [0:0] detect_ipv6_protocol_U0_m_axis_ipv6udp_TLAST;
wire    ip_handler_duplicate_U0_ap_start;
wire    ip_handler_duplicate_U0_ap_done;
wire    ip_handler_duplicate_U0_ap_continue;
wire    ip_handler_duplicate_U0_ap_idle;
wire    ip_handler_duplicate_U0_ap_ready;
wire    ip_handler_duplicate_U0_udpDataFifo_V_read;
wire   [511:0] ip_handler_duplicate_U0_m_axis_udp_TDATA;
wire    ip_handler_duplicate_U0_m_axis_udp_TVALID;
wire   [63:0] ip_handler_duplicate_U0_m_axis_udp_TKEEP;
wire   [0:0] ip_handler_duplicate_U0_m_axis_udp_TLAST;
wire   [511:0] ip_handler_duplicate_U0_m_axis_roce_TDATA;
wire    ip_handler_duplicate_U0_m_axis_roce_TVALID;
wire   [63:0] ip_handler_duplicate_U0_m_axis_roce_TKEEP;
wire   [0:0] ip_handler_duplicate_U0_m_axis_roce_TLAST;
wire    etherTypeFifo_V_V_full_n;
wire   [15:0] etherTypeFifo_V_V_dout;
wire    etherTypeFifo_V_V_empty_n;
wire    ethDataFifo_V_data_V_full_n;
wire   [511:0] ethDataFifo_V_data_V_dout;
wire    ethDataFifo_V_data_V_empty_n;
wire    ethDataFifo_V_keep_V_full_n;
wire   [63:0] ethDataFifo_V_keep_V_dout;
wire    ethDataFifo_V_keep_V_empty_n;
wire    ethDataFifo_V_last_V_full_n;
wire   [0:0] ethDataFifo_V_last_V_dout;
wire    ethDataFifo_V_last_V_empty_n;
wire    ipv4ShiftFifo_V_data_full_n;
wire   [511:0] ipv4ShiftFifo_V_data_dout;
wire    ipv4ShiftFifo_V_data_empty_n;
wire    ipv4ShiftFifo_V_keep_full_n;
wire   [63:0] ipv4ShiftFifo_V_keep_dout;
wire    ipv4ShiftFifo_V_keep_empty_n;
wire    ipv4ShiftFifo_V_last_full_n;
wire   [0:0] ipv4ShiftFifo_V_last_dout;
wire    ipv4ShiftFifo_V_last_empty_n;
wire    ipv6ShiftFifo_V_data_full_n;
wire   [511:0] ipv6ShiftFifo_V_data_dout;
wire    ipv6ShiftFifo_V_data_empty_n;
wire    ipv6ShiftFifo_V_keep_full_n;
wire   [63:0] ipv6ShiftFifo_V_keep_dout;
wire    ipv6ShiftFifo_V_keep_empty_n;
wire    ipv6ShiftFifo_V_last_full_n;
wire   [0:0] ipv6ShiftFifo_V_last_dout;
wire    ipv6ShiftFifo_V_last_empty_n;
wire    ipDataFifo_V_full_n;
wire   [576:0] ipDataFifo_V_dout;
wire    ipDataFifo_V_empty_n;
wire    ipv6DataFifo_V_data_s_full_n;
wire   [511:0] ipv6DataFifo_V_data_s_dout;
wire    ipv6DataFifo_V_data_s_empty_n;
wire    ipv6DataFifo_V_keep_s_full_n;
wire   [63:0] ipv6DataFifo_V_keep_s_dout;
wire    ipv6DataFifo_V_keep_s_empty_n;
wire    ipv6DataFifo_V_last_s_full_n;
wire   [0:0] ipv6DataFifo_V_last_s_dout;
wire    ipv6DataFifo_V_last_s_empty_n;
wire    ipDataMetaFifo_V_dat_full_n;
wire   [511:0] ipDataMetaFifo_V_dat_dout;
wire    ipDataMetaFifo_V_dat_empty_n;
wire    ipDataMetaFifo_V_kee_full_n;
wire   [63:0] ipDataMetaFifo_V_kee_dout;
wire    ipDataMetaFifo_V_kee_empty_n;
wire    ipDataMetaFifo_V_las_full_n;
wire   [0:0] ipDataMetaFifo_V_las_dout;
wire    ipDataMetaFifo_V_las_empty_n;
wire    validIpAddressFifo_V_full_n;
wire   [0:0] validIpAddressFifo_V_dout;
wire    validIpAddressFifo_V_empty_n;
wire    ipv4ProtocolFifo_V_V_full_n;
wire   [7:0] ipv4ProtocolFifo_V_V_dout;
wire    ipv4ProtocolFifo_V_V_empty_n;
wire    ipDataCheckFifo_V_full_n;
wire   [576:0] ipDataCheckFifo_V_dout;
wire    ipDataCheckFifo_V_empty_n;
wire    iph_subSumsFifoOut_V_full_n;
wire   [543:0] iph_subSumsFifoOut_V_dout;
wire    iph_subSumsFifoOut_V_empty_n;
wire    validChecksumFifo_V_full_n;
wire   [0:0] validChecksumFifo_V_dout;
wire    validChecksumFifo_V_empty_n;
wire    ipv4ValidFifo_V_full_n;
wire   [0:0] ipv4ValidFifo_V_dout;
wire    ipv4ValidFifo_V_empty_n;
wire    ipDataDropFifo_V_full_n;
wire   [576:0] ipDataDropFifo_V_dout;
wire    ipDataDropFifo_V_empty_n;
wire    ipDataCutFifo_V_full_n;
wire   [576:0] ipDataCutFifo_V_dout;
wire    ipDataCutFifo_V_empty_n;
wire    udpDataFifo_V_full_n;
wire   [576:0] udpDataFifo_V_dout;
wire    udpDataFifo_V_empty_n;

detect_eth_protocol detect_eth_protocol_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(detect_eth_protocol_U0_ap_start),
    .ap_done(detect_eth_protocol_U0_ap_done),
    .ap_continue(detect_eth_protocol_U0_ap_continue),
    .ap_idle(detect_eth_protocol_U0_ap_idle),
    .ap_ready(detect_eth_protocol_U0_ap_ready),
    .s_axis_raw_TVALID(s_axis_raw_TVALID),
    .etherTypeFifo_V_V_din(detect_eth_protocol_U0_etherTypeFifo_V_V_din),
    .etherTypeFifo_V_V_full_n(etherTypeFifo_V_V_full_n),
    .etherTypeFifo_V_V_write(detect_eth_protocol_U0_etherTypeFifo_V_V_write),
    .ethDataFifo_V_data_V_din(detect_eth_protocol_U0_ethDataFifo_V_data_V_din),
    .ethDataFifo_V_data_V_full_n(ethDataFifo_V_data_V_full_n),
    .ethDataFifo_V_data_V_write(detect_eth_protocol_U0_ethDataFifo_V_data_V_write),
    .ethDataFifo_V_keep_V_din(detect_eth_protocol_U0_ethDataFifo_V_keep_V_din),
    .ethDataFifo_V_keep_V_full_n(ethDataFifo_V_keep_V_full_n),
    .ethDataFifo_V_keep_V_write(detect_eth_protocol_U0_ethDataFifo_V_keep_V_write),
    .ethDataFifo_V_last_V_din(detect_eth_protocol_U0_ethDataFifo_V_last_V_din),
    .ethDataFifo_V_last_V_full_n(ethDataFifo_V_last_V_full_n),
    .ethDataFifo_V_last_V_write(detect_eth_protocol_U0_ethDataFifo_V_last_V_write),
    .s_axis_raw_TDATA(s_axis_raw_TDATA),
    .s_axis_raw_TREADY(detect_eth_protocol_U0_s_axis_raw_TREADY),
    .s_axis_raw_TKEEP(s_axis_raw_TKEEP),
    .s_axis_raw_TLAST(s_axis_raw_TLAST)
);

route_by_eth_protoco route_by_eth_protoco_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(route_by_eth_protoco_U0_ap_start),
    .ap_done(route_by_eth_protoco_U0_ap_done),
    .ap_continue(route_by_eth_protoco_U0_ap_continue),
    .ap_idle(route_by_eth_protoco_U0_ap_idle),
    .ap_ready(route_by_eth_protoco_U0_ap_ready),
    .etherTypeFifo_V_V_dout(etherTypeFifo_V_V_dout),
    .etherTypeFifo_V_V_empty_n(etherTypeFifo_V_V_empty_n),
    .etherTypeFifo_V_V_read(route_by_eth_protoco_U0_etherTypeFifo_V_V_read),
    .ethDataFifo_V_data_V_dout(ethDataFifo_V_data_V_dout),
    .ethDataFifo_V_data_V_empty_n(ethDataFifo_V_data_V_empty_n),
    .ethDataFifo_V_data_V_read(route_by_eth_protoco_U0_ethDataFifo_V_data_V_read),
    .ethDataFifo_V_keep_V_dout(ethDataFifo_V_keep_V_dout),
    .ethDataFifo_V_keep_V_empty_n(ethDataFifo_V_keep_V_empty_n),
    .ethDataFifo_V_keep_V_read(route_by_eth_protoco_U0_ethDataFifo_V_keep_V_read),
    .ethDataFifo_V_last_V_dout(ethDataFifo_V_last_V_dout),
    .ethDataFifo_V_last_V_empty_n(ethDataFifo_V_last_V_empty_n),
    .ethDataFifo_V_last_V_read(route_by_eth_protoco_U0_ethDataFifo_V_last_V_read),
    .ipv6ShiftFifo_V_data_din(route_by_eth_protoco_U0_ipv6ShiftFifo_V_data_din),
    .ipv6ShiftFifo_V_data_full_n(ipv6ShiftFifo_V_data_full_n),
    .ipv6ShiftFifo_V_data_write(route_by_eth_protoco_U0_ipv6ShiftFifo_V_data_write),
    .ipv6ShiftFifo_V_keep_din(route_by_eth_protoco_U0_ipv6ShiftFifo_V_keep_din),
    .ipv6ShiftFifo_V_keep_full_n(ipv6ShiftFifo_V_keep_full_n),
    .ipv6ShiftFifo_V_keep_write(route_by_eth_protoco_U0_ipv6ShiftFifo_V_keep_write),
    .ipv6ShiftFifo_V_last_din(route_by_eth_protoco_U0_ipv6ShiftFifo_V_last_din),
    .ipv6ShiftFifo_V_last_full_n(ipv6ShiftFifo_V_last_full_n),
    .ipv6ShiftFifo_V_last_write(route_by_eth_protoco_U0_ipv6ShiftFifo_V_last_write),
    .ipv4ShiftFifo_V_data_din(route_by_eth_protoco_U0_ipv4ShiftFifo_V_data_din),
    .ipv4ShiftFifo_V_data_full_n(ipv4ShiftFifo_V_data_full_n),
    .ipv4ShiftFifo_V_data_write(route_by_eth_protoco_U0_ipv4ShiftFifo_V_data_write),
    .ipv4ShiftFifo_V_keep_din(route_by_eth_protoco_U0_ipv4ShiftFifo_V_keep_din),
    .ipv4ShiftFifo_V_keep_full_n(ipv4ShiftFifo_V_keep_full_n),
    .ipv4ShiftFifo_V_keep_write(route_by_eth_protoco_U0_ipv4ShiftFifo_V_keep_write),
    .ipv4ShiftFifo_V_last_din(route_by_eth_protoco_U0_ipv4ShiftFifo_V_last_din),
    .ipv4ShiftFifo_V_last_full_n(ipv4ShiftFifo_V_last_full_n),
    .ipv4ShiftFifo_V_last_write(route_by_eth_protoco_U0_ipv4ShiftFifo_V_last_write),
    .m_axis_arp_TREADY(m_axis_arp_TREADY),
    .m_axis_arp_TDATA(route_by_eth_protoco_U0_m_axis_arp_TDATA),
    .m_axis_arp_TVALID(route_by_eth_protoco_U0_m_axis_arp_TVALID),
    .m_axis_arp_TKEEP(route_by_eth_protoco_U0_m_axis_arp_TKEEP),
    .m_axis_arp_TLAST(route_by_eth_protoco_U0_m_axis_arp_TLAST)
);

ip_handler_rshiftWor_1 ip_handler_rshiftWor_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_handler_rshiftWor_1_U0_ap_start),
    .ap_done(ip_handler_rshiftWor_1_U0_ap_done),
    .ap_continue(ip_handler_rshiftWor_1_U0_ap_continue),
    .ap_idle(ip_handler_rshiftWor_1_U0_ap_idle),
    .ap_ready(ip_handler_rshiftWor_1_U0_ap_ready),
    .ipv4ShiftFifo_V_data_dout(ipv4ShiftFifo_V_data_dout),
    .ipv4ShiftFifo_V_data_empty_n(ipv4ShiftFifo_V_data_empty_n),
    .ipv4ShiftFifo_V_data_read(ip_handler_rshiftWor_1_U0_ipv4ShiftFifo_V_data_read),
    .ipv4ShiftFifo_V_keep_dout(ipv4ShiftFifo_V_keep_dout),
    .ipv4ShiftFifo_V_keep_empty_n(ipv4ShiftFifo_V_keep_empty_n),
    .ipv4ShiftFifo_V_keep_read(ip_handler_rshiftWor_1_U0_ipv4ShiftFifo_V_keep_read),
    .ipv4ShiftFifo_V_last_dout(ipv4ShiftFifo_V_last_dout),
    .ipv4ShiftFifo_V_last_empty_n(ipv4ShiftFifo_V_last_empty_n),
    .ipv4ShiftFifo_V_last_read(ip_handler_rshiftWor_1_U0_ipv4ShiftFifo_V_last_read),
    .ipDataFifo_V_din(ip_handler_rshiftWor_1_U0_ipDataFifo_V_din),
    .ipDataFifo_V_full_n(ipDataFifo_V_full_n),
    .ipDataFifo_V_write(ip_handler_rshiftWor_1_U0_ipDataFifo_V_write)
);

ip_handler_rshiftWor ip_handler_rshiftWor_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_handler_rshiftWor_U0_ap_start),
    .ap_done(ip_handler_rshiftWor_U0_ap_done),
    .ap_continue(ip_handler_rshiftWor_U0_ap_continue),
    .ap_idle(ip_handler_rshiftWor_U0_ap_idle),
    .ap_ready(ip_handler_rshiftWor_U0_ap_ready),
    .ipv6ShiftFifo_V_data_dout(ipv6ShiftFifo_V_data_dout),
    .ipv6ShiftFifo_V_data_empty_n(ipv6ShiftFifo_V_data_empty_n),
    .ipv6ShiftFifo_V_data_read(ip_handler_rshiftWor_U0_ipv6ShiftFifo_V_data_read),
    .ipv6ShiftFifo_V_keep_dout(ipv6ShiftFifo_V_keep_dout),
    .ipv6ShiftFifo_V_keep_empty_n(ipv6ShiftFifo_V_keep_empty_n),
    .ipv6ShiftFifo_V_keep_read(ip_handler_rshiftWor_U0_ipv6ShiftFifo_V_keep_read),
    .ipv6ShiftFifo_V_last_dout(ipv6ShiftFifo_V_last_dout),
    .ipv6ShiftFifo_V_last_empty_n(ipv6ShiftFifo_V_last_empty_n),
    .ipv6ShiftFifo_V_last_read(ip_handler_rshiftWor_U0_ipv6ShiftFifo_V_last_read),
    .ipv6DataFifo_V_data_s_din(ip_handler_rshiftWor_U0_ipv6DataFifo_V_data_s_din),
    .ipv6DataFifo_V_data_s_full_n(ipv6DataFifo_V_data_s_full_n),
    .ipv6DataFifo_V_data_s_write(ip_handler_rshiftWor_U0_ipv6DataFifo_V_data_s_write),
    .ipv6DataFifo_V_keep_s_din(ip_handler_rshiftWor_U0_ipv6DataFifo_V_keep_s_din),
    .ipv6DataFifo_V_keep_s_full_n(ipv6DataFifo_V_keep_s_full_n),
    .ipv6DataFifo_V_keep_s_write(ip_handler_rshiftWor_U0_ipv6DataFifo_V_keep_s_write),
    .ipv6DataFifo_V_last_s_din(ip_handler_rshiftWor_U0_ipv6DataFifo_V_last_s_din),
    .ipv6DataFifo_V_last_s_full_n(ipv6DataFifo_V_last_s_full_n),
    .ipv6DataFifo_V_last_s_write(ip_handler_rshiftWor_U0_ipv6DataFifo_V_last_s_write)
);

extract_ip_meta_512_s extract_ip_meta_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(extract_ip_meta_512_U0_ap_start),
    .ap_done(extract_ip_meta_512_U0_ap_done),
    .ap_continue(extract_ip_meta_512_U0_ap_continue),
    .ap_idle(extract_ip_meta_512_U0_ap_idle),
    .ap_ready(extract_ip_meta_512_U0_ap_ready),
    .ipDataFifo_V_dout(ipDataFifo_V_dout),
    .ipDataFifo_V_empty_n(ipDataFifo_V_empty_n),
    .ipDataFifo_V_read(extract_ip_meta_512_U0_ipDataFifo_V_read),
    .ipDataMetaFifo_V_dat_din(extract_ip_meta_512_U0_ipDataMetaFifo_V_dat_din),
    .ipDataMetaFifo_V_dat_full_n(ipDataMetaFifo_V_dat_full_n),
    .ipDataMetaFifo_V_dat_write(extract_ip_meta_512_U0_ipDataMetaFifo_V_dat_write),
    .ipDataMetaFifo_V_kee_din(extract_ip_meta_512_U0_ipDataMetaFifo_V_kee_din),
    .ipDataMetaFifo_V_kee_full_n(ipDataMetaFifo_V_kee_full_n),
    .ipDataMetaFifo_V_kee_write(extract_ip_meta_512_U0_ipDataMetaFifo_V_kee_write),
    .ipDataMetaFifo_V_las_din(extract_ip_meta_512_U0_ipDataMetaFifo_V_las_din),
    .ipDataMetaFifo_V_las_full_n(ipDataMetaFifo_V_las_full_n),
    .ipDataMetaFifo_V_las_write(extract_ip_meta_512_U0_ipDataMetaFifo_V_las_write),
    .validIpAddressFifo_V_din(extract_ip_meta_512_U0_validIpAddressFifo_V_din),
    .validIpAddressFifo_V_full_n(validIpAddressFifo_V_full_n),
    .validIpAddressFifo_V_write(extract_ip_meta_512_U0_validIpAddressFifo_V_write),
    .ipv4ProtocolFifo_V_V_din(extract_ip_meta_512_U0_ipv4ProtocolFifo_V_V_din),
    .ipv4ProtocolFifo_V_V_full_n(ipv4ProtocolFifo_V_V_full_n),
    .ipv4ProtocolFifo_V_V_write(extract_ip_meta_512_U0_ipv4ProtocolFifo_V_V_write),
    .myIpAddress_V(myIpAddress_V)
);

ip_handler_compute_i ip_handler_compute_i_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_handler_compute_i_U0_ap_start),
    .ap_done(ip_handler_compute_i_U0_ap_done),
    .ap_continue(ip_handler_compute_i_U0_ap_continue),
    .ap_idle(ip_handler_compute_i_U0_ap_idle),
    .ap_ready(ip_handler_compute_i_U0_ap_ready),
    .ipDataMetaFifo_V_dat_dout(ipDataMetaFifo_V_dat_dout),
    .ipDataMetaFifo_V_dat_empty_n(ipDataMetaFifo_V_dat_empty_n),
    .ipDataMetaFifo_V_dat_read(ip_handler_compute_i_U0_ipDataMetaFifo_V_dat_read),
    .ipDataMetaFifo_V_kee_dout(ipDataMetaFifo_V_kee_dout),
    .ipDataMetaFifo_V_kee_empty_n(ipDataMetaFifo_V_kee_empty_n),
    .ipDataMetaFifo_V_kee_read(ip_handler_compute_i_U0_ipDataMetaFifo_V_kee_read),
    .ipDataMetaFifo_V_las_dout(ipDataMetaFifo_V_las_dout),
    .ipDataMetaFifo_V_las_empty_n(ipDataMetaFifo_V_las_empty_n),
    .ipDataMetaFifo_V_las_read(ip_handler_compute_i_U0_ipDataMetaFifo_V_las_read),
    .ipDataCheckFifo_V_din(ip_handler_compute_i_U0_ipDataCheckFifo_V_din),
    .ipDataCheckFifo_V_full_n(ipDataCheckFifo_V_full_n),
    .ipDataCheckFifo_V_write(ip_handler_compute_i_U0_ipDataCheckFifo_V_write),
    .iph_subSumsFifoOut_V_din(ip_handler_compute_i_U0_iph_subSumsFifoOut_V_din),
    .iph_subSumsFifoOut_V_full_n(iph_subSumsFifoOut_V_full_n),
    .iph_subSumsFifoOut_V_write(ip_handler_compute_i_U0_iph_subSumsFifoOut_V_write)
);

ip_handler_check_ipv ip_handler_check_ipv_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_handler_check_ipv_U0_ap_start),
    .ap_done(ip_handler_check_ipv_U0_ap_done),
    .ap_continue(ip_handler_check_ipv_U0_ap_continue),
    .ap_idle(ip_handler_check_ipv_U0_ap_idle),
    .ap_ready(ip_handler_check_ipv_U0_ap_ready),
    .iph_subSumsFifoOut_V_dout(iph_subSumsFifoOut_V_dout),
    .iph_subSumsFifoOut_V_empty_n(iph_subSumsFifoOut_V_empty_n),
    .iph_subSumsFifoOut_V_read(ip_handler_check_ipv_U0_iph_subSumsFifoOut_V_read),
    .validChecksumFifo_V_din(ip_handler_check_ipv_U0_validChecksumFifo_V_din),
    .validChecksumFifo_V_full_n(validChecksumFifo_V_full_n),
    .validChecksumFifo_V_write(ip_handler_check_ipv_U0_validChecksumFifo_V_write)
);

ip_invalid_dropper ip_invalid_dropper_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_invalid_dropper_U0_ap_start),
    .ap_done(ip_invalid_dropper_U0_ap_done),
    .ap_continue(ip_invalid_dropper_U0_ap_continue),
    .ap_idle(ip_invalid_dropper_U0_ap_idle),
    .ap_ready(ip_invalid_dropper_U0_ap_ready),
    .ipDataCheckFifo_V_dout(ipDataCheckFifo_V_dout),
    .ipDataCheckFifo_V_empty_n(ipDataCheckFifo_V_empty_n),
    .ipDataCheckFifo_V_read(ip_invalid_dropper_U0_ipDataCheckFifo_V_read),
    .validChecksumFifo_V_dout(validChecksumFifo_V_dout),
    .validChecksumFifo_V_empty_n(validChecksumFifo_V_empty_n),
    .validChecksumFifo_V_read(ip_invalid_dropper_U0_validChecksumFifo_V_read),
    .validIpAddressFifo_V_dout(validIpAddressFifo_V_dout),
    .validIpAddressFifo_V_empty_n(validIpAddressFifo_V_empty_n),
    .validIpAddressFifo_V_read(ip_invalid_dropper_U0_validIpAddressFifo_V_read),
    .ipDataDropFifo_V_din(ip_invalid_dropper_U0_ipDataDropFifo_V_din),
    .ipDataDropFifo_V_full_n(ipDataDropFifo_V_full_n),
    .ipDataDropFifo_V_write(ip_invalid_dropper_U0_ipDataDropFifo_V_write),
    .ipv4ValidFifo_V_din(ip_invalid_dropper_U0_ipv4ValidFifo_V_din),
    .ipv4ValidFifo_V_full_n(ipv4ValidFifo_V_full_n),
    .ipv4ValidFifo_V_write(ip_invalid_dropper_U0_ipv4ValidFifo_V_write)
);

cut_length cut_length_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(cut_length_U0_ap_start),
    .ap_done(cut_length_U0_ap_done),
    .ap_continue(cut_length_U0_ap_continue),
    .ap_idle(cut_length_U0_ap_idle),
    .ap_ready(cut_length_U0_ap_ready),
    .ipDataDropFifo_V_dout(ipDataDropFifo_V_dout),
    .ipDataDropFifo_V_empty_n(ipDataDropFifo_V_empty_n),
    .ipDataDropFifo_V_read(cut_length_U0_ipDataDropFifo_V_read),
    .ipDataCutFifo_V_din(cut_length_U0_ipDataCutFifo_V_din),
    .ipDataCutFifo_V_full_n(ipDataCutFifo_V_full_n),
    .ipDataCutFifo_V_write(cut_length_U0_ipDataCutFifo_V_write)
);

detect_ipv4_protocol detect_ipv4_protocol_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(detect_ipv4_protocol_U0_ap_start),
    .ap_done(detect_ipv4_protocol_U0_ap_done),
    .ap_continue(detect_ipv4_protocol_U0_ap_continue),
    .ap_idle(detect_ipv4_protocol_U0_ap_idle),
    .ap_ready(detect_ipv4_protocol_U0_ap_ready),
    .ipv4ProtocolFifo_V_V_dout(ipv4ProtocolFifo_V_V_dout),
    .ipv4ProtocolFifo_V_V_empty_n(ipv4ProtocolFifo_V_V_empty_n),
    .ipv4ProtocolFifo_V_V_read(detect_ipv4_protocol_U0_ipv4ProtocolFifo_V_V_read),
    .ipv4ValidFifo_V_dout(ipv4ValidFifo_V_dout),
    .ipv4ValidFifo_V_empty_n(ipv4ValidFifo_V_empty_n),
    .ipv4ValidFifo_V_read(detect_ipv4_protocol_U0_ipv4ValidFifo_V_read),
    .ipDataCutFifo_V_dout(ipDataCutFifo_V_dout),
    .ipDataCutFifo_V_empty_n(ipDataCutFifo_V_empty_n),
    .ipDataCutFifo_V_read(detect_ipv4_protocol_U0_ipDataCutFifo_V_read),
    .udpDataFifo_V_din(detect_ipv4_protocol_U0_udpDataFifo_V_din),
    .udpDataFifo_V_full_n(udpDataFifo_V_full_n),
    .udpDataFifo_V_write(detect_ipv4_protocol_U0_udpDataFifo_V_write),
    .m_axis_tcp_TREADY(m_axis_tcp_TREADY),
    .m_axis_icmp_TREADY(m_axis_icmp_TREADY),
    .m_axis_icmp_TDATA(detect_ipv4_protocol_U0_m_axis_icmp_TDATA),
    .m_axis_icmp_TVALID(detect_ipv4_protocol_U0_m_axis_icmp_TVALID),
    .m_axis_icmp_TKEEP(detect_ipv4_protocol_U0_m_axis_icmp_TKEEP),
    .m_axis_icmp_TLAST(detect_ipv4_protocol_U0_m_axis_icmp_TLAST),
    .m_axis_tcp_TDATA(detect_ipv4_protocol_U0_m_axis_tcp_TDATA),
    .m_axis_tcp_TVALID(detect_ipv4_protocol_U0_m_axis_tcp_TVALID),
    .m_axis_tcp_TKEEP(detect_ipv4_protocol_U0_m_axis_tcp_TKEEP),
    .m_axis_tcp_TLAST(detect_ipv4_protocol_U0_m_axis_tcp_TLAST)
);

detect_ipv6_protocol detect_ipv6_protocol_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(detect_ipv6_protocol_U0_ap_start),
    .ap_done(detect_ipv6_protocol_U0_ap_done),
    .ap_continue(detect_ipv6_protocol_U0_ap_continue),
    .ap_idle(detect_ipv6_protocol_U0_ap_idle),
    .ap_ready(detect_ipv6_protocol_U0_ap_ready),
    .ipv6DataFifo_V_data_s_dout(ipv6DataFifo_V_data_s_dout),
    .ipv6DataFifo_V_data_s_empty_n(ipv6DataFifo_V_data_s_empty_n),
    .ipv6DataFifo_V_data_s_read(detect_ipv6_protocol_U0_ipv6DataFifo_V_data_s_read),
    .ipv6DataFifo_V_keep_s_dout(ipv6DataFifo_V_keep_s_dout),
    .ipv6DataFifo_V_keep_s_empty_n(ipv6DataFifo_V_keep_s_empty_n),
    .ipv6DataFifo_V_keep_s_read(detect_ipv6_protocol_U0_ipv6DataFifo_V_keep_s_read),
    .ipv6DataFifo_V_last_s_dout(ipv6DataFifo_V_last_s_dout),
    .ipv6DataFifo_V_last_s_empty_n(ipv6DataFifo_V_last_s_empty_n),
    .ipv6DataFifo_V_last_s_read(detect_ipv6_protocol_U0_ipv6DataFifo_V_last_s_read),
    .m_axis_ipv6udp_TREADY(m_axis_ipv6udp_TREADY),
    .m_axis_icmpv6_TREADY(m_axis_icmpv6_TREADY),
    .m_axis_icmpv6_TDATA(detect_ipv6_protocol_U0_m_axis_icmpv6_TDATA),
    .m_axis_icmpv6_TVALID(detect_ipv6_protocol_U0_m_axis_icmpv6_TVALID),
    .m_axis_icmpv6_TKEEP(detect_ipv6_protocol_U0_m_axis_icmpv6_TKEEP),
    .m_axis_icmpv6_TLAST(detect_ipv6_protocol_U0_m_axis_icmpv6_TLAST),
    .m_axis_ipv6udp_TDATA(detect_ipv6_protocol_U0_m_axis_ipv6udp_TDATA),
    .m_axis_ipv6udp_TVALID(detect_ipv6_protocol_U0_m_axis_ipv6udp_TVALID),
    .m_axis_ipv6udp_TKEEP(detect_ipv6_protocol_U0_m_axis_ipv6udp_TKEEP),
    .m_axis_ipv6udp_TLAST(detect_ipv6_protocol_U0_m_axis_ipv6udp_TLAST)
);

ip_handler_duplicate ip_handler_duplicate_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_handler_duplicate_U0_ap_start),
    .ap_done(ip_handler_duplicate_U0_ap_done),
    .ap_continue(ip_handler_duplicate_U0_ap_continue),
    .ap_idle(ip_handler_duplicate_U0_ap_idle),
    .ap_ready(ip_handler_duplicate_U0_ap_ready),
    .udpDataFifo_V_dout(udpDataFifo_V_dout),
    .udpDataFifo_V_empty_n(udpDataFifo_V_empty_n),
    .udpDataFifo_V_read(ip_handler_duplicate_U0_udpDataFifo_V_read),
    .m_axis_udp_TREADY(m_axis_udp_TREADY),
    .m_axis_roce_TREADY(m_axis_roce_TREADY),
    .m_axis_udp_TDATA(ip_handler_duplicate_U0_m_axis_udp_TDATA),
    .m_axis_udp_TVALID(ip_handler_duplicate_U0_m_axis_udp_TVALID),
    .m_axis_udp_TKEEP(ip_handler_duplicate_U0_m_axis_udp_TKEEP),
    .m_axis_udp_TLAST(ip_handler_duplicate_U0_m_axis_udp_TLAST),
    .m_axis_roce_TDATA(ip_handler_duplicate_U0_m_axis_roce_TDATA),
    .m_axis_roce_TVALID(ip_handler_duplicate_U0_m_axis_roce_TVALID),
    .m_axis_roce_TKEEP(ip_handler_duplicate_U0_m_axis_roce_TKEEP),
    .m_axis_roce_TLAST(ip_handler_duplicate_U0_m_axis_roce_TLAST)
);

fifo_w16_d2_A etherTypeFifo_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_eth_protocol_U0_etherTypeFifo_V_V_din),
    .if_full_n(etherTypeFifo_V_V_full_n),
    .if_write(detect_eth_protocol_U0_etherTypeFifo_V_V_write),
    .if_dout(etherTypeFifo_V_V_dout),
    .if_empty_n(etherTypeFifo_V_V_empty_n),
    .if_read(route_by_eth_protoco_U0_etherTypeFifo_V_V_read)
);

fifo_w512_d4_A ethDataFifo_V_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_eth_protocol_U0_ethDataFifo_V_data_V_din),
    .if_full_n(ethDataFifo_V_data_V_full_n),
    .if_write(detect_eth_protocol_U0_ethDataFifo_V_data_V_write),
    .if_dout(ethDataFifo_V_data_V_dout),
    .if_empty_n(ethDataFifo_V_data_V_empty_n),
    .if_read(route_by_eth_protoco_U0_ethDataFifo_V_data_V_read)
);

fifo_w64_d4_A ethDataFifo_V_keep_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_eth_protocol_U0_ethDataFifo_V_keep_V_din),
    .if_full_n(ethDataFifo_V_keep_V_full_n),
    .if_write(detect_eth_protocol_U0_ethDataFifo_V_keep_V_write),
    .if_dout(ethDataFifo_V_keep_V_dout),
    .if_empty_n(ethDataFifo_V_keep_V_empty_n),
    .if_read(route_by_eth_protoco_U0_ethDataFifo_V_keep_V_read)
);

fifo_w1_d4_A ethDataFifo_V_last_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_eth_protocol_U0_ethDataFifo_V_last_V_din),
    .if_full_n(ethDataFifo_V_last_V_full_n),
    .if_write(detect_eth_protocol_U0_ethDataFifo_V_last_V_write),
    .if_dout(ethDataFifo_V_last_V_dout),
    .if_empty_n(ethDataFifo_V_last_V_empty_n),
    .if_read(route_by_eth_protoco_U0_ethDataFifo_V_last_V_read)
);

fifo_w512_d2_A ipv4ShiftFifo_V_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(route_by_eth_protoco_U0_ipv4ShiftFifo_V_data_din),
    .if_full_n(ipv4ShiftFifo_V_data_full_n),
    .if_write(route_by_eth_protoco_U0_ipv4ShiftFifo_V_data_write),
    .if_dout(ipv4ShiftFifo_V_data_dout),
    .if_empty_n(ipv4ShiftFifo_V_data_empty_n),
    .if_read(ip_handler_rshiftWor_1_U0_ipv4ShiftFifo_V_data_read)
);

fifo_w64_d2_A ipv4ShiftFifo_V_keep_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(route_by_eth_protoco_U0_ipv4ShiftFifo_V_keep_din),
    .if_full_n(ipv4ShiftFifo_V_keep_full_n),
    .if_write(route_by_eth_protoco_U0_ipv4ShiftFifo_V_keep_write),
    .if_dout(ipv4ShiftFifo_V_keep_dout),
    .if_empty_n(ipv4ShiftFifo_V_keep_empty_n),
    .if_read(ip_handler_rshiftWor_1_U0_ipv4ShiftFifo_V_keep_read)
);

fifo_w1_d2_A ipv4ShiftFifo_V_last_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(route_by_eth_protoco_U0_ipv4ShiftFifo_V_last_din),
    .if_full_n(ipv4ShiftFifo_V_last_full_n),
    .if_write(route_by_eth_protoco_U0_ipv4ShiftFifo_V_last_write),
    .if_dout(ipv4ShiftFifo_V_last_dout),
    .if_empty_n(ipv4ShiftFifo_V_last_empty_n),
    .if_read(ip_handler_rshiftWor_1_U0_ipv4ShiftFifo_V_last_read)
);

fifo_w512_d2_A ipv6ShiftFifo_V_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(route_by_eth_protoco_U0_ipv6ShiftFifo_V_data_din),
    .if_full_n(ipv6ShiftFifo_V_data_full_n),
    .if_write(route_by_eth_protoco_U0_ipv6ShiftFifo_V_data_write),
    .if_dout(ipv6ShiftFifo_V_data_dout),
    .if_empty_n(ipv6ShiftFifo_V_data_empty_n),
    .if_read(ip_handler_rshiftWor_U0_ipv6ShiftFifo_V_data_read)
);

fifo_w64_d2_A ipv6ShiftFifo_V_keep_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(route_by_eth_protoco_U0_ipv6ShiftFifo_V_keep_din),
    .if_full_n(ipv6ShiftFifo_V_keep_full_n),
    .if_write(route_by_eth_protoco_U0_ipv6ShiftFifo_V_keep_write),
    .if_dout(ipv6ShiftFifo_V_keep_dout),
    .if_empty_n(ipv6ShiftFifo_V_keep_empty_n),
    .if_read(ip_handler_rshiftWor_U0_ipv6ShiftFifo_V_keep_read)
);

fifo_w1_d2_A ipv6ShiftFifo_V_last_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(route_by_eth_protoco_U0_ipv6ShiftFifo_V_last_din),
    .if_full_n(ipv6ShiftFifo_V_last_full_n),
    .if_write(route_by_eth_protoco_U0_ipv6ShiftFifo_V_last_write),
    .if_dout(ipv6ShiftFifo_V_last_dout),
    .if_empty_n(ipv6ShiftFifo_V_last_empty_n),
    .if_read(ip_handler_rshiftWor_U0_ipv6ShiftFifo_V_last_read)
);

fifo_w577_d2_A ipDataFifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_rshiftWor_1_U0_ipDataFifo_V_din),
    .if_full_n(ipDataFifo_V_full_n),
    .if_write(ip_handler_rshiftWor_1_U0_ipDataFifo_V_write),
    .if_dout(ipDataFifo_V_dout),
    .if_empty_n(ipDataFifo_V_empty_n),
    .if_read(extract_ip_meta_512_U0_ipDataFifo_V_read)
);

fifo_w512_d2_A ipv6DataFifo_V_data_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_rshiftWor_U0_ipv6DataFifo_V_data_s_din),
    .if_full_n(ipv6DataFifo_V_data_s_full_n),
    .if_write(ip_handler_rshiftWor_U0_ipv6DataFifo_V_data_s_write),
    .if_dout(ipv6DataFifo_V_data_s_dout),
    .if_empty_n(ipv6DataFifo_V_data_s_empty_n),
    .if_read(detect_ipv6_protocol_U0_ipv6DataFifo_V_data_s_read)
);

fifo_w64_d2_A ipv6DataFifo_V_keep_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_rshiftWor_U0_ipv6DataFifo_V_keep_s_din),
    .if_full_n(ipv6DataFifo_V_keep_s_full_n),
    .if_write(ip_handler_rshiftWor_U0_ipv6DataFifo_V_keep_s_write),
    .if_dout(ipv6DataFifo_V_keep_s_dout),
    .if_empty_n(ipv6DataFifo_V_keep_s_empty_n),
    .if_read(detect_ipv6_protocol_U0_ipv6DataFifo_V_keep_s_read)
);

fifo_w1_d2_A ipv6DataFifo_V_last_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_rshiftWor_U0_ipv6DataFifo_V_last_s_din),
    .if_full_n(ipv6DataFifo_V_last_s_full_n),
    .if_write(ip_handler_rshiftWor_U0_ipv6DataFifo_V_last_s_write),
    .if_dout(ipv6DataFifo_V_last_s_dout),
    .if_empty_n(ipv6DataFifo_V_last_s_empty_n),
    .if_read(detect_ipv6_protocol_U0_ipv6DataFifo_V_last_s_read)
);

fifo_w512_d2_A ipDataMetaFifo_V_dat_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(extract_ip_meta_512_U0_ipDataMetaFifo_V_dat_din),
    .if_full_n(ipDataMetaFifo_V_dat_full_n),
    .if_write(extract_ip_meta_512_U0_ipDataMetaFifo_V_dat_write),
    .if_dout(ipDataMetaFifo_V_dat_dout),
    .if_empty_n(ipDataMetaFifo_V_dat_empty_n),
    .if_read(ip_handler_compute_i_U0_ipDataMetaFifo_V_dat_read)
);

fifo_w64_d2_A ipDataMetaFifo_V_kee_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(extract_ip_meta_512_U0_ipDataMetaFifo_V_kee_din),
    .if_full_n(ipDataMetaFifo_V_kee_full_n),
    .if_write(extract_ip_meta_512_U0_ipDataMetaFifo_V_kee_write),
    .if_dout(ipDataMetaFifo_V_kee_dout),
    .if_empty_n(ipDataMetaFifo_V_kee_empty_n),
    .if_read(ip_handler_compute_i_U0_ipDataMetaFifo_V_kee_read)
);

fifo_w1_d2_A ipDataMetaFifo_V_las_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(extract_ip_meta_512_U0_ipDataMetaFifo_V_las_din),
    .if_full_n(ipDataMetaFifo_V_las_full_n),
    .if_write(extract_ip_meta_512_U0_ipDataMetaFifo_V_las_write),
    .if_dout(ipDataMetaFifo_V_las_dout),
    .if_empty_n(ipDataMetaFifo_V_las_empty_n),
    .if_read(ip_handler_compute_i_U0_ipDataMetaFifo_V_las_read)
);

fifo_w1_d32_A validIpAddressFifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(extract_ip_meta_512_U0_validIpAddressFifo_V_din),
    .if_full_n(validIpAddressFifo_V_full_n),
    .if_write(extract_ip_meta_512_U0_validIpAddressFifo_V_write),
    .if_dout(validIpAddressFifo_V_dout),
    .if_empty_n(validIpAddressFifo_V_empty_n),
    .if_read(ip_invalid_dropper_U0_validIpAddressFifo_V_read)
);

fifo_w8_d32_A ipv4ProtocolFifo_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(extract_ip_meta_512_U0_ipv4ProtocolFifo_V_V_din),
    .if_full_n(ipv4ProtocolFifo_V_V_full_n),
    .if_write(extract_ip_meta_512_U0_ipv4ProtocolFifo_V_V_write),
    .if_dout(ipv4ProtocolFifo_V_V_dout),
    .if_empty_n(ipv4ProtocolFifo_V_V_empty_n),
    .if_read(detect_ipv4_protocol_U0_ipv4ProtocolFifo_V_V_read)
);

fifo_w577_d64_A ipDataCheckFifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_compute_i_U0_ipDataCheckFifo_V_din),
    .if_full_n(ipDataCheckFifo_V_full_n),
    .if_write(ip_handler_compute_i_U0_ipDataCheckFifo_V_write),
    .if_dout(ipDataCheckFifo_V_dout),
    .if_empty_n(ipDataCheckFifo_V_empty_n),
    .if_read(ip_invalid_dropper_U0_ipDataCheckFifo_V_read)
);

fifo_w544_d2_A iph_subSumsFifoOut_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_compute_i_U0_iph_subSumsFifoOut_V_din),
    .if_full_n(iph_subSumsFifoOut_V_full_n),
    .if_write(ip_handler_compute_i_U0_iph_subSumsFifoOut_V_write),
    .if_dout(iph_subSumsFifoOut_V_dout),
    .if_empty_n(iph_subSumsFifoOut_V_empty_n),
    .if_read(ip_handler_check_ipv_U0_iph_subSumsFifoOut_V_read)
);

fifo_w1_d4_A validChecksumFifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_check_ipv_U0_validChecksumFifo_V_din),
    .if_full_n(validChecksumFifo_V_full_n),
    .if_write(ip_handler_check_ipv_U0_validChecksumFifo_V_write),
    .if_dout(validChecksumFifo_V_dout),
    .if_empty_n(validChecksumFifo_V_empty_n),
    .if_read(ip_invalid_dropper_U0_validChecksumFifo_V_read)
);

fifo_w1_d8_A ipv4ValidFifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_invalid_dropper_U0_ipv4ValidFifo_V_din),
    .if_full_n(ipv4ValidFifo_V_full_n),
    .if_write(ip_invalid_dropper_U0_ipv4ValidFifo_V_write),
    .if_dout(ipv4ValidFifo_V_dout),
    .if_empty_n(ipv4ValidFifo_V_empty_n),
    .if_read(detect_ipv4_protocol_U0_ipv4ValidFifo_V_read)
);

fifo_w577_d2_A ipDataDropFifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_invalid_dropper_U0_ipDataDropFifo_V_din),
    .if_full_n(ipDataDropFifo_V_full_n),
    .if_write(ip_invalid_dropper_U0_ipDataDropFifo_V_write),
    .if_dout(ipDataDropFifo_V_dout),
    .if_empty_n(ipDataDropFifo_V_empty_n),
    .if_read(cut_length_U0_ipDataDropFifo_V_read)
);

fifo_w577_d2_A ipDataCutFifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(cut_length_U0_ipDataCutFifo_V_din),
    .if_full_n(ipDataCutFifo_V_full_n),
    .if_write(cut_length_U0_ipDataCutFifo_V_write),
    .if_dout(ipDataCutFifo_V_dout),
    .if_empty_n(ipDataCutFifo_V_empty_n),
    .if_read(detect_ipv4_protocol_U0_ipDataCutFifo_V_read)
);

fifo_w577_d2_A udpDataFifo_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_ipv4_protocol_U0_udpDataFifo_V_din),
    .if_full_n(udpDataFifo_V_full_n),
    .if_write(detect_ipv4_protocol_U0_udpDataFifo_V_write),
    .if_dout(udpDataFifo_V_dout),
    .if_empty_n(udpDataFifo_V_empty_n),
    .if_read(ip_handler_duplicate_U0_udpDataFifo_V_read)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign cut_length_U0_ap_continue = 1'b1;

assign cut_length_U0_ap_start = 1'b1;

assign detect_eth_protocol_U0_ap_continue = 1'b1;

assign detect_eth_protocol_U0_ap_start = 1'b1;

assign detect_ipv4_protocol_U0_ap_continue = 1'b1;

assign detect_ipv4_protocol_U0_ap_start = 1'b1;

assign detect_ipv6_protocol_U0_ap_continue = 1'b1;

assign detect_ipv6_protocol_U0_ap_start = 1'b1;

assign extract_ip_meta_512_U0_ap_continue = 1'b1;

assign extract_ip_meta_512_U0_ap_start = 1'b1;

assign ip_handler_check_ipv_U0_ap_continue = 1'b1;

assign ip_handler_check_ipv_U0_ap_start = 1'b1;

assign ip_handler_compute_i_U0_ap_continue = 1'b1;

assign ip_handler_compute_i_U0_ap_start = 1'b1;

assign ip_handler_duplicate_U0_ap_continue = 1'b1;

assign ip_handler_duplicate_U0_ap_start = 1'b1;

assign ip_handler_rshiftWor_1_U0_ap_continue = 1'b1;

assign ip_handler_rshiftWor_1_U0_ap_start = 1'b1;

assign ip_handler_rshiftWor_U0_ap_continue = 1'b1;

assign ip_handler_rshiftWor_U0_ap_start = 1'b1;

assign ip_invalid_dropper_U0_ap_continue = 1'b1;

assign ip_invalid_dropper_U0_ap_start = 1'b1;

assign m_axis_arp_TDATA = route_by_eth_protoco_U0_m_axis_arp_TDATA;

assign m_axis_arp_TKEEP = route_by_eth_protoco_U0_m_axis_arp_TKEEP;

assign m_axis_arp_TLAST = route_by_eth_protoco_U0_m_axis_arp_TLAST;

assign m_axis_arp_TVALID = route_by_eth_protoco_U0_m_axis_arp_TVALID;

assign m_axis_icmp_TDATA = detect_ipv4_protocol_U0_m_axis_icmp_TDATA;

assign m_axis_icmp_TKEEP = detect_ipv4_protocol_U0_m_axis_icmp_TKEEP;

assign m_axis_icmp_TLAST = detect_ipv4_protocol_U0_m_axis_icmp_TLAST;

assign m_axis_icmp_TVALID = detect_ipv4_protocol_U0_m_axis_icmp_TVALID;

assign m_axis_icmpv6_TDATA = detect_ipv6_protocol_U0_m_axis_icmpv6_TDATA;

assign m_axis_icmpv6_TKEEP = detect_ipv6_protocol_U0_m_axis_icmpv6_TKEEP;

assign m_axis_icmpv6_TLAST = detect_ipv6_protocol_U0_m_axis_icmpv6_TLAST;

assign m_axis_icmpv6_TVALID = detect_ipv6_protocol_U0_m_axis_icmpv6_TVALID;

assign m_axis_ipv6udp_TDATA = detect_ipv6_protocol_U0_m_axis_ipv6udp_TDATA;

assign m_axis_ipv6udp_TKEEP = detect_ipv6_protocol_U0_m_axis_ipv6udp_TKEEP;

assign m_axis_ipv6udp_TLAST = detect_ipv6_protocol_U0_m_axis_ipv6udp_TLAST;

assign m_axis_ipv6udp_TVALID = detect_ipv6_protocol_U0_m_axis_ipv6udp_TVALID;

assign m_axis_roce_TDATA = ip_handler_duplicate_U0_m_axis_roce_TDATA;

assign m_axis_roce_TKEEP = ip_handler_duplicate_U0_m_axis_roce_TKEEP;

assign m_axis_roce_TLAST = ip_handler_duplicate_U0_m_axis_roce_TLAST;

assign m_axis_roce_TVALID = ip_handler_duplicate_U0_m_axis_roce_TVALID;

assign m_axis_tcp_TDATA = detect_ipv4_protocol_U0_m_axis_tcp_TDATA;

assign m_axis_tcp_TKEEP = detect_ipv4_protocol_U0_m_axis_tcp_TKEEP;

assign m_axis_tcp_TLAST = detect_ipv4_protocol_U0_m_axis_tcp_TLAST;

assign m_axis_tcp_TVALID = detect_ipv4_protocol_U0_m_axis_tcp_TVALID;

assign m_axis_udp_TDATA = ip_handler_duplicate_U0_m_axis_udp_TDATA;

assign m_axis_udp_TKEEP = ip_handler_duplicate_U0_m_axis_udp_TKEEP;

assign m_axis_udp_TLAST = ip_handler_duplicate_U0_m_axis_udp_TLAST;

assign m_axis_udp_TVALID = ip_handler_duplicate_U0_m_axis_udp_TVALID;

assign route_by_eth_protoco_U0_ap_continue = 1'b1;

assign route_by_eth_protoco_U0_ap_start = 1'b1;

assign s_axis_raw_TREADY = detect_eth_protocol_U0_s_axis_raw_TREADY;

endmodule //ip_handler_top
