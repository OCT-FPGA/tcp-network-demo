-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity detect_eth_protocol is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_axis_raw_TVALID : IN STD_LOGIC;
    etherTypeFifo_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    etherTypeFifo_V_V_full_n : IN STD_LOGIC;
    etherTypeFifo_V_V_write : OUT STD_LOGIC;
    ethDataFifo_V_data_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    ethDataFifo_V_data_V_full_n : IN STD_LOGIC;
    ethDataFifo_V_data_V_write : OUT STD_LOGIC;
    ethDataFifo_V_keep_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    ethDataFifo_V_keep_V_full_n : IN STD_LOGIC;
    ethDataFifo_V_keep_V_write : OUT STD_LOGIC;
    ethDataFifo_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    ethDataFifo_V_last_V_full_n : IN STD_LOGIC;
    ethDataFifo_V_last_V_write : OUT STD_LOGIC;
    s_axis_raw_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    s_axis_raw_TREADY : OUT STD_LOGIC;
    s_axis_raw_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    s_axis_raw_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of detect_eth_protocol is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv25_6F : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001101111";
    constant ap_const_lv111_0 : STD_LOGIC_VECTOR (110 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv112_8000000000000000000000000000 : STD_LOGIC_VECTOR (111 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv112_FFFFFFFFFFFFFFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (111 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv112_1 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_90_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_reg_398 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln54_reg_438 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op49_write_state2 : BOOLEAN;
    signal io_acc_block_signal_op51 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal header_ready : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal header_idx_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal header_header_V_1 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal metaWritten_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal s_axis_raw_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal etherTypeFifo_V_V_blk_n : STD_LOGIC;
    signal ethDataFifo_V_data_V_blk_n : STD_LOGIC;
    signal ethDataFifo_V_keep_V_blk_n : STD_LOGIC;
    signal ethDataFifo_V_last_V_blk_n : STD_LOGIC;
    signal tmp_data_V_reg_402 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_keep_V_reg_407 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_last_V_reg_412 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln67_fu_297_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal header_ready_load_load_fu_177_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_reg_433 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln54_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_write_flag_1_i_i_phi_fu_135_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_132 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln73_reg_143 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln73_reg_143 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_metaWritten_1_flag_0_reg_152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_metaWritten_1_flag_0_reg_152 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln62_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_header_ready_load : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln62_fu_368_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_header_idx_1_load : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_285_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal xor_ln62_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln62_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_metaWritten_1_load : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal Lo_assign_fu_185_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln414_fu_207_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal st3_fu_211_p3 : STD_LOGIC_VECTOR (111 downto 0);
    signal tmp_V_2_fu_193_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal select_ln414_fu_219_p3 : STD_LOGIC_VECTOR (111 downto 0);
    signal tmp_88_fu_227_p4 : STD_LOGIC_VECTOR (111 downto 0);
    signal select_ln414_5_fu_245_p3 : STD_LOGIC_VECTOR (111 downto 0);
    signal select_ln414_6_fu_253_p3 : STD_LOGIC_VECTOR (111 downto 0);
    signal and_ln414_fu_261_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal xor_ln414_fu_267_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal select_ln414_4_fu_237_p3 : STD_LOGIC_VECTOR (111 downto 0);
    signal and_ln414_3_fu_273_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal and_ln414_4_fu_279_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal xor_ln54_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_1_i_i_i_fu_339_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_i_i_i_fu_329_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_84 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_metaWritten_1_flag_0_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_84)) then
                if (((or_ln54_fu_319_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_metaWritten_1_flag_0_reg_152 <= ap_const_lv1_0;
                elsif (((or_ln54_fu_319_p2 = ap_const_lv1_0) and (tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_metaWritten_1_flag_0_reg_152 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_metaWritten_1_flag_0_reg_152 <= ap_phi_reg_pp0_iter0_metaWritten_1_flag_0_reg_152;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_phi_ln73_reg_143_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_84)) then
                if (((header_ready_load_load_fu_177_p1 = ap_const_lv1_0) and (tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_phi_ln73_reg_143 <= add_ln67_fu_297_p2;
                elsif (((header_ready_load_load_fu_177_p1 = ap_const_lv1_1) and (tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_phi_ln73_reg_143 <= ap_sig_allocacmp_header_idx_1_load;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_phi_ln73_reg_143 <= ap_phi_reg_pp0_iter0_phi_ln73_reg_143;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (header_ready_load_load_fu_177_p1 = ap_const_lv1_0) and (tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                header_header_V_1 <= p_Result_s_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_398 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                header_idx_1 <= select_ln62_fu_368_p3;
                header_ready <= and_ln62_fu_363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_398 = ap_const_lv1_1) and (or_ln62_fu_375_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                metaWritten_1 <= xor_ln62_fu_358_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_ln54_reg_438 <= or_ln54_fu_319_p2;
                or_ln73_reg_433 <= or_ln73_fu_303_p2;
                tmp_data_V_reg_402 <= s_axis_raw_TDATA;
                tmp_keep_V_reg_407 <= s_axis_raw_TKEEP;
                tmp_last_V_reg_412 <= s_axis_raw_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_398 <= tmp_nbreadreq_fu_90_p5;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Lo_assign_fu_185_p3 <= (ap_sig_allocacmp_header_idx_1_load & ap_const_lv9_0);
    add_ln67_fu_297_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ap_sig_allocacmp_header_idx_1_load));
    and_ln414_3_fu_273_p2 <= (xor_ln414_fu_267_p2 and header_header_V_1);
    and_ln414_4_fu_279_p2 <= (select_ln414_4_fu_237_p3 and and_ln414_fu_261_p2);
    and_ln414_fu_261_p2 <= (select_ln414_6_fu_253_p3 and select_ln414_5_fu_245_p3);
    and_ln62_fu_363_p2 <= (xor_ln62_fu_358_p2 and or_ln73_reg_433);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, s_axis_raw_TVALID, tmp_nbreadreq_fu_90_p5, etherTypeFifo_V_V_full_n, tmp_reg_398, ap_predicate_op49_write_state2, io_acc_block_signal_op51)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_reg_398 = ap_const_lv1_1) and (io_acc_block_signal_op51 = ap_const_logic_0)) or ((etherTypeFifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op49_write_state2 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1) and (s_axis_raw_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, s_axis_raw_TVALID, tmp_nbreadreq_fu_90_p5, etherTypeFifo_V_V_full_n, tmp_reg_398, ap_predicate_op49_write_state2, io_acc_block_signal_op51)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_reg_398 = ap_const_lv1_1) and (io_acc_block_signal_op51 = ap_const_logic_0)) or ((etherTypeFifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op49_write_state2 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1) and (s_axis_raw_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, s_axis_raw_TVALID, tmp_nbreadreq_fu_90_p5, etherTypeFifo_V_V_full_n, tmp_reg_398, ap_predicate_op49_write_state2, io_acc_block_signal_op51)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_reg_398 = ap_const_lv1_1) and (io_acc_block_signal_op51 = ap_const_logic_0)) or ((etherTypeFifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op49_write_state2 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1) and (s_axis_raw_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, s_axis_raw_TVALID, tmp_nbreadreq_fu_90_p5)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1) and (s_axis_raw_TVALID = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(etherTypeFifo_V_V_full_n, tmp_reg_398, ap_predicate_op49_write_state2, io_acc_block_signal_op51)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((tmp_reg_398 = ap_const_lv1_1) and (io_acc_block_signal_op51 = ap_const_logic_0)) or ((etherTypeFifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op49_write_state2 = ap_const_boolean_1)));
    end process;


    ap_condition_84_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_84 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_write_flag_1_i_i_phi_fu_135_p4_assign_proc : process(tmp_nbreadreq_fu_90_p5, header_ready_load_load_fu_177_p1, ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_132)
    begin
        if ((tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1)) then
            if ((header_ready_load_load_fu_177_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_write_flag_1_i_i_phi_fu_135_p4 <= ap_const_lv1_1;
            elsif ((header_ready_load_load_fu_177_p1 = ap_const_lv1_1)) then 
                ap_phi_mux_write_flag_1_i_i_phi_fu_135_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_write_flag_1_i_i_phi_fu_135_p4 <= ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_132;
            end if;
        else 
            ap_phi_mux_write_flag_1_i_i_phi_fu_135_p4 <= ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_132;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_metaWritten_1_flag_0_reg_152 <= "X";
    ap_phi_reg_pp0_iter0_phi_ln73_reg_143 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_132 <= "X";

    ap_predicate_op49_write_state2_assign_proc : process(tmp_reg_398, or_ln54_reg_438)
    begin
                ap_predicate_op49_write_state2 <= ((or_ln54_reg_438 = ap_const_lv1_0) and (tmp_reg_398 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_header_idx_1_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_398, header_idx_1, ap_block_pp0_stage0, select_ln62_fu_368_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_398 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_header_idx_1_load <= select_ln62_fu_368_p3;
        else 
            ap_sig_allocacmp_header_idx_1_load <= header_idx_1;
        end if; 
    end process;


    ap_sig_allocacmp_header_ready_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_398, header_ready, ap_block_pp0_stage0, and_ln62_fu_363_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_398 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_header_ready_load <= and_ln62_fu_363_p2;
        else 
            ap_sig_allocacmp_header_ready_load <= header_ready;
        end if; 
    end process;


    ap_sig_allocacmp_metaWritten_1_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_398, metaWritten_1, ap_block_pp0_stage0, xor_ln62_fu_358_p2, or_ln62_fu_375_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_398 = ap_const_lv1_1) and (or_ln62_fu_375_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_metaWritten_1_load <= xor_ln62_fu_358_p2;
        else 
            ap_sig_allocacmp_metaWritten_1_load <= metaWritten_1;
        end if; 
    end process;


    ethDataFifo_V_data_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_398, ethDataFifo_V_data_V_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_398 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ethDataFifo_V_data_V_blk_n <= ethDataFifo_V_data_V_full_n;
        else 
            ethDataFifo_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ethDataFifo_V_data_V_din <= tmp_data_V_reg_402;

    ethDataFifo_V_data_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_398, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_398 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ethDataFifo_V_data_V_write <= ap_const_logic_1;
        else 
            ethDataFifo_V_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    ethDataFifo_V_keep_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_398, ethDataFifo_V_keep_V_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_398 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ethDataFifo_V_keep_V_blk_n <= ethDataFifo_V_keep_V_full_n;
        else 
            ethDataFifo_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ethDataFifo_V_keep_V_din <= tmp_keep_V_reg_407;

    ethDataFifo_V_keep_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_398, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_398 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ethDataFifo_V_keep_V_write <= ap_const_logic_1;
        else 
            ethDataFifo_V_keep_V_write <= ap_const_logic_0;
        end if; 
    end process;


    ethDataFifo_V_last_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_398, ethDataFifo_V_last_V_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_398 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ethDataFifo_V_last_V_blk_n <= ethDataFifo_V_last_V_full_n;
        else 
            ethDataFifo_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ethDataFifo_V_last_V_din <= tmp_last_V_reg_412;

    ethDataFifo_V_last_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_398, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_398 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ethDataFifo_V_last_V_write <= ap_const_logic_1;
        else 
            ethDataFifo_V_last_V_write <= ap_const_logic_0;
        end if; 
    end process;


    etherTypeFifo_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, etherTypeFifo_V_V_full_n, ap_predicate_op49_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op49_write_state2 = ap_const_boolean_1))) then 
            etherTypeFifo_V_V_blk_n <= etherTypeFifo_V_V_full_n;
        else 
            etherTypeFifo_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    etherTypeFifo_V_V_din <= (p_Result_2_1_i_i_i_fu_339_p4 & p_Result_2_i_i_i_fu_329_p4);

    etherTypeFifo_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op49_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op49_write_state2 = ap_const_boolean_1))) then 
            etherTypeFifo_V_V_write <= ap_const_logic_1;
        else 
            etherTypeFifo_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    header_ready_load_load_fu_177_p1 <= ap_sig_allocacmp_header_ready_load;
    icmp_ln414_fu_201_p2 <= "1" when (unsigned(Lo_assign_fu_185_p3) > unsigned(ap_const_lv25_6F)) else "0";
    io_acc_block_signal_op51 <= (ethDataFifo_V_last_V_full_n and ethDataFifo_V_keep_V_full_n and ethDataFifo_V_data_V_full_n);
    or_ln54_fu_319_p2 <= (xor_ln54_fu_313_p2 or ap_sig_allocacmp_metaWritten_1_load);
    or_ln62_fu_375_p2 <= (tmp_last_V_reg_412 or ap_phi_reg_pp0_iter1_metaWritten_1_flag_0_reg_152);
    or_ln73_fu_303_p2 <= (ap_sig_allocacmp_header_ready_load or ap_phi_mux_write_flag_1_i_i_phi_fu_135_p4);
    p_Result_2_1_i_i_i_fu_339_p4 <= header_header_V_1(103 downto 96);
    p_Result_2_i_i_i_fu_329_p4 <= header_header_V_1(111 downto 104);
    p_Result_s_fu_285_p2 <= (and_ln414_4_fu_279_p2 or and_ln414_3_fu_273_p2);

    s_axis_raw_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, s_axis_raw_TVALID, tmp_nbreadreq_fu_90_p5, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_axis_raw_TDATA_blk_n <= s_axis_raw_TVALID;
        else 
            s_axis_raw_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    s_axis_raw_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_90_p5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_90_p5 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_axis_raw_TREADY <= ap_const_logic_1;
        else 
            s_axis_raw_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    select_ln414_4_fu_237_p3 <= 
        tmp_88_fu_227_p4 when (icmp_ln414_fu_201_p2(0) = '1') else 
        tmp_V_2_fu_193_p1;
    select_ln414_5_fu_245_p3 <= 
        ap_const_lv112_8000000000000000000000000000 when (icmp_ln414_fu_201_p2(0) = '1') else 
        ap_const_lv112_FFFFFFFFFFFFFFFFFFFFFFFFFFFF;
    select_ln414_6_fu_253_p3 <= 
        ap_const_lv112_1 when (icmp_ln414_fu_201_p2(0) = '1') else 
        ap_const_lv112_FFFFFFFFFFFFFFFFFFFFFFFFFFFF;
    select_ln414_fu_219_p3 <= 
        st3_fu_211_p3 when (icmp_ln414_fu_201_p2(0) = '1') else 
        tmp_V_2_fu_193_p1;
    select_ln62_fu_368_p3 <= 
        ap_const_lv16_0 when (tmp_last_V_reg_412(0) = '1') else 
        ap_phi_reg_pp0_iter1_phi_ln73_reg_143;
    st3_fu_211_p3 <= (trunc_ln414_fu_207_p1 & ap_const_lv111_0);
    
    tmp_88_fu_227_p4_proc : process(select_ln414_fu_219_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(112+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(112+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(112 - 1 downto 0);
    variable tmp_88_fu_227_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(112 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(112 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(112 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_6F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := select_ln414_fu_219_p3;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(112-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(112-1-unsigned(ap_const_lv32_6F(7-1 downto 0)));
            for tmp_88_fu_227_p4_i in 0 to 112-1 loop
                v0_cpy(tmp_88_fu_227_p4_i) := select_ln414_fu_219_p3(112-1-tmp_88_fu_227_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(112-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_88_fu_227_p4 <= resvalue(112-1 downto 0);
    end process;

    tmp_V_2_fu_193_p1 <= s_axis_raw_TDATA(112 - 1 downto 0);
    tmp_nbreadreq_fu_90_p5 <= (0=>(s_axis_raw_TVALID), others=>'-');
    trunc_ln414_fu_207_p1 <= s_axis_raw_TDATA(1 - 1 downto 0);
    xor_ln414_fu_267_p2 <= (ap_const_lv112_FFFFFFFFFFFFFFFFFFFFFFFFFFFF xor and_ln414_fu_261_p2);
    xor_ln54_fu_313_p2 <= (or_ln73_fu_303_p2 xor ap_const_lv1_1);
    xor_ln62_fu_358_p2 <= (tmp_last_V_reg_412 xor ap_const_lv1_1);
end behav;
