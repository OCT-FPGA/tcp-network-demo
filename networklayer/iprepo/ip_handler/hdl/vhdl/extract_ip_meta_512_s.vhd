-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity extract_ip_meta_512_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ipDataFifo_V_dout : IN STD_LOGIC_VECTOR (576 downto 0);
    ipDataFifo_V_empty_n : IN STD_LOGIC;
    ipDataFifo_V_read : OUT STD_LOGIC;
    ipDataMetaFifo_V_dat_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    ipDataMetaFifo_V_dat_full_n : IN STD_LOGIC;
    ipDataMetaFifo_V_dat_write : OUT STD_LOGIC;
    ipDataMetaFifo_V_kee_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    ipDataMetaFifo_V_kee_full_n : IN STD_LOGIC;
    ipDataMetaFifo_V_kee_write : OUT STD_LOGIC;
    ipDataMetaFifo_V_las_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    ipDataMetaFifo_V_las_full_n : IN STD_LOGIC;
    ipDataMetaFifo_V_las_write : OUT STD_LOGIC;
    validIpAddressFifo_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    validIpAddressFifo_V_full_n : IN STD_LOGIC;
    validIpAddressFifo_V_write : OUT STD_LOGIC;
    ipv4ProtocolFifo_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    ipv4ProtocolFifo_V_V_full_n : IN STD_LOGIC;
    ipv4ProtocolFifo_V_V_write : OUT STD_LOGIC;
    myIpAddress_V : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of extract_ip_meta_512_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv25_9F : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010011111";
    constant ap_const_lv159_lc_1 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv160_lc_3 : STD_LOGIC_VECTOR (159 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv160_lc_4 : STD_LOGIC_VECTOR (159 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv160_lc_5 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_23F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111111";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_108_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op47 : STD_LOGIC;
    signal tmp_reg_443 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln153_reg_472 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op53_write_state2 : BOOLEAN;
    signal ap_predicate_op55_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal header_ready_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal header_idx : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal header_header_V : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000101";
    signal metaWritten : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ipDataFifo_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ipDataMetaFifo_V_dat_blk_n : STD_LOGIC;
    signal ipDataMetaFifo_V_kee_blk_n : STD_LOGIC;
    signal ipDataMetaFifo_V_las_blk_n : STD_LOGIC;
    signal validIpAddressFifo_V_blk_n : STD_LOGIC;
    signal ipv4ProtocolFifo_V_V_blk_n : STD_LOGIC;
    signal tmp14_reg_447 : STD_LOGIC_VECTOR (576 downto 0);
    signal add_ln67_fu_302_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal header_ready_1_load_load_fu_182_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_reg_467 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln153_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_149 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln73_reg_160 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln73_reg_160 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_metaWritten_flag_0_i_reg_169 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_169 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln162_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_header_ready_1_load : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln162_fu_406_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_header_idx_load : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_290_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal xor_ln162_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln162_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_metaWritten_load : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_last_V_fu_344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Lo_assign_fu_190_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln414_fu_212_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal st4_fu_216_p3 : STD_LOGIC_VECTOR (159 downto 0);
    signal tmp_V_1_fu_198_p1 : STD_LOGIC_VECTOR (159 downto 0);
    signal select_ln414_fu_224_p3 : STD_LOGIC_VECTOR (159 downto 0);
    signal tmp_78_fu_232_p4 : STD_LOGIC_VECTOR (159 downto 0);
    signal select_ln414_2_fu_250_p3 : STD_LOGIC_VECTOR (159 downto 0);
    signal select_ln414_3_fu_258_p3 : STD_LOGIC_VECTOR (159 downto 0);
    signal and_ln414_fu_266_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal xor_ln414_fu_272_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal select_ln414_1_fu_242_p3 : STD_LOGIC_VECTOR (159 downto 0);
    signal and_ln414_1_fu_278_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal and_ln414_2_fu_284_p2 : STD_LOGIC_VECTOR (159 downto 0);
    signal xor_ln153_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dstIpAddress_V_fu_356_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_96 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_96)) then
                if (((or_ln153_fu_324_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_169 <= ap_const_lv1_0;
                elsif (((or_ln153_fu_324_p2 = ap_const_lv1_0) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_169 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_169 <= ap_phi_reg_pp0_iter0_metaWritten_flag_0_i_reg_169;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_phi_ln73_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_96)) then
                if (((header_ready_1_load_load_fu_182_p1 = ap_const_lv1_0) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_phi_ln73_reg_160 <= add_ln67_fu_302_p2;
                elsif (((header_ready_1_load_load_fu_182_p1 = ap_const_lv1_1) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_phi_ln73_reg_160 <= ap_sig_allocacmp_header_idx_load;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_phi_ln73_reg_160 <= ap_phi_reg_pp0_iter0_phi_ln73_reg_160;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (header_ready_1_load_load_fu_182_p1 = ap_const_lv1_0) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                header_header_V <= p_Result_s_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_443 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                header_idx <= select_ln162_fu_406_p3;
                header_ready_1 <= and_ln162_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_443 = ap_const_lv1_1) and (or_ln162_fu_414_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                metaWritten <= xor_ln162_fu_395_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_ln153_reg_472 <= or_ln153_fu_324_p2;
                or_ln73_reg_467 <= or_ln73_fu_308_p2;
                tmp14_reg_447 <= ipDataFifo_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_443 <= tmp_nbreadreq_fu_108_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Lo_assign_fu_190_p3 <= (ap_sig_allocacmp_header_idx_load & ap_const_lv9_0);
    add_ln67_fu_302_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ap_sig_allocacmp_header_idx_load));
    and_ln162_fu_401_p2 <= (xor_ln162_fu_395_p2 and or_ln73_reg_467);
    and_ln414_1_fu_278_p2 <= (xor_ln414_fu_272_p2 and header_header_V);
    and_ln414_2_fu_284_p2 <= (select_ln414_1_fu_242_p3 and and_ln414_fu_266_p2);
    and_ln414_fu_266_p2 <= (select_ln414_3_fu_258_p3 and select_ln414_2_fu_250_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ipDataFifo_V_empty_n, tmp_nbreadreq_fu_108_p3, io_acc_block_signal_op47, tmp_reg_443, validIpAddressFifo_V_full_n, ap_predicate_op53_write_state2, ipv4ProtocolFifo_V_V_full_n, ap_predicate_op55_write_state2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ipv4ProtocolFifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op55_write_state2 = ap_const_boolean_1)) or ((validIpAddressFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1)) or ((tmp_reg_443 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (ipDataFifo_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ipDataFifo_V_empty_n, tmp_nbreadreq_fu_108_p3, io_acc_block_signal_op47, tmp_reg_443, validIpAddressFifo_V_full_n, ap_predicate_op53_write_state2, ipv4ProtocolFifo_V_V_full_n, ap_predicate_op55_write_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ipv4ProtocolFifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op55_write_state2 = ap_const_boolean_1)) or ((validIpAddressFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1)) or ((tmp_reg_443 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (ipDataFifo_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ipDataFifo_V_empty_n, tmp_nbreadreq_fu_108_p3, io_acc_block_signal_op47, tmp_reg_443, validIpAddressFifo_V_full_n, ap_predicate_op53_write_state2, ipv4ProtocolFifo_V_V_full_n, ap_predicate_op55_write_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ipv4ProtocolFifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op55_write_state2 = ap_const_boolean_1)) or ((validIpAddressFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1)) or ((tmp_reg_443 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (ipDataFifo_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, ipDataFifo_V_empty_n, tmp_nbreadreq_fu_108_p3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (ipDataFifo_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op47, tmp_reg_443, validIpAddressFifo_V_full_n, ap_predicate_op53_write_state2, ipv4ProtocolFifo_V_V_full_n, ap_predicate_op55_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ipv4ProtocolFifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op55_write_state2 = ap_const_boolean_1)) or ((validIpAddressFifo_V_full_n = ap_const_logic_0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1)) or ((tmp_reg_443 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)));
    end process;


    ap_condition_96_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_96 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4_assign_proc : process(tmp_nbreadreq_fu_108_p3, header_ready_1_load_load_fu_182_p1, ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_149)
    begin
        if ((tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1)) then
            if ((header_ready_1_load_load_fu_182_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4 <= ap_const_lv1_1;
            elsif ((header_ready_1_load_load_fu_182_p1 = ap_const_lv1_1)) then 
                ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4 <= ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_149;
            end if;
        else 
            ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4 <= ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_149;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_metaWritten_flag_0_i_reg_169 <= "X";
    ap_phi_reg_pp0_iter0_phi_ln73_reg_160 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_write_flag_1_i_i_reg_149 <= "X";

    ap_predicate_op53_write_state2_assign_proc : process(tmp_reg_443, or_ln153_reg_472)
    begin
                ap_predicate_op53_write_state2 <= ((or_ln153_reg_472 = ap_const_lv1_0) and (tmp_reg_443 = ap_const_lv1_1));
    end process;


    ap_predicate_op55_write_state2_assign_proc : process(tmp_reg_443, or_ln153_reg_472)
    begin
                ap_predicate_op55_write_state2 <= ((or_ln153_reg_472 = ap_const_lv1_0) and (tmp_reg_443 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_header_idx_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_443, header_idx, ap_block_pp0_stage0, select_ln162_fu_406_p3)
    begin
        if (((tmp_reg_443 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_header_idx_load <= select_ln162_fu_406_p3;
        else 
            ap_sig_allocacmp_header_idx_load <= header_idx;
        end if; 
    end process;


    ap_sig_allocacmp_header_ready_1_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_443, header_ready_1, ap_block_pp0_stage0, and_ln162_fu_401_p2)
    begin
        if (((tmp_reg_443 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_header_ready_1_load <= and_ln162_fu_401_p2;
        else 
            ap_sig_allocacmp_header_ready_1_load <= header_ready_1;
        end if; 
    end process;


    ap_sig_allocacmp_metaWritten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_443, metaWritten, ap_block_pp0_stage0, xor_ln162_fu_395_p2, or_ln162_fu_414_p2)
    begin
        if (((tmp_reg_443 = ap_const_lv1_1) and (or_ln162_fu_414_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_metaWritten_load <= xor_ln162_fu_395_p2;
        else 
            ap_sig_allocacmp_metaWritten_load <= metaWritten;
        end if; 
    end process;

    dstIpAddress_V_fu_356_p4 <= header_header_V(159 downto 128);
    header_ready_1_load_load_fu_182_p1 <= ap_sig_allocacmp_header_ready_1_load;
    icmp_ln414_fu_206_p2 <= "1" when (unsigned(Lo_assign_fu_190_p3) > unsigned(ap_const_lv25_9F)) else "0";
    icmp_ln879_6_fu_371_p2 <= "1" when (dstIpAddress_V_fu_356_p4 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln879_fu_366_p2 <= "1" when (dstIpAddress_V_fu_356_p4 = myIpAddress_V) else "0";
    io_acc_block_signal_op47 <= (ipDataMetaFifo_V_las_full_n and ipDataMetaFifo_V_kee_full_n and ipDataMetaFifo_V_dat_full_n);

    ipDataFifo_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ipDataFifo_V_empty_n, tmp_nbreadreq_fu_108_p3, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ipDataFifo_V_blk_n <= ipDataFifo_V_empty_n;
        else 
            ipDataFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ipDataFifo_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_108_p3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_108_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ipDataFifo_V_read <= ap_const_logic_1;
        else 
            ipDataFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;


    ipDataMetaFifo_V_dat_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ipDataMetaFifo_V_dat_full_n, tmp_reg_443, ap_block_pp0_stage0)
    begin
        if (((tmp_reg_443 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ipDataMetaFifo_V_dat_blk_n <= ipDataMetaFifo_V_dat_full_n;
        else 
            ipDataMetaFifo_V_dat_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ipDataMetaFifo_V_dat_din <= tmp14_reg_447(512 - 1 downto 0);

    ipDataMetaFifo_V_dat_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_443, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_443 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ipDataMetaFifo_V_dat_write <= ap_const_logic_1;
        else 
            ipDataMetaFifo_V_dat_write <= ap_const_logic_0;
        end if; 
    end process;


    ipDataMetaFifo_V_kee_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ipDataMetaFifo_V_kee_full_n, tmp_reg_443, ap_block_pp0_stage0)
    begin
        if (((tmp_reg_443 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ipDataMetaFifo_V_kee_blk_n <= ipDataMetaFifo_V_kee_full_n;
        else 
            ipDataMetaFifo_V_kee_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ipDataMetaFifo_V_kee_din <= tmp14_reg_447(575 downto 512);

    ipDataMetaFifo_V_kee_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_443, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_443 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ipDataMetaFifo_V_kee_write <= ap_const_logic_1;
        else 
            ipDataMetaFifo_V_kee_write <= ap_const_logic_0;
        end if; 
    end process;


    ipDataMetaFifo_V_las_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ipDataMetaFifo_V_las_full_n, tmp_reg_443, ap_block_pp0_stage0)
    begin
        if (((tmp_reg_443 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ipDataMetaFifo_V_las_blk_n <= ipDataMetaFifo_V_las_full_n;
        else 
            ipDataMetaFifo_V_las_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ipDataMetaFifo_V_las_din <= tmp14_reg_447(576 downto 576);

    ipDataMetaFifo_V_las_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_443, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_443 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ipDataMetaFifo_V_las_write <= ap_const_logic_1;
        else 
            ipDataMetaFifo_V_las_write <= ap_const_logic_0;
        end if; 
    end process;


    ipv4ProtocolFifo_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ipv4ProtocolFifo_V_V_full_n, ap_predicate_op55_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op55_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ipv4ProtocolFifo_V_V_blk_n <= ipv4ProtocolFifo_V_V_full_n;
        else 
            ipv4ProtocolFifo_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ipv4ProtocolFifo_V_V_din <= header_header_V(79 downto 72);

    ipv4ProtocolFifo_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op55_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op55_write_state2 = ap_const_boolean_1))) then 
            ipv4ProtocolFifo_V_V_write <= ap_const_logic_1;
        else 
            ipv4ProtocolFifo_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln153_fu_324_p2 <= (xor_ln153_fu_318_p2 or ap_sig_allocacmp_metaWritten_load);
    or_ln162_fu_414_p2 <= (tmp_last_V_fu_344_p3 or ap_phi_reg_pp0_iter1_metaWritten_flag_0_i_reg_169);
    or_ln73_fu_308_p2 <= (ap_sig_allocacmp_header_ready_1_load or ap_phi_mux_write_flag_1_i_i_phi_fu_152_p4);
    p_Result_s_fu_290_p2 <= (and_ln414_2_fu_284_p2 or and_ln414_1_fu_278_p2);
    select_ln162_fu_406_p3 <= 
        ap_const_lv16_0 when (tmp_last_V_fu_344_p3(0) = '1') else 
        ap_phi_reg_pp0_iter1_phi_ln73_reg_160;
    select_ln414_1_fu_242_p3 <= 
        tmp_78_fu_232_p4 when (icmp_ln414_fu_206_p2(0) = '1') else 
        tmp_V_1_fu_198_p1;
    select_ln414_2_fu_250_p3 <= 
        ap_const_lv160_lc_3 when (icmp_ln414_fu_206_p2(0) = '1') else 
        ap_const_lv160_lc_4;
    select_ln414_3_fu_258_p3 <= 
        ap_const_lv160_lc_5 when (icmp_ln414_fu_206_p2(0) = '1') else 
        ap_const_lv160_lc_4;
    select_ln414_fu_224_p3 <= 
        st4_fu_216_p3 when (icmp_ln414_fu_206_p2(0) = '1') else 
        tmp_V_1_fu_198_p1;
    st4_fu_216_p3 <= (trunc_ln414_fu_212_p1 & ap_const_lv159_lc_1);
    
    tmp_78_fu_232_p4_proc : process(select_ln414_fu_224_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(160+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(160+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(160 - 1 downto 0);
    variable tmp_78_fu_232_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(160 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(160 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(160 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_9F(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := select_ln414_fu_224_p3;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(160-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(160-1-unsigned(ap_const_lv32_9F(8-1 downto 0)));
            for tmp_78_fu_232_p4_i in 0 to 160-1 loop
                v0_cpy(tmp_78_fu_232_p4_i) := select_ln414_fu_224_p3(160-1-tmp_78_fu_232_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(160-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_78_fu_232_p4 <= resvalue(160-1 downto 0);
    end process;

    tmp_V_1_fu_198_p1 <= ipDataFifo_V_dout(160 - 1 downto 0);
    tmp_last_V_fu_344_p3 <= tmp14_reg_447(576 downto 576);
    tmp_nbreadreq_fu_108_p3 <= (0=>(ipDataFifo_V_empty_n), others=>'-');
    trunc_ln414_fu_212_p1 <= ipDataFifo_V_dout(1 - 1 downto 0);

    validIpAddressFifo_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, validIpAddressFifo_V_full_n, ap_predicate_op53_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            validIpAddressFifo_V_blk_n <= validIpAddressFifo_V_full_n;
        else 
            validIpAddressFifo_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    validIpAddressFifo_V_din <= (icmp_ln879_fu_366_p2 or icmp_ln879_6_fu_371_p2);

    validIpAddressFifo_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op53_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op53_write_state2 = ap_const_boolean_1))) then 
            validIpAddressFifo_V_write <= ap_const_logic_1;
        else 
            validIpAddressFifo_V_write <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln153_fu_318_p2 <= (or_ln73_fu_308_p2 xor ap_const_lv1_1);
    xor_ln162_fu_395_p2 <= (tmp_last_V_fu_344_p3 xor ap_const_lv1_1);
    xor_ln414_fu_272_p2 <= (ap_const_lv160_lc_4 xor and_ln414_fu_266_p2);
end behav;
